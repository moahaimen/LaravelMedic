{"version":3,"sources":["./node_modules/ng2-file-upload/__ivy_ngcc__/fesm2015/ng2-file-upload.js","./src/app/models/attachment.model.ts","./src/app/shared/attachments/attachments-uploader/attachments-uploader.component.ts","./src/app/shared/attachments/attachments-uploader/attachments-uploader.component.html","./src/app/shared/attachments/attachments-viewer/attachments-viewer.component.html","./src/app/shared/attachments/attachments-viewer/attachments-viewer.component.ts","./src/app/shared/attachments/attachments.module.ts"],"names":["FileLikeObject","fileOrInput","node","this","rawFile","fakePathOrObject","nodeName","prop","attr","find","value","path","lastModifiedDate","size","type","slice","lastIndexOf","toLowerCase","name","object","FileItem","uploader","some","options","url","headers","withCredentials","formData","isReady","isUploading","isUploaded","isSuccess","isCancel","isError","progress","index","file","_file","method","alias","itemAlias","uploadItem","e","_onCompleteItem","_onErrorItem","cancelItem","removeFromQueue","form","response","status","onBeforeUpload","onBuildForm","onProgress","onSuccess","onError","onCancel","onComplete","removeAfterUpload","remove","_nextIndex","FileType","mimeClass","mime_psd","indexOf","match","mime_compress","mime_doc","mime_xsl","mime_ppt","fileTypeDetection","inputFilename","types","chunks","split","length","extension","undefined","FileUploader","queue","autoUpload","isHTML5","filters","disableMultipart","formatDataFunction","item","formatDataFunctionIsAsync","setOptions","Object","assign","authToken","authTokenHeader","unshift","fn","_queueLimitFilter","maxFileSize","_fileSizeFilter","allowedFileType","_fileTypeFilter","allowedMimeType","_mimeTypeFilter","i","files","list","push","arrayOfFilters","_getFilters","count","addedFileItems","map","temp","_isValidFile","fileItem","_onAfterAddingFile","_onWhenAddingFileFailed","_failFilterIndex","_onAfterAddingAll","_getTotalProgress","_render","uploadAll","getIndexOfItem","cancel","splice","transport","_prepareToUploading","_xhr","_form","abort","items","getNotUploadedItems","filter","upload","File","isFile","sort","item1","item2","fileItems","getMimeClass","_onError","onErrorItem","_onComplete","onCompleteItem","nextItem","getReadyItems","onCompleteAll","parsedHeaders","sendable","that","xhr","XMLHttpRequest","_onBeforeUploadItem","TypeError","FormData","_onBuildItemForm","appendFile","append","parametersBeforeFiles","additionalParameter","keys","forEach","key","paramVal","replace","onprogress","event","Math","round","lengthComputable","loaded","total","_onProgressItem","onload","_parseHeaders","getAllResponseHeaders","_transformResponse","_isSuccessCode","onerror","onabort","_onCancelItem","open","header","setRequestHeader","onreadystatechange","readyState","DONE","emit","responseText","then","result","send","JSON","stringify","notUploaded","ratio","Array","isArray","names","queueLimit","every","call","val","parsed","line","trim","onWhenAddingFileFailed","onAfterAddingFile","onAfterAddingAll","_onBeforeUpload","onBeforeUploadItem","_onBuildForm","onBuildItemForm","_onProgress","onProgressItem","onProgressAll","_onSuccess","onSuccessItem","_onCancel","onCancelItem","FileSelectDirective","element","onFileSelected","nativeElement","attributes","multiple","getOptions","getFilters","addToQueue","isEmptyAfterSelection","ɵfac","t","ɵdir","selectors","hostBindings","rf","ctx","onChange","inputs","outputs","FileUploadModule","ɵmod","ɵinj","factory","imports","Attachment","id","AttachmentsUploaderComponent","auth","notifier","valueChange","attachments","a","Number","parseInt","toString","initializeUploader","prepareUrl","appUser","token","hasBaseDropZoneOver","hasAnotherDropZoneOver","limit","warning","res","parse","attachment","success","next","ids","entities","error","console","log","AttachmentsViewerComponent","AttachmentsModule"],"mappings":"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","file":"3.d30fbad9621331adb6e5.js","sourcesContent":["import { EventEmitter, Directive, ElementRef, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} node\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction isElement(node) {\n    return !!(node && (node.nodeName || node.prop && node.attr && node.find));\n}\nclass FileLikeObject {\n    /**\n     * @param {?} fileOrInput\n     */\n    constructor(fileOrInput) {\n        this.rawFile = fileOrInput;\n        /** @type {?} */\n        let isInput = isElement(fileOrInput);\n        /** @type {?} */\n        let fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\n        /** @type {?} */\n        let postfix = typeof fakePathOrObject === 'string' ? 'FakePath' : 'Object';\n        /** @type {?} */\n        let method = '_createFrom' + postfix;\n        ((/** @type {?} */ (this)))[method](fakePathOrObject);\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    _createFromFakePath(path) {\n        this.lastModifiedDate = void 0;\n        this.size = void 0;\n        this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\n        this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n    }\n    /**\n     * @param {?} object\n     * @return {?}\n     */\n    _createFromObject(object) {\n        this.size = object.size;\n        this.type = object.type;\n        this.name = object.name;\n    }\n}\nif (false) {\n    /** @type {?} */\n    FileLikeObject.prototype.lastModifiedDate;\n    /** @type {?} */\n    FileLikeObject.prototype.size;\n    /** @type {?} */\n    FileLikeObject.prototype.type;\n    /** @type {?} */\n    FileLikeObject.prototype.name;\n    /** @type {?} */\n    FileLikeObject.prototype.rawFile;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileItem {\n    /**\n     * @param {?} uploader\n     * @param {?} some\n     * @param {?} options\n     */\n    constructor(uploader, some, options) {\n        this.url = '/';\n        this.headers = [];\n        this.withCredentials = true;\n        this.formData = [];\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n        this.index = void 0;\n        this.uploader = uploader;\n        this.some = some;\n        this.options = options;\n        this.file = new FileLikeObject(some);\n        this._file = some;\n        if (uploader.options) {\n            this.method = uploader.options.method || 'POST';\n            this.alias = uploader.options.itemAlias || 'file';\n        }\n        this.url = uploader.options.url;\n    }\n    /**\n     * @return {?}\n     */\n    upload() {\n        try {\n            this.uploader.uploadItem(this);\n        }\n        catch (e) {\n            this.uploader._onCompleteItem(this, '', 0, {});\n            this.uploader._onErrorItem(this, '', 0, {});\n        }\n    }\n    /**\n     * @return {?}\n     */\n    cancel() {\n        this.uploader.cancelItem(this);\n    }\n    /**\n     * @return {?}\n     */\n    remove() {\n        this.uploader.removeFromQueue(this);\n    }\n    /**\n     * @return {?}\n     */\n    onBeforeUpload() {\n        return void 0;\n    }\n    /**\n     * @param {?} form\n     * @return {?}\n     */\n    onBuildForm(form) {\n        return { form };\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n    onProgress(progress) {\n        return { progress };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onSuccess(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onError(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onCancel(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onComplete(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @return {?}\n     */\n    _onBeforeUpload() {\n        this.isReady = true;\n        this.isUploading = true;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n        this.onBeforeUpload();\n    }\n    /**\n     * @param {?} form\n     * @return {?}\n     */\n    _onBuildForm(form) {\n        this.onBuildForm(form);\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n    _onProgress(progress) {\n        this.progress = progress;\n        this.onProgress(progress);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onSuccess(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = true;\n        this.isSuccess = true;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 100;\n        this.index = void 0;\n        this.onSuccess(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onError(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = true;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = true;\n        this.progress = 0;\n        this.index = void 0;\n        this.onError(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onCancel(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = true;\n        this.isError = false;\n        this.progress = 0;\n        this.index = void 0;\n        this.onCancel(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onComplete(response, status, headers) {\n        this.onComplete(response, status, headers);\n        if (this.uploader.options.removeAfterUpload) {\n            this.remove();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _prepareToUploading() {\n        this.index = this.index || ++this.uploader._nextIndex;\n        this.isReady = true;\n    }\n}\nif (false) {\n    /** @type {?} */\n    FileItem.prototype.file;\n    /** @type {?} */\n    FileItem.prototype._file;\n    /** @type {?} */\n    FileItem.prototype.alias;\n    /** @type {?} */\n    FileItem.prototype.url;\n    /** @type {?} */\n    FileItem.prototype.method;\n    /** @type {?} */\n    FileItem.prototype.headers;\n    /** @type {?} */\n    FileItem.prototype.withCredentials;\n    /** @type {?} */\n    FileItem.prototype.formData;\n    /** @type {?} */\n    FileItem.prototype.isReady;\n    /** @type {?} */\n    FileItem.prototype.isUploading;\n    /** @type {?} */\n    FileItem.prototype.isUploaded;\n    /** @type {?} */\n    FileItem.prototype.isSuccess;\n    /** @type {?} */\n    FileItem.prototype.isCancel;\n    /** @type {?} */\n    FileItem.prototype.isError;\n    /** @type {?} */\n    FileItem.prototype.progress;\n    /** @type {?} */\n    FileItem.prototype.index;\n    /** @type {?} */\n    FileItem.prototype._xhr;\n    /** @type {?} */\n    FileItem.prototype._form;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileItem.prototype.uploader;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileItem.prototype.some;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileItem.prototype.options;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileType {\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    static getMimeClass(file) {\n        /** @type {?} */\n        let mimeClass = 'application';\n        if (this.mime_psd.indexOf(file.type) !== -1) {\n            mimeClass = 'image';\n        }\n        else if (file.type.match('image.*')) {\n            mimeClass = 'image';\n        }\n        else if (file.type.match('video.*')) {\n            mimeClass = 'video';\n        }\n        else if (file.type.match('audio.*')) {\n            mimeClass = 'audio';\n        }\n        else if (file.type === 'application/pdf') {\n            mimeClass = 'pdf';\n        }\n        else if (this.mime_compress.indexOf(file.type) !== -1) {\n            mimeClass = 'compress';\n        }\n        else if (this.mime_doc.indexOf(file.type) !== -1) {\n            mimeClass = 'doc';\n        }\n        else if (this.mime_xsl.indexOf(file.type) !== -1) {\n            mimeClass = 'xls';\n        }\n        else if (this.mime_ppt.indexOf(file.type) !== -1) {\n            mimeClass = 'ppt';\n        }\n        if (mimeClass === 'application') {\n            mimeClass = this.fileTypeDetection(file.name);\n        }\n        return mimeClass;\n    }\n    /**\n     * @param {?} inputFilename\n     * @return {?}\n     */\n    static fileTypeDetection(inputFilename) {\n        /** @type {?} */\n        let types = {\n            'jpg': 'image',\n            'jpeg': 'image',\n            'tif': 'image',\n            'psd': 'image',\n            'bmp': 'image',\n            'png': 'image',\n            'nef': 'image',\n            'tiff': 'image',\n            'cr2': 'image',\n            'dwg': 'image',\n            'cdr': 'image',\n            'ai': 'image',\n            'indd': 'image',\n            'pin': 'image',\n            'cdp': 'image',\n            'skp': 'image',\n            'stp': 'image',\n            '3dm': 'image',\n            'mp3': 'audio',\n            'wav': 'audio',\n            'wma': 'audio',\n            'mod': 'audio',\n            'm4a': 'audio',\n            'compress': 'compress',\n            'zip': 'compress',\n            'rar': 'compress',\n            '7z': 'compress',\n            'lz': 'compress',\n            'z01': 'compress',\n            'bz2': 'compress',\n            'gz': 'compress',\n            'pdf': 'pdf',\n            'xls': 'xls',\n            'xlsx': 'xls',\n            'ods': 'xls',\n            'mp4': 'video',\n            'avi': 'video',\n            'wmv': 'video',\n            'mpg': 'video',\n            'mts': 'video',\n            'flv': 'video',\n            '3gp': 'video',\n            'vob': 'video',\n            'm4v': 'video',\n            'mpeg': 'video',\n            'm2ts': 'video',\n            'mov': 'video',\n            'doc': 'doc',\n            'docx': 'doc',\n            'eps': 'doc',\n            'txt': 'doc',\n            'odt': 'doc',\n            'rtf': 'doc',\n            'ppt': 'ppt',\n            'pptx': 'ppt',\n            'pps': 'ppt',\n            'ppsx': 'ppt',\n            'odp': 'ppt'\n        };\n        /** @type {?} */\n        let chunks = inputFilename.split('.');\n        if (chunks.length < 2) {\n            return 'application';\n        }\n        /** @type {?} */\n        let extension = chunks[chunks.length - 1].toLowerCase();\n        if (types[extension] === undefined) {\n            return 'application';\n        }\n        else {\n            return types[extension];\n        }\n    }\n}\n/*  MS office  */\nFileType.mime_doc = [\n    'application/msword',\n    'application/msword',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.template',\n    'application/vnd.ms-word.document.macroEnabled.12',\n    'application/vnd.ms-word.template.macroEnabled.12'\n];\nFileType.mime_xsl = [\n    'application/vnd.ms-excel',\n    'application/vnd.ms-excel',\n    'application/vnd.ms-excel',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.template',\n    'application/vnd.ms-excel.sheet.macroEnabled.12',\n    'application/vnd.ms-excel.template.macroEnabled.12',\n    'application/vnd.ms-excel.addin.macroEnabled.12',\n    'application/vnd.ms-excel.sheet.binary.macroEnabled.12'\n];\nFileType.mime_ppt = [\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    'application/vnd.openxmlformats-officedocument.presentationml.template',\n    'application/vnd.openxmlformats-officedocument.presentationml.slideshow',\n    'application/vnd.ms-powerpoint.addin.macroEnabled.12',\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n    'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'\n];\n/* PSD */\nFileType.mime_psd = [\n    'image/photoshop',\n    'image/x-photoshop',\n    'image/psd',\n    'application/photoshop',\n    'application/psd',\n    'zz-application/zz-winassoc-psd'\n];\n/* Compressed files */\nFileType.mime_compress = [\n    'application/x-gtar',\n    'application/x-gcompress',\n    'application/compress',\n    'application/x-tar',\n    'application/x-rar-compressed',\n    'application/octet-stream',\n    'application/x-zip-compressed',\n    'application/zip-compressed',\n    'application/x-7z-compressed',\n    'application/gzip',\n    'application/x-bzip2'\n];\nif (false) {\n    /** @type {?} */\n    FileType.mime_doc;\n    /** @type {?} */\n    FileType.mime_xsl;\n    /** @type {?} */\n    FileType.mime_ppt;\n    /** @type {?} */\n    FileType.mime_psd;\n    /** @type {?} */\n    FileType.mime_compress;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isFile(value) {\n    return (File && value instanceof File);\n}\n/**\n * @record\n */\nfunction Headers() { }\nif (false) {\n    /** @type {?} */\n    Headers.prototype.name;\n    /** @type {?} */\n    Headers.prototype.value;\n}\n/**\n * @record\n */\nfunction FileUploaderOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.allowedMimeType;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.allowedFileType;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.autoUpload;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.isHTML5;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.filters;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.headers;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.method;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.authToken;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.maxFileSize;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.queueLimit;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.removeAfterUpload;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.url;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.disableMultipart;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.itemAlias;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.authTokenHeader;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.additionalParameter;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.parametersBeforeFiles;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.formatDataFunction;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.formatDataFunctionIsAsync;\n}\nclass FileUploader {\n    /**\n     * @param {?} options\n     */\n    constructor(options) {\n        this.isUploading = false;\n        this.queue = [];\n        this.progress = 0;\n        this._nextIndex = 0;\n        this.options = {\n            autoUpload: false,\n            isHTML5: true,\n            filters: [],\n            removeAfterUpload: false,\n            disableMultipart: false,\n            formatDataFunction: (/**\n             * @param {?} item\n             * @return {?}\n             */\n            (item) => item._file),\n            formatDataFunctionIsAsync: false\n        };\n        this.setOptions(options);\n        this.response = new EventEmitter();\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    setOptions(options) {\n        this.options = Object.assign(this.options, options);\n        this.authToken = this.options.authToken;\n        this.authTokenHeader = this.options.authTokenHeader || 'Authorization';\n        this.autoUpload = this.options.autoUpload;\n        this.options.filters.unshift({ name: 'queueLimit', fn: this._queueLimitFilter });\n        if (this.options.maxFileSize) {\n            this.options.filters.unshift({ name: 'fileSize', fn: this._fileSizeFilter });\n        }\n        if (this.options.allowedFileType) {\n            this.options.filters.unshift({ name: 'fileType', fn: this._fileTypeFilter });\n        }\n        if (this.options.allowedMimeType) {\n            this.options.filters.unshift({ name: 'mimeType', fn: this._mimeTypeFilter });\n        }\n        for (let i = 0; i < this.queue.length; i++) {\n            this.queue[i].url = this.options.url;\n        }\n    }\n    /**\n     * @param {?} files\n     * @param {?=} options\n     * @param {?=} filters\n     * @return {?}\n     */\n    addToQueue(files, options, filters) {\n        /** @type {?} */\n        let list = [];\n        for (let file of files) {\n            list.push(file);\n        }\n        /** @type {?} */\n        let arrayOfFilters = this._getFilters(filters);\n        /** @type {?} */\n        let count = this.queue.length;\n        /** @type {?} */\n        let addedFileItems = [];\n        list.map((/**\n         * @param {?} some\n         * @return {?}\n         */\n        (some) => {\n            if (!options) {\n                options = this.options;\n            }\n            /** @type {?} */\n            let temp = new FileLikeObject(some);\n            if (this._isValidFile(temp, arrayOfFilters, options)) {\n                /** @type {?} */\n                let fileItem = new FileItem(this, some, options);\n                addedFileItems.push(fileItem);\n                this.queue.push(fileItem);\n                this._onAfterAddingFile(fileItem);\n            }\n            else {\n                /** @type {?} */\n                let filter = arrayOfFilters[this._failFilterIndex];\n                this._onWhenAddingFileFailed(temp, filter, options);\n            }\n        }));\n        if (this.queue.length !== count) {\n            this._onAfterAddingAll(addedFileItems);\n            this.progress = this._getTotalProgress();\n        }\n        this._render();\n        if (this.options.autoUpload) {\n            this.uploadAll();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    removeFromQueue(value) {\n        /** @type {?} */\n        let index = this.getIndexOfItem(value);\n        /** @type {?} */\n        let item = this.queue[index];\n        if (item.isUploading) {\n            item.cancel();\n        }\n        this.queue.splice(index, 1);\n        this.progress = this._getTotalProgress();\n    }\n    /**\n     * @return {?}\n     */\n    clearQueue() {\n        while (this.queue.length) {\n            this.queue[0].remove();\n        }\n        this.progress = 0;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    uploadItem(value) {\n        /** @type {?} */\n        let index = this.getIndexOfItem(value);\n        /** @type {?} */\n        let item = this.queue[index];\n        /** @type {?} */\n        let transport = this.options.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n        item._prepareToUploading();\n        if (this.isUploading) {\n            return;\n        }\n        this.isUploading = true;\n        ((/** @type {?} */ (this)))[transport](item);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    cancelItem(value) {\n        /** @type {?} */\n        let index = this.getIndexOfItem(value);\n        /** @type {?} */\n        let item = this.queue[index];\n        /** @type {?} */\n        let prop = this.options.isHTML5 ? item._xhr : item._form;\n        if (item && item.isUploading) {\n            prop.abort();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    uploadAll() {\n        /** @type {?} */\n        let items = this.getNotUploadedItems().filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => !item.isUploading));\n        if (!items.length) {\n            return;\n        }\n        items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item._prepareToUploading()));\n        items[0].upload();\n    }\n    /**\n     * @return {?}\n     */\n    cancelAll() {\n        /** @type {?} */\n        let items = this.getNotUploadedItems();\n        items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item.cancel()));\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    isFile(value) {\n        return isFile(value);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    isFileLikeObject(value) {\n        return value instanceof FileLikeObject;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    getIndexOfItem(value) {\n        return typeof value === 'number' ? value : this.queue.indexOf(value);\n    }\n    /**\n     * @return {?}\n     */\n    getNotUploadedItems() {\n        return this.queue.filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => !item.isUploaded));\n    }\n    /**\n     * @return {?}\n     */\n    getReadyItems() {\n        return this.queue\n            .filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => (item.isReady && !item.isUploading)))\n            .sort((/**\n         * @param {?} item1\n         * @param {?} item2\n         * @return {?}\n         */\n        (item1, item2) => item1.index - item2.index));\n    }\n    /**\n     * @return {?}\n     */\n    destroy() {\n        return void 0;\n    }\n    /**\n     * @param {?} fileItems\n     * @return {?}\n     */\n    onAfterAddingAll(fileItems) {\n        return { fileItems };\n    }\n    /**\n     * @param {?} fileItem\n     * @param {?} form\n     * @return {?}\n     */\n    onBuildItemForm(fileItem, form) {\n        return { fileItem, form };\n    }\n    /**\n     * @param {?} fileItem\n     * @return {?}\n     */\n    onAfterAddingFile(fileItem) {\n        return { fileItem };\n    }\n    /**\n     * @param {?} item\n     * @param {?} filter\n     * @param {?} options\n     * @return {?}\n     */\n    onWhenAddingFileFailed(item, filter, options) {\n        return { item, filter, options };\n    }\n    /**\n     * @param {?} fileItem\n     * @return {?}\n     */\n    onBeforeUploadItem(fileItem) {\n        return { fileItem };\n    }\n    /**\n     * @param {?} fileItem\n     * @param {?} progress\n     * @return {?}\n     */\n    onProgressItem(fileItem, progress) {\n        return { fileItem, progress };\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n    onProgressAll(progress) {\n        return { progress };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onSuccessItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onErrorItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onCancelItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onCompleteItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @return {?}\n     */\n    onCompleteAll() {\n        return void 0;\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    _mimeTypeFilter(item) {\n        return !(this.options.allowedMimeType && this.options.allowedMimeType.indexOf(item.type) === -1);\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    _fileSizeFilter(item) {\n        return !(this.options.maxFileSize && item.size > this.options.maxFileSize);\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    _fileTypeFilter(item) {\n        return !(this.options.allowedFileType &&\n            this.options.allowedFileType.indexOf(FileType.getMimeClass(item)) === -1);\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onErrorItem(item, response, status, headers) {\n        item._onError(response, status, headers);\n        this.onErrorItem(item, response, status, headers);\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onCompleteItem(item, response, status, headers) {\n        item._onComplete(response, status, headers);\n        this.onCompleteItem(item, response, status, headers);\n        /** @type {?} */\n        let nextItem = this.getReadyItems()[0];\n        this.isUploading = false;\n        if (nextItem) {\n            nextItem.upload();\n            return;\n        }\n        this.onCompleteAll();\n        this.progress = this._getTotalProgress();\n        this._render();\n    }\n    /**\n     * @protected\n     * @param {?} parsedHeaders\n     * @return {?}\n     */\n    _headersGetter(parsedHeaders) {\n        return (/**\n         * @param {?} name\n         * @return {?}\n         */\n        (name) => {\n            if (name) {\n                return parsedHeaders[name.toLowerCase()] || void 0;\n            }\n            return parsedHeaders;\n        });\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n    _xhrTransport(item) {\n        /** @type {?} */\n        let that = this;\n        /** @type {?} */\n        let xhr = item._xhr = new XMLHttpRequest();\n        /** @type {?} */\n        let sendable;\n        this._onBeforeUploadItem(item);\n        if (typeof item._file.size !== 'number') {\n            throw new TypeError('The file specified is no longer valid');\n        }\n        if (!this.options.disableMultipart) {\n            sendable = new FormData();\n            this._onBuildItemForm(item, sendable);\n            /** @type {?} */\n            const appendFile = (/**\n             * @return {?}\n             */\n            () => sendable.append(item.alias, item._file, item.file.name));\n            if (!this.options.parametersBeforeFiles) {\n                appendFile();\n            }\n            // For AWS, Additional Parameters must come BEFORE Files\n            if (this.options.additionalParameter !== undefined) {\n                Object.keys(this.options.additionalParameter).forEach((/**\n                 * @param {?} key\n                 * @return {?}\n                 */\n                (key) => {\n                    /** @type {?} */\n                    let paramVal = this.options.additionalParameter[key];\n                    // Allow an additional parameter to include the filename\n                    if (typeof paramVal === 'string' && paramVal.indexOf('{{file_name}}') >= 0) {\n                        paramVal = paramVal.replace('{{file_name}}', item.file.name);\n                    }\n                    sendable.append(key, paramVal);\n                }));\n            }\n            if (this.options.parametersBeforeFiles) {\n                appendFile();\n            }\n        }\n        else {\n            sendable = this.options.formatDataFunction(item);\n        }\n        xhr.upload.onprogress = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            /** @type {?} */\n            let progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n            this._onProgressItem(item, progress);\n        });\n        xhr.onload = (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            /** @type {?} */\n            let response = this._transformResponse(xhr.response, headers);\n            /** @type {?} */\n            let gist = this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n            /** @type {?} */\n            let method = '_on' + gist + 'Item';\n            ((/** @type {?} */ (this)))[method](item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        });\n        xhr.onerror = (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            /** @type {?} */\n            let response = this._transformResponse(xhr.response, headers);\n            this._onErrorItem(item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        });\n        xhr.onabort = (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            /** @type {?} */\n            let response = this._transformResponse(xhr.response, headers);\n            this._onCancelItem(item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        });\n        xhr.open(item.method, item.url, true);\n        xhr.withCredentials = item.withCredentials;\n        if (this.options.headers) {\n            for (let header of this.options.headers) {\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (item.headers.length) {\n            for (let header of item.headers) {\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (this.authToken) {\n            xhr.setRequestHeader(this.authTokenHeader, this.authToken);\n        }\n        xhr.onreadystatechange = (/**\n         * @return {?}\n         */\n        function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                that.response.emit(xhr.responseText);\n            }\n        });\n        if (this.options.formatDataFunctionIsAsync) {\n            sendable.then((/**\n             * @param {?} result\n             * @return {?}\n             */\n            (result) => xhr.send(JSON.stringify(result))));\n        }\n        else {\n            xhr.send(sendable);\n        }\n        this._render();\n    }\n    /**\n     * @protected\n     * @param {?=} value\n     * @return {?}\n     */\n    _getTotalProgress(value = 0) {\n        if (this.options.removeAfterUpload) {\n            return value;\n        }\n        /** @type {?} */\n        let notUploaded = this.getNotUploadedItems().length;\n        /** @type {?} */\n        let uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n        /** @type {?} */\n        let ratio = 100 / this.queue.length;\n        /** @type {?} */\n        let current = value * ratio / 100;\n        return Math.round(uploaded * ratio + current);\n    }\n    /**\n     * @protected\n     * @param {?} filters\n     * @return {?}\n     */\n    _getFilters(filters) {\n        if (!filters) {\n            return this.options.filters;\n        }\n        if (Array.isArray(filters)) {\n            return filters;\n        }\n        if (typeof filters === 'string') {\n            /** @type {?} */\n            let names = filters.match(/[^\\s,]+/g);\n            return this.options.filters\n                .filter((/**\n             * @param {?} filter\n             * @return {?}\n             */\n            (filter) => names.indexOf(filter.name) !== -1));\n        }\n        return this.options.filters;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _render() {\n        return void 0;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _queueLimitFilter() {\n        return this.options.queueLimit === undefined || this.queue.length < this.options.queueLimit;\n    }\n    /**\n     * @protected\n     * @param {?} file\n     * @param {?} filters\n     * @param {?} options\n     * @return {?}\n     */\n    _isValidFile(file, filters, options) {\n        this._failFilterIndex = -1;\n        return !filters.length ? true : filters.every((/**\n         * @param {?} filter\n         * @return {?}\n         */\n        (filter) => {\n            this._failFilterIndex++;\n            return filter.fn.call(this, file, options);\n        }));\n    }\n    /**\n     * @protected\n     * @param {?} status\n     * @return {?}\n     */\n    _isSuccessCode(status) {\n        return (status >= 200 && status < 300) || status === 304;\n    }\n    /**\n     * @protected\n     * @param {?} response\n     * @param {?} headers\n     * @return {?}\n     */\n    _transformResponse(response, headers) {\n        return response;\n    }\n    /**\n     * @protected\n     * @param {?} headers\n     * @return {?}\n     */\n    _parseHeaders(headers) {\n        /** @type {?} */\n        let parsed = {};\n        /** @type {?} */\n        let key;\n        /** @type {?} */\n        let val;\n        /** @type {?} */\n        let i;\n        if (!headers) {\n            return parsed;\n        }\n        headers.split('\\n').map((/**\n         * @param {?} line\n         * @return {?}\n         */\n        (line) => {\n            i = line.indexOf(':');\n            key = line.slice(0, i).trim().toLowerCase();\n            val = line.slice(i + 1).trim();\n            if (key) {\n                parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n            }\n        }));\n        return parsed;\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} filter\n     * @param {?} options\n     * @return {?}\n     */\n    _onWhenAddingFileFailed(item, filter, options) {\n        this.onWhenAddingFileFailed(item, filter, options);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n    _onAfterAddingFile(item) {\n        this.onAfterAddingFile(item);\n    }\n    /**\n     * @protected\n     * @param {?} items\n     * @return {?}\n     */\n    _onAfterAddingAll(items) {\n        this.onAfterAddingAll(items);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n    _onBeforeUploadItem(item) {\n        item._onBeforeUpload();\n        this.onBeforeUploadItem(item);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} form\n     * @return {?}\n     */\n    _onBuildItemForm(item, form) {\n        item._onBuildForm(form);\n        this.onBuildItemForm(item, form);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} progress\n     * @return {?}\n     */\n    _onProgressItem(item, progress) {\n        /** @type {?} */\n        let total = this._getTotalProgress(progress);\n        this.progress = total;\n        item._onProgress(progress);\n        this.onProgressItem(item, progress);\n        this.onProgressAll(total);\n        this._render();\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onSuccessItem(item, response, status, headers) {\n        item._onSuccess(response, status, headers);\n        this.onSuccessItem(item, response, status, headers);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onCancelItem(item, response, status, headers) {\n        item._onCancel(response, status, headers);\n        this.onCancelItem(item, response, status, headers);\n    }\n}\nif (false) {\n    /** @type {?} */\n    FileUploader.prototype.authToken;\n    /** @type {?} */\n    FileUploader.prototype.isUploading;\n    /** @type {?} */\n    FileUploader.prototype.queue;\n    /** @type {?} */\n    FileUploader.prototype.progress;\n    /** @type {?} */\n    FileUploader.prototype._nextIndex;\n    /** @type {?} */\n    FileUploader.prototype.autoUpload;\n    /** @type {?} */\n    FileUploader.prototype.authTokenHeader;\n    /** @type {?} */\n    FileUploader.prototype.response;\n    /** @type {?} */\n    FileUploader.prototype.options;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileUploader.prototype._failFilterIndex;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileSelectDirective {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        this.onFileSelected = new EventEmitter();\n        this.element = element;\n    }\n    /**\n     * @return {?}\n     */\n    getOptions() {\n        return this.uploader.options;\n    }\n    /**\n     * @return {?}\n     */\n    getFilters() {\n        return {};\n    }\n    /**\n     * @return {?}\n     */\n    isEmptyAfterSelection() {\n        return !!this.element.nativeElement.attributes.multiple;\n    }\n    /**\n     * @return {?}\n     */\n    onChange() {\n        /** @type {?} */\n        let files = this.element.nativeElement.files;\n        /** @type {?} */\n        let options = this.getOptions();\n        /** @type {?} */\n        let filters = this.getFilters();\n        this.uploader.addToQueue(files, options, filters);\n        this.onFileSelected.emit(files);\n        if (this.isEmptyAfterSelection()) {\n            this.element.nativeElement.value = '';\n        }\n    }\n}\nFileSelectDirective.ɵfac = function FileSelectDirective_Factory(t) { return new (t || FileSelectDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nFileSelectDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FileSelectDirective, selectors: [[\"\", \"ng2FileSelect\", \"\"]], hostBindings: function FileSelectDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function FileSelectDirective_change_HostBindingHandler() { return ctx.onChange(); });\n    } }, inputs: { uploader: \"uploader\" }, outputs: { onFileSelected: \"onFileSelected\" } });\n/** @nocollapse */\nFileSelectDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nFileSelectDirective.propDecorators = {\n    uploader: [{ type: Input }],\n    onFileSelected: [{ type: Output }],\n    onChange: [{ type: HostListener, args: ['change',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FileSelectDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng2FileSelect]' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { onFileSelected: [{\n            type: Output\n        }], onChange: [{\n            type: HostListener,\n            args: ['change']\n        }], uploader: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    FileSelectDirective.prototype.uploader;\n    /** @type {?} */\n    FileSelectDirective.prototype.onFileSelected;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileSelectDirective.prototype.element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileDropDirective {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        this.fileOver = new EventEmitter();\n        this.onFileDrop = new EventEmitter();\n        this.element = element;\n    }\n    /**\n     * @return {?}\n     */\n    getOptions() {\n        return this.uploader.options;\n    }\n    /**\n     * @return {?}\n     */\n    getFilters() {\n        return {};\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDrop(event) {\n        /** @type {?} */\n        let transfer = this._getTransfer(event);\n        if (!transfer) {\n            return;\n        }\n        /** @type {?} */\n        let options = this.getOptions();\n        /** @type {?} */\n        let filters = this.getFilters();\n        this._preventAndStop(event);\n        this.uploader.addToQueue(transfer.files, options, filters);\n        this.fileOver.emit(false);\n        this.onFileDrop.emit(transfer.files);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragOver(event) {\n        /** @type {?} */\n        let transfer = this._getTransfer(event);\n        if (!this._haveFiles(transfer.types)) {\n            return;\n        }\n        transfer.dropEffect = 'copy';\n        this._preventAndStop(event);\n        this.fileOver.emit(true);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragLeave(event) {\n        if (((/** @type {?} */ (this))).element) {\n            if (event.currentTarget === ((/** @type {?} */ (this))).element[0]) {\n                return;\n            }\n        }\n        this._preventAndStop(event);\n        this.fileOver.emit(false);\n    }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    _getTransfer(event) {\n        return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n    }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    _preventAndStop(event) {\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    /**\n     * @protected\n     * @param {?} types\n     * @return {?}\n     */\n    _haveFiles(types) {\n        if (!types) {\n            return false;\n        }\n        if (types.indexOf) {\n            return types.indexOf('Files') !== -1;\n        }\n        else if (types.contains) {\n            return types.contains('Files');\n        }\n        else {\n            return false;\n        }\n    }\n}\nFileDropDirective.ɵfac = function FileDropDirective_Factory(t) { return new (t || FileDropDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nFileDropDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FileDropDirective, selectors: [[\"\", \"ng2FileDrop\", \"\"]], hostBindings: function FileDropDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"drop\", function FileDropDirective_drop_HostBindingHandler($event) { return ctx.onDrop($event); })(\"dragover\", function FileDropDirective_dragover_HostBindingHandler($event) { return ctx.onDragOver($event); })(\"dragleave\", function FileDropDirective_dragleave_HostBindingHandler($event) { return ctx.onDragLeave($event); });\n    } }, inputs: { uploader: \"uploader\" }, outputs: { fileOver: \"fileOver\", onFileDrop: \"onFileDrop\" } });\n/** @nocollapse */\nFileDropDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nFileDropDirective.propDecorators = {\n    uploader: [{ type: Input }],\n    fileOver: [{ type: Output }],\n    onFileDrop: [{ type: Output }],\n    onDrop: [{ type: HostListener, args: ['drop', ['$event'],] }],\n    onDragOver: [{ type: HostListener, args: ['dragover', ['$event'],] }],\n    onDragLeave: [{ type: HostListener, args: ['dragleave', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FileDropDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng2FileDrop]' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { fileOver: [{\n            type: Output\n        }], onFileDrop: [{\n            type: Output\n        }], onDrop: [{\n            type: HostListener,\n            args: ['drop', ['$event']]\n        }], onDragOver: [{\n            type: HostListener,\n            args: ['dragover', ['$event']]\n        }], onDragLeave: [{\n            type: HostListener,\n            args: ['dragleave', ['$event']]\n        }], uploader: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    FileDropDirective.prototype.uploader;\n    /** @type {?} */\n    FileDropDirective.prototype.fileOver;\n    /** @type {?} */\n    FileDropDirective.prototype.onFileDrop;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileDropDirective.prototype.element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileUploadModule {\n}\nFileUploadModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: FileUploadModule });\nFileUploadModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function FileUploadModule_Factory(t) { return new (t || FileUploadModule)(); }, imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FileUploadModule, { declarations: function () { return [FileDropDirective, FileSelectDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [FileDropDirective, FileSelectDirective]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FileUploadModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [FileDropDirective, FileSelectDirective],\n                exports: [FileDropDirective, FileSelectDirective]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { FileDropDirective, FileItem, FileLikeObject, FileSelectDirective, FileUploadModule, FileUploader };\n\n//# sourceMappingURL=ng2-file-upload.js.map","export class Attachment {\r\n    constructor(public id: string, public type: string, public url: string, public name: string, file?: any) {\r\n    }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Attachment } from 'src/app/models/attachment.model';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\nimport { FileUploader, FileItem } from 'ng2-file-upload';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { stringify } from '@angular/compiler/src/util';\n\n@Component({\n  selector: 'app-attachments-uploader',\n  templateUrl: './attachments-uploader.component.html',\n  styleUrls: ['./attachments-uploader.component.scss']\n})\nexport class AttachmentsUploaderComponent implements OnInit {\n  @Input()\n  public attachments: Attachment[];\n\n  @Input()\n  public limit: number;\n\n  public uploader: FileUploader;\n  public hasBaseDropZoneOver: boolean;\n  public hasAnotherDropZoneOver: boolean;\n\n  public get value(): number[] {\n    return this.attachments?.map(a => Number.parseInt(a.id.toString(), 10));\n  }\n\n  @Output() valueChange: EventEmitter<{ ids: number[], entities: Attachment[] }> = new EventEmitter();\n\n  constructor(private auth: AuthService, private notifier: NotificationService) {\n  }\n\n  public ngOnInit(): void {\n    if (!this.attachments || !Array.isArray(this.attachments))\n    {\n      this.attachments = [];\n    }\n    this.initializeUploader();\n  }\n\n  private initializeUploader(): void {\n    this.uploader = new FileUploader({\n      url: environment.prepareUrl('attachmentUploadUrl'),\n      authToken: 'Bearer ' + this.auth.appUser.token,\n      allowedFileType: ['image', 'video'],\n      autoUpload: false,\n      removeAfterUpload: true,\n      maxFileSize: 10 * 1024 * 1024, // 10 MB\n    });\n\n    this.hasBaseDropZoneOver = false;\n    this.hasAnotherDropZoneOver = false;\n\n    this.uploader.onAfterAddingFile = (file: FileItem) => {\n      if (this.attachments.length + this.uploader.queue.length > this.limit)\n      {\n        this.uploader.removeFromQueue(file);\n        this.notifier.warning('You cannot add more than ' + this.limit + ' attachments');\n      }\n    };\n\n    this.uploader.onBuildItemForm = (file: FileItem, form) => {\n      file.withCredentials = false;\n      form.append('type', file.file.type.split('/')[0]);\n    };\n\n    this.uploader.onSuccessItem = (item: FileItem, response: string, status, headers) => {\n      const res: Attachment = JSON.parse(response);\n\n      const attachment = new Attachment(res.id, res.type, res.url, res.name);\n      this.attachments.push(attachment);\n\n      // console.log(this.attachments);\n      this.notifier.success('Attachment uploaded successfully!', 'Uploader');\n      this.valueChange.next({ ids: this.value, entities: this.attachments });\n    };\n\n    this.uploader.onErrorItem = (item: FileItem, response: string) => {\n      this.notifier.error('Failed to upload attachment', 'Uploader');\n      // console.log(response);\n    };\n  }\n\n  public fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  public fileOverAnother(e: any): void {\n    this.hasAnotherDropZoneOver = e;\n  }\n\n  public delete(a: Attachment): void {\n    console.log(this.attachments);\n    this.attachments.splice(this.attachments.indexOf(a), 1);\n    this.valueChange.next({ ids: this.value, entities: this.attachments });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-12 mb-0\">\n    <button class=\"btn btn-md btn-pill btn-secondary px-3\" (click)=\"fileChoser.click()\" [disabled]=\"attachments?.length === limit\">\n      <i class=\"folder outline icon\"></i> Pick Files\n    </button>\n    <div>&nbsp;</div>\n    <input #fileChoser hidden type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple />\n  </div>\n</div>\n\n<div class=\"row\" *ngIf=\"attachments?.length > 0\">\n  <div class=\"col-12\">\n    <div class=\"form-group\">\n      <label class=\"font-bold\">Current attachments</label>\n      <div class=\"form-control\">\n        <div class=\"table-responsive overflow-hidden\">\n          <table class=\"table table-stripped\">\n            <thead>\n              <tr>\n                <th class=\"text-danger\" colspan=\"5\">\n                  Selected: {{ attachments?.length }}\n                </th>\n              </tr>\n              <tr>\n                <th class=\"text-info\" colspan=\"3\">Name</th>\n                <th class=\"text-info\">Type</th>\n                <th class=\"text-info text-right\">&nbsp;</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let a of attachments\">\n                <td colspan=\"3\">\n                  <strong>{{ a?.name }}</strong>\n                </td>\n                <td>{{ a?.type == 0 ? \"Image\" : \"Video\" }}</td>\n                <td class=\"text-right actions\">\n                  <i class=\"nc-icon nc-simple-remove\" (click)=\"delete(a)\"></i>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"row\" *ngIf=\"uploader?.queue?.length > 0\">\n  <div class=\"col-12\">\n    <div class=\"form-group\">\n      <label class=\"h5\">Upload queue</label>\n      <div class=\"form-control\">\n        <div class=\"table-responsive overflow-hidden\">\n          <table class=\"table table-stripped\">\n            <thead>\n              <tr>\n                <th colspan=\"5\">Queue length: {{ uploader?.queue?.length }}</th>\n              </tr>\n              <tr>\n                <th>Name</th>\n                <th>Size</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let item of uploader.queue\">\n                <td>\n                  <strong>{{ item?.file?.name }}</strong>\n                </td>\n                <td *ngIf=\"uploader.options.isHTML5\">\n                  {{ item?.file?.size / 1024 / 1024 | number: \".2\" }} MB\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label class=\"h6\">\n        Queue progress\n      </label>\n      <div class=\"form-control\">\n        <ngb-progressbar [value]=\"uploader.progress\"></ngb-progressbar>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <button class=\"btn btn-sm btn-success\" (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\n        Upload\n      </button>\n      <button class=\"btn btn-sm btn-warning\" (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\n        Cancel\n      </button>\n      <button class=\"btn btn-sm btn-danger\" (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\n        Remove\n      </button>\n    </div>\n  </div>\n</div>","<ngb-carousel *ngIf=\"attachments && attachments.length > 0; else message\">\n  <ng-template ngbSlide *ngFor=\"let a of attachments\">\n    <div class=\"picsum-img-wrapper\">\n      <img [src]=\"a.url\" [alt]=\"a.name\" *ngIf=\"a.type === 0\" />\n      <video *ngIf=\"a.type === 1\" controls>\n          <source [src]=\"a.url\">\n      </video>\n    </div>\n  </ng-template>\n</ngb-carousel>\n\n<ng-template #message>\n  <ngb-alert type=\"danger\" [dismissible]=\"false\">\n    <h6>Problem!</h6>\n    <ul>\n      <li>Your attachments list is empty</li>\n      <li>Something went wrong while initializing.</li>\n    </ul>\n  </ngb-alert>\n</ng-template>","import { Component, OnInit, Input, OnChanges, SimpleChange } from '@angular/core';\n\nimport { Attachment } from '../../../models/attachment.model';\n\n@Component({\n  selector: 'app-attachments-viewer',\n  templateUrl: './attachments-viewer.component.html',\n  styleUrls: ['./attachments-viewer.component.scss']\n})\nexport class AttachmentsViewerComponent implements OnInit {\n  @Input() attachments: Attachment[];\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    if (!Array.isArray(this.attachments))\n    {\n      this.attachments = [];\n    }\n    else\n    {\n      this.attachments = this.attachments.filter(e => e != null && e !== undefined);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AttachmentsViewerComponent } from './attachments-viewer/attachments-viewer.component';\nimport { AttachmentsUploaderComponent } from './attachments-uploader/attachments-uploader.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FileUploadModule } from 'ng2-file-upload';\n\n\n@NgModule({\n  declarations: [AttachmentsViewerComponent, AttachmentsUploaderComponent],\n  imports: [\n    CommonModule,\n    NgbModule,\n    ReactiveFormsModule,\n    FileUploadModule\n  ],\n  exports: [\n    AttachmentsUploaderComponent,\n    AttachmentsViewerComponent,\n  ]\n})\nexport class AttachmentsModule { }\n"],"sourceRoot":"webpack:///"}