{"version":3,"sources":["./src/app/dashboard/roles/index/index.component.ts","./src/app/dashboard/roles/index/index.component.html","./src/app/models/role.model.ts","./src/app/dashboard/roles/roles.resolver.ts","./src/app/dashboard/roles/role-form/role-form.component.html","./src/app/dashboard/roles/role-form/role-form.component.ts","./src/app/dashboard/roles/role-details/role-details.component.ts","./src/app/dashboard/roles/role-details/role-details.component.html","./src/app/dashboard/roles/role-delete/role-delete.component.ts","./src/app/dashboard/roles/role-delete/role-delete.component.html","./src/app/dashboard/roles/assign-role-permissions/assign-role-permissions.component.html","./src/app/dashboard/roles/roles-routing.module.ts","./src/app/dashboard/roles/assign-role-permissions/assign-role-permissions.component.ts","./src/app/dashboard/roles/roles.module.ts"],"names":["IndexComponent","route","context","urls","createUrl","detailsUrl","data","this","properties","key","title","type","actions","name","icon","url","subscribe","roles","description","id","created_at","updated_at","super","RolesResolver","http","element","state","get","environment","apiUrl","rolesFetchUrl","pipe","map","e","Json2Role","RoleFormComponent","router","service","formGroup","required","open","content","backdrop","keyboard","ok","RoleDetailsComponent","role","history","resource","tableUrl","RoleDeleteComponent","deleteUrl","routes","path","component","runGuardsAndResolvers","resolve","children","pathMatch","AssignRolePermissionsComponent","loading","permissions","message","fetchPermissions","dismiss","size","prepareUrl","Json2Permission","pps","roleData","rpps","rolePermissions","forEach","p","add","dismissAll","navigateByUrl","put","value","response","Array","isArray","push","splice","syncFormFieldValue","i","indexOf","controls","patchValue","RolesRoutingModule","forChild","RolesModule","provide","useClass","multi"],"mappings":"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","file":"16.b257f8e75fa8f8f09583.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Role } from 'src/app/models/role.model';\nimport { TableViewComponent } from 'src/app/shared/dashboard-resource/table-view/table-view.component';\nimport { ActivatedRoute } from '@angular/router';\nimport { ITableContext } from 'src/app/shared/dashboard-resource/table-view/table.context';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.scss']\n})\nexport class IndexComponent {\n  data: Role[];\n  context: ITableContext<Role> = {\n    urls: {\n      createUrl: '/roles/create',\n      detailsUrl: '/:id'\n    },\n    data: this.data,\n    properties: [\n      {\n        key: 'name',\n        title: 'Name',\n        type: 'string'\n      },\n      {\n        key: 'description',\n        title: 'Description',\n        type: 'string'\n      },\n      {\n        key: 'created_at',\n        title: 'Created At',\n        type: 'datetime'\n      },\n      {\n        key: 'updated_at',\n        title: 'Updated At',\n        type: 'datetime'\n      },\n    ],\n    title: 'Roles',\n    actions: [\n      {\n        type: 'url',\n        name: 'permissions',\n        icon: 'nc-icon nc-bullet-list-67',\n        url: '/roles/:id/permissions',\n      }\n    ]\n  };\n  @ViewChild('table') table: TableViewComponent<Role>;\n\n  constructor(route: ActivatedRoute) {\n    // console.log(this.context);\n    route.data.subscribe(data => {\n      this.data = data.roles;\n      this.context.data = this.data;\n    });\n  }\n}\n","<app-table-view [context]=\"context\" #table></app-table-view>","import { Resource } from '../shared/dashboard-resource/resource.model';\r\n\r\nexport class Role extends Resource {\r\n    constructor(public name: string, public description: string, public id: string, public created_at: Date, public updated_at: Date) {\r\n        super(id);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { environment } from '../../../environments/environment';\r\nimport { Role } from '../../models/role.model';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class RolesResolver implements Resolve<Role[]> {\r\n    public static Json2Role(element: any): Role {\r\n        if (!element)\r\n        {\r\n            return null;\r\n        }\r\n        return new Role(element.name, element.description, element.id, element.created_at, element.updated_at);\r\n    }\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Role[]> {\r\n        return this.http.get<any[]>(`${ environment.apiUrl }/${ environment.rolesFetchUrl }`)\r\n            .pipe(map(data => data.map(e => RolesResolver.Json2Role(e))));\r\n    }\r\n}\r\n","<ngb-alert type=\"info\" (close)=\"ok()\">{{ message }}</ngb-alert>\n\n<ng-template #content>\n  <div class=\"modal-header\">\n    <h6 class=\"modal-title pt-1 mt-1\">\n      {{ title }}\n    </h6>\n    <button type=\"button\" class=\"close\" style=\"border: none; outline: none;\" (click)=\"ok()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <form [formGroup]=\"formGroup\" autocomplete=\"off\">\n      <div class=\"row\">\n        <div class=\"col-12 px-3\">\n          <div class=\"form-group\">\n            <label>Name</label>\n            <input type=\"text\" class=\"form-control\" placeholder=\"Name\" formControlName=\"name\" autocomplete=\"off\" />\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-12 px-3\">\n          <div class=\"form-group\">\n            <label>Description</label>\n            <input type=\"text\" class=\"form-control\" placeholder=\"Description\" formControlName=\"description\" autocomplete=\"off\" />\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"update ml-auto mr-auto\">\n          <button type=\"submit\" class=\"btn btn-primary btn-round\" [disabled]=\"uploading || !formGroup.dirty || !formGroup.valid\" (click)=\"submit()\">\n            Submit\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</ng-template>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ResourceFormContent } from 'src/app/shared/dashboard-resource/resource-form/resource-form.component';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { NgbModal, NgbModalRef, NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-role-form',\n  templateUrl: './role-form.component.html',\n  styleUrls: ['./role-form.component.scss']\n})\nexport class RoleFormComponent extends ResourceFormContent {\n  title: string;\n  message: string;\n  formGroup: FormGroup;\n\n  @ViewChild('content') content: ElementRef<HTMLElement>;\n\n  constructor(http: HttpClient, route: ActivatedRoute, router: Router, service: NgbModal) {\n    super(http, route, router, service);\n\n    this.formGroup = new FormGroup({\n      name: new FormControl(null, Validators.required),\n      description: new FormControl(null, Validators.required),\n    });\n  }\n\n  openModal(): NgbModalRef {\n    const options: NgbModalOptions = {\n      backdrop: 'static',\n      keyboard: false,\n    };\n    return this.service.open(this.content, options);\n  }\n\n  get postUrl(): string {\n    return 'rolesCreateUrl';\n  }\n\n  get putUrl(): string {\n    return 'rolesUpdateUrl';\n  }\n\n  get parentUrl(): string {\n    return '/roles';\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Role } from 'src/app/models/role.model';\nimport { IResourceDetailsContext } from 'src/app/shared/dashboard-resource/resource-details/resource-details.context';\nimport { RolesResolver } from '../roles.resolver';\n\n@Component({\n  selector: 'app-role-details',\n  templateUrl: './role-details.component.html',\n  styleUrls: ['./role-details.component.scss']\n})\nexport class RoleDetailsComponent implements OnInit {\n  public context: IResourceDetailsContext<Role>;\n\n  ngOnInit(): void {\n    const role: Role = RolesResolver.Json2Role(history.state.resource);\n\n    this.context = {\n      urls: {\n        tableUrl: '/roles',\n      },\n      data: role,\n      properties: [\n        {\n          key: 'name',\n          title: 'Name',\n          type: 'string'\n        },\n        {\n          key: 'description',\n          title: 'Description',\n          type: 'string'\n        },\n        {\n          key: 'created_at',\n          title: 'Created At',\n          type: 'datetime'\n        },\n        {\n          key: 'updated_at',\n          title: 'Updated At',\n          type: 'datetime'\n        },\n      ],\n      title: `Details of role ${ role?.name }`\n    };\n  }\n}\n","<app-resource-details [context]=\"context\"></app-resource-details>","import { Component, OnInit } from '@angular/core';\nimport { Role } from 'src/app/models/role.model';\nimport { ResourceDeleteContext } from 'src/app/shared/dashboard-resource/resource-delete/resource-delete.component';\n\n@Component({\n  selector: 'app-role-delete',\n  templateUrl: './role-delete.component.html',\n  styleUrls: ['./role-delete.component.scss']\n})\nexport class RoleDeleteComponent implements OnInit {\n  context: ResourceDeleteContext<Role>;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.context = {\n      deleteUrl: 'rolesDeleteUrl',\n      data: history.state.resource,\n      title: 'Delete Role Resource!',\n      description: 'Are you sure to delete this role?'\n    };\n  }\n\n}\n","<app-resource-delete [context]=\"context\"></app-resource-delete>","<ngb-alert type=\"info\" (close)=\"dismiss()\">{{ message }}</ngb-alert>\n\n<ng-template #content>\n  <div class=\"modal-header\">\n    <h6 class=\"modal-title pt-1 mt-1\">\n      {{ title }}\n    </h6>\n    <button type=\"button\" class=\"close\" style=\"border: none; outline: none;\" (click)=\"dismiss()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body multi-select\">\n    <ng-container *ngIf=\"loading; else multiselect\">\n      <div class=\"row\">\n        <div class=\"col-12 d-flex align-items-center justify-content-center\">\n          <h6>Loading</h6>\n        </div>\n      </div>\n    </ng-container>\n    <ng-template #multiselect>\n      <form [formGroup]=\"formGroup\" autocomplete=\"off\">\n        <!-- Hidden -->\n        <input type=\"hidden\" formControlName=\"permissions\" />\n        <!-- UI -->\n        <div class=\"row\">\n          <div class=\"col-5 select-container\">\n            <div *ngIf=\"!permissions || permissions?.length == 0; else unselected\">\n              <small>Permissions List is Empty</small>\n            </div>\n            <ng-template class=\"list-group\" #unselected>\n              <div class=\"list-group-item list-group-item-action\" (click)=\"add(p)\" *ngFor=\"let p of permissions\">\n                <h6>{{ p.name }}</h6>\n                <small>{{ p.description }}</small>\n              </div>\n            </ng-template>\n          </div>\n          <div class=\"col-2 d-flex align-items-center justify-content-center\">\n            <div class=\"d-flex flex-column\">\n              <button class=\"btn btn-secondary btn-rounded btn-sm\" (click)=\"addAll()\">\n                <i class=\"fa fa-angle-double-right\"></i>\n              </button>\n              <button class=\"btn btn-danger btn-rounded btn-sm\" (click)=\"removeAll()\">\n                <i class=\"fa fa-angle-double-left\"></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"col-5 select-container\">\n            <div *ngIf=\"\n                !rolePermissions || rolePermissions?.length == 0;\n                else selected\n              \">\n              <small>Role's Permissions List is Empty</small>\n            </div>\n            <ng-template class=\"list-group\" #selected>\n              <div class=\"list-group-item list-group-item-action\" (click)=\"remove(p)\" *ngFor=\"let p of rolePermissions\">\n                <h6>{{ p.name }}</h6>\n                <small>{{ p.description }}</small>\n              </div>\n            </ng-template>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"update ml-auto mr-auto\">\n            <button type=\"submit\" class=\"btn btn-primary btn-round\" [disabled]=\"!formGroup.valid\" (click)=\"submit()\">\n              Save\n            </button>\n          </div>\n        </div>\n      </form>\n    </ng-template>\n  </div>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IndexComponent } from './index/index.component';\nimport { RolesResolver } from './roles.resolver';\nimport { RoleFormComponent } from './role-form/role-form.component';\nimport { RoleDetailsComponent } from './role-details/role-details.component';\nimport { RoleDeleteComponent } from './role-delete/role-delete.component';\nimport { AssignRolePermissionsComponent } from './assign-role-permissions/assign-role-permissions.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: IndexComponent,\n    runGuardsAndResolvers: 'always',\n    resolve: {\n      roles: RolesResolver\n    },\n    children: [\n      {\n        path: 'create',\n        component: RoleFormComponent,\n      },\n      {\n        path: ':id/edit',\n        component: RoleFormComponent,\n      },\n      {\n        path: ':id/details',\n        pathMatch: 'full',\n        component: RoleDetailsComponent,\n      },\n      {\n        path: ':id/delete',\n        pathMatch: 'full',\n        component: RoleDeleteComponent,\n      },\n      {\n        path: ':id/permissions',\n        pathMatch: 'full',\n        component: AssignRolePermissionsComponent,\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RolesRoutingModule { }\n","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgbModal, NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\nimport { Permission } from 'src/app/models/permission.model';\nimport { environment } from 'src/environments/environment';\nimport { map, flatMap } from 'rxjs/operators';\nimport { PermissionsResolver } from '../../permissions/permissions.resolver';\nimport { Role } from 'src/app/models/role.model';\n\n@Component({\n  selector: 'app-assign-role-permissions',\n  templateUrl: './assign-role-permissions.component.html',\n  styleUrls: ['./assign-role-permissions.component.scss']\n})\nexport class AssignRolePermissionsComponent implements OnInit, AfterViewInit {\n  title: string;\n  message: string;\n  formGroup: FormGroup;\n\n  loading = true;\n\n  permissions: Permission[];\n  rolePermissions: Permission[];\n\n  role: Role;\n\n  @ViewChild('content') content: ElementRef<HTMLElement>;\n\n  constructor(private http: HttpClient, private route: ActivatedRoute, private router: Router, private service: NgbModal) {\n    this.formGroup = new FormGroup({\n      permissions: new FormControl(null, Validators.required),\n    });\n    this.message = 'Please select the permissions then click \"Save\" button';\n  }\n\n  ngOnInit(): void {\n    const resource = history.state.resource;\n\n    if (!resource)\n    {\n      this.dismiss();\n      return;\n    }\n    this.role = resource;\n    this.fetchPermissions();\n  }\n\n  ngAfterViewInit(): void {\n    if (!this.role)\n    {\n      return;\n    }\n    this.title = `Assign role \"${ this.role.name }\" permissions`;\n\n    const options: NgbModalOptions = {\n      backdrop: 'static',\n      keyboard: false,\n      size: 'lg',\n    };\n    this.service.open(this.content, options);\n  }\n\n  fetchPermissions(): void {\n    this.loading = true;\n    // 1- Fetch permissions\n    this.http.get<any[]>(environment.prepareUrl('permissionsFetchUrl'))\n      .pipe<Permission[]>(map(data => data.map(e => PermissionsResolver.Json2Permission(e))))\n      .subscribe(pps => {\n\n        this.permissions = pps;\n\n        // 2- Fetch role's permissions\n        this.http.get<any[]>(environment.prepareUrl('rolesFetchPermissionsUrl', { id: this.role.id }))\n          .pipe<Permission[]>(map(roleData => roleData.map(e => PermissionsResolver.Json2Permission(e))))\n          .subscribe(rpps => {\n\n            this.rolePermissions = [];\n            rpps.forEach(p => this.add(p));\n            this.loading = false;\n          });\n      });\n  }\n\n  dismiss(): void {\n    this.service.dismissAll();\n    this.router.navigateByUrl('/roles');\n  }\n\n  submit(): void {\n    this.http.put(\n      environment.prepareUrl('rolesAssignPermissionsUrl', this.role), this.formGroup.value)\n      .subscribe(response => {\n        if (!Array.isArray(response))\n        {\n          return;\n        }\n        this.dismiss();\n      });\n  }\n\n  addAll(): void {\n    this.rolePermissions.push(...this.permissions.splice(0));\n    this.syncFormFieldValue();\n  }\n\n  removeAll(): void {\n    this.permissions.push(...this.rolePermissions.splice(0));\n    this.syncFormFieldValue();\n  }\n\n  add(p: Permission): void {\n    const i = this.permissions.indexOf(p);\n    this.rolePermissions.push(this.permissions.splice(i, 1)[0]);\n    this.syncFormFieldValue();\n  }\n\n  remove(p: Permission): void {\n    const i = this.rolePermissions.indexOf(p);\n    this.permissions.push(this.rolePermissions.splice(i, 1)[0]);\n    this.syncFormFieldValue();\n  }\n\n  private syncFormFieldValue(): void {\n    const value = this.rolePermissions.map(e => e.id);\n    this.formGroup.controls.permissions.patchValue(value);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RolesRoutingModule } from './roles-routing.module';\nimport { IndexComponent } from './index/index.component';\nimport { DashboardResourceModule } from 'src/app/shared/dashboard-resource/dashboard-resource.module';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthInterceptor } from 'src/app/interceptors/auth.interceptor';\n\nimport { RolesResolver } from './roles.resolver';\nimport { RoleDeleteComponent } from './role-delete/role-delete.component';\nimport { RoleDetailsComponent } from './role-details/role-details.component';\nimport { RoleFormComponent } from './role-form/role-form.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AssignRolePermissionsComponent } from './assign-role-permissions/assign-role-permissions.component';\n\n@NgModule({\n  declarations: [IndexComponent, RoleDeleteComponent, RoleDetailsComponent, RoleFormComponent, AssignRolePermissionsComponent],\n  imports: [\n    CommonModule,\n    RolesRoutingModule,\n    NgbModule,\n    RouterModule,\n    ReactiveFormsModule,\n    DashboardResourceModule\n  ],\n  providers: [\n    RolesResolver,\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\n  ]\n})\nexport class RolesModule { }\n"],"sourceRoot":"webpack:///"}