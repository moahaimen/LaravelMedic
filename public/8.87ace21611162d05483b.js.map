{"version":3,"sources":["./src/app/interceptors/auth.interceptor.ts","./src/app/guards/authorization.guard.ts","./src/app/dashboard/dashboard-routing.module.ts","./src/app/dashboard/index/index.component.ts","./src/app/dashboard/index/index.component.html","./src/app/shared/sidebar/sidebar.module.ts","./src/app/shared/navbar/navbar.module.ts","./src/app/shared/footer/footer.module.ts","./src/app/shared/fixed-plugin/fixed-plugin.module.ts","./src/app/dashboard/dashboard.module.ts"],"names":["AuthInterceptor","loader","auth","auth2","modals","notifier","router","request","next","this","activate","clone","headers","Accept","Authorization","appUser","token","handle","pipe","err","status","error","statusText","logout","get","console","log","message","Object","keys","forEach","k","Array","isArray","e","deactivate","length","success","AuthorizationGuard","state","pp","data","permissions","has","Promise","resolve","fetch","then","catch","routes","path","pathMatch","component","IndexComponent","canActivate","loadChildren","module","UsersModule","RolesModule","PermissionsModule","BrandsModule","CategoriesModule","ProductsModule","OrdersModule","PromoCodesModule","NotificationsModule","redirectTo","DashboardRoutingModule","forChild","SidebarModule","NavbarModule","FooterModule","FixedPluginModule","DashboardModule","provide","useClass","multi"],"mappings":"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","file":"8.87ace21611162d05483b.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpHeaders,\n  HttpEventType,\n  HttpErrorResponse,\n  HttpResponse\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { AuthService } from 'src/app/services/auth.service';\nimport { NotificationService } from '../services/notification.service';\nimport { Router } from '@angular/router';\nimport { LogoutComponent } from '../auth/logout/logout.component';\nimport { LoaderService } from '../services/loader.service';\nimport { PermissionsService } from '../services/permissions.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(\n    private loader: LoaderService, private auth: AuthService,\n    private auth2: PermissionsService,\n    private modals: NgbModal,\n    private notifier: NotificationService, private router: Router) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<any> {\n    this.loader.activate();\n    const token = this.auth.appUser.token;\n\n    request = request.clone({\n      headers: new HttpHeaders({\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${ token }`,\n      })\n    });\n\n    return next.handle(request).pipe(\n      catchError(err => {\n        // console.log(err);\n        // authentication error\n        if (err.status === 401)\n        {\n          this.notifier.error(err.statusText);\n          LogoutComponent.logout(this.auth, this.auth2, this.router, this.modals);\n          return throwError(err.statusText);\n        }\n\n        // Handle application error\n        if (err instanceof HttpErrorResponse)\n        {\n          if (err.headers.get('Message') || err.headers.get('message'))\n          {\n            console.log(err.headers.get('Message'));\n            const error = err.headers.get('message') || err.headers.get('Message');\n            if (error)\n            {\n              this.notifier.error(error);\n              return throwError(error);\n            }\n          }\n\n          if (err.error)\n          {\n            if (err.error.message)\n            {\n              this.notifier.error(err.error.message);\n              return throwError(err.error.message);\n            }\n\n            let message = '';\n            Object\n              .keys(err.error)\n              .forEach(k => {\n                const error = err.error[k];\n                if (Array.isArray(error))\n                {\n                  error.forEach(e => message += `${ k }-${ e }\\n`);\n                }\n                else\n                {\n                  message += `${ k }-${ error }\\n`;\n                }\n              });\n\n            this.notifier.error(message);\n            return throwError(message);\n          }\n        }\n\n        // Else\n        this.notifier.error(`${ err.status } - ${ err.statusText }`);\n        throwError(err);\n      }),\n      map(e => {\n        this.loader.deactivate();\n        if (e instanceof HttpResponse && e.status === 200)\n        {\n          const message = e.headers.get('Message') || e.headers.get('message');\n          if (message && message.length > 0)\n          {\n            this.notifier.success(message);\n          }\n        }\n        return e;\n      }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { PermissionsService } from '../services/permissions.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorizationGuard implements CanActivate {\n\n  constructor(private auth: PermissionsService) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Promise<boolean> | boolean {\n    const pp = next.data.permissions;\n    if (this.auth.permissions)\n    {\n      if (pp)\n      {\n        // console.log('1');\n        return this.auth.has(pp);\n      } else\n      {\n        // console.log('2');\n        return this.auth.has(null);\n      }\n    } else\n    {\n      const promise = new Promise<boolean>((resolve) => {\n        this.auth.fetch()\n          .then(() => {\n            if (pp)\n            {\n              // console.log('3');\n              resolve(this.auth.has(pp));\n            } else\n            {\n              // console.log('4');\n              resolve(this.auth.has(null));\n            }\n          }).catch(() => {\n            // console.log('5');\n            resolve(false);\n          });\n      });\n      return promise;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthorizationGuard } from 'src/app/guards/authorization.guard';\nimport { IndexComponent } from './index/index.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: IndexComponent,\n    canActivate: [AuthorizationGuard],\n  },\n  {\n    path: 'users',\n    loadChildren: () =>\n      import('./users/users.module').then((module) => module.UsersModule),\n    data: {\n      permissions: ['fetchUsers', 'manageUsers'],\n    },\n    canActivate: [AuthorizationGuard],\n  },\n  {\n    path: 'roles',\n    loadChildren: () =>\n      import('./roles/roles.module').then((module) => module.RolesModule),\n    data: {\n      permissions: ['fetchRoles', 'manageRoles'],\n    },\n    canActivate: [AuthorizationGuard],\n  },\n  {\n    path: 'permissions',\n    loadChildren: () =>\n      import('./permissions/permissions.module').then((module) => module.PermissionsModule),\n    data: {\n      permissions: ['fetchPermissions', 'managePermissions'],\n    },\n    canActivate: [AuthorizationGuard],\n  },\n  {\n    path: 'brands',\n    loadChildren: () =>\n      import('./brands/brands.module').then((module) => module.BrandsModule),\n    data: {\n      permissions: ['fetchBrands', 'manageBrands'],\n    },\n    canActivate: [AuthorizationGuard],\n  },\n  {\n    path: 'categories',\n    loadChildren: () =>\n      import('./categories/categories.module').then(\n        (module) => module.CategoriesModule\n      ),\n    data: {\n      permissions: ['fetchCategories', 'manageCategories'],\n    },\n    canActivate: [AuthorizationGuard],\n  },\n  {\n    path: 'products',\n    loadChildren: () =>\n      import('./products/products.module').then(\n        (module) => module.ProductsModule\n      ),\n    data: {\n      permissions: ['fetchProducts', 'manageProducts'],\n    },\n    canActivate: [AuthorizationGuard],\n  },\n  {\n    path: 'orders',\n    loadChildren: () =>\n      import('./orders/orders.module').then((module) => module.OrdersModule),\n    data: {\n      permissions: ['fetchOrders', 'manageOrders'],\n    },\n    canActivate: [AuthorizationGuard],\n  },\n  {\n    path: 'promocodes',\n    loadChildren: () =>\n      import('./promo-codes/promo-codes.module').then(\n        (module) => module.PromoCodesModule\n      ),\n    data: {\n      permissions: ['fetchPromoCodes', 'managePromoCodes'],\n    },\n    canActivate: [AuthorizationGuard],\n  },\n  {\n    path: 'notifications',\n    loadChildren: () =>\n      import('./notifications/notifications.module').then(\n        (module) => module.NotificationsModule\n      ),\n    canActivate: [AuthorizationGuard],\n  },\n  { path: '**', redirectTo: '', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashboardRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AppUser } from 'src/app/models/user.model';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.scss']\n})\nexport class IndexComponent implements OnInit {\n  appUser: AppUser;\n\n  constructor(auth: AuthService) {\n    this.appUser = auth.appUser;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-12\">\n    <div class=\"card\" style=\"height: calc(100vh - 175px);\">\n      <div class=\"card-body\">\n        <div class=\"h-100 d-flex align-items-center justify-content-center\">\n          <h6>Welcome, {{ appUser.name }}</h6>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { SidebarComponent } from './sidebar.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { PermissionsService } from 'src/app/services/permissions.service';\n\n@NgModule({\n    imports: [\n        RouterModule,\n        CommonModule,\n        NgbModule,\n    ],\n    declarations: [SidebarComponent],\n    exports: [SidebarComponent],\n    providers: [PermissionsService]\n})\n\nexport class SidebarModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { NavbarComponent } from './navbar.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n    imports: [RouterModule, CommonModule, NgbModule],\n    declarations: [NavbarComponent],\n    exports: [NavbarComponent]\n})\n\nexport class NavbarModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FooterComponent } from './footer.component';\n\n@NgModule({\n    imports: [RouterModule, CommonModule],\n    declarations: [FooterComponent],\n    exports: [FooterComponent]\n})\n\nexport class FooterModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FixedPluginComponent } from './fixed-plugin.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n    imports: [RouterModule, CommonModule, NgbModule],\n    declarations: [FixedPluginComponent],\n    exports: [FixedPluginComponent]\n})\n\nexport class FixedPluginModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule, AsyncPipe } from '@angular/common';\n\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { SidebarModule } from '../shared/sidebar/sidebar.module';\nimport { NavbarModule } from '../shared/navbar/navbar.module';\nimport { FooterModule } from '../shared/footer/footer.module';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FixedPluginModule } from '../shared/fixed-plugin/fixed-plugin.module';\nimport { PermissionsService } from '../services/permissions.service';\nimport { IndexComponent } from './index/index.component';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthInterceptor } from '../interceptors/auth.interceptor';\n\n@NgModule({\n  declarations: [DashboardComponent, IndexComponent],\n  imports: [\n    CommonModule,\n    DashboardRoutingModule,\n    SidebarModule,\n    NavbarModule,\n    FooterModule,\n    NgbModule,\n    FixedPluginModule,\n  ],\n  providers: [\n    AsyncPipe,\n    PermissionsService,\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\n  ]\n})\nexport class DashboardModule {\n}\n"],"sourceRoot":"webpack:///"}