{"version":3,"sources":["./src/app/dashboard/orders/index/index.component.ts","./src/app/dashboard/orders/index/index.component.html","./src/app/models/order.model.ts","./src/app/dashboard/orders/orders.resolver.ts","./src/app/dashboard/orders/order-products-details/order-products-details.component.html","./src/app/dashboard/orders/order-products-details/order-products-details.component.ts","./src/app/dashboard/orders/order-products-form/order-products-form.component.html","./src/app/dashboard/orders/order-products-form/order-products-form.component.ts","./src/app/dashboard/orders/order-client-form/order-client-form.component.html","./src/app/dashboard/orders/order-client-form/order-client-form.component.ts","./src/app/dashboard/orders/order-form/order-form.component.html","./src/app/dashboard/orders/order-form/order-form.component.ts","./src/app/dashboard/orders/order-details/order-details.component.ts","./src/app/dashboard/orders/order-details/order-details.component.html","./src/app/dashboard/orders/order-delete/order-delete.component.ts","./src/app/dashboard/orders/order-delete/order-delete.component.html","./src/app/dashboard/orders/order-status-form/order-status-form.component.html","./src/app/dashboard/orders/orders-routing.module.ts","./src/app/dashboard/orders/order-status-form/order-status-form.component.ts","./src/app/dashboard/orders/orders.module.ts"],"names":["IndexComponent","route","router","this","status","snapshot","params","context","urls","createUrl","detailsUrl","data","properties","key","title","type","actions","icon","url","name","callback","o","print","subscribe","orders","queryParams","navigate","id","state","resource","relativeTo","filter","client","products","super","OrderProductItem","product","order","quantity","price","OrdersResolver","http","loader","element","order_products","map","e","description","price_id","brand_id","category_id","created_at","updated_at","value","get","environment","apiUrl","ordersFetchUrl","pipe","Json2Order","OrderProductsDetailsComponent","items","length","reduce","reduceItem","sum","item","OrderProductsFormComponent","onChange","onTouch","prepareUrl","itemForm","product_id","required","min","editable","edit","editItem","remove","removeItem","cb","Array","isArray","p","some","toString","find","push","reset","writeValue","splice","indexOf","provide","useExisting","multi","addItem","OrderClientFormComponent","users","information","form","valueChanges","OrderFormComponent","service","formGroup","promo_code","minLength","maxLength","email","phone","province","address","notes","user_id","history","open","content","backdrop","ok","OrderDetailsComponent","productsContext","tableUrl","component","printable","OrderDeleteComponent","deleteUrl","routes","path","runGuardsAndResolvers","resolve","children","pathMatch","OrderStatusFormComponent","modalService","notifier","statuses","modal","size","console","log","Number","parseInt","toSend","selectedStatus","put","success","error","dismiss","dismissAll","back","OrdersRoutingModule","forChild","OrdersModule","useClass"],"mappings":"gPAWO,Y,MAAMA,EASX,YAAoBC,EAA+BC,GAA/B,KAAAD,QAA+B,KAAAC,SACjDC,KAAKC,OAASH,EAAMI,SAASC,OAAOF,OACpCD,KAAKI,QAAU,CACbC,KAAM,CACJC,UAAW,iBACXC,WAAY,QAEdC,KAAMR,KAAKQ,KACXC,WAAY,CACV,CACEC,IAAK,eACLC,MAAO,SACPC,KAAM,UAER,CACEF,IAAK,cACLC,MAAO,cACPC,KAAM,UAER,CACEF,IAAK,eACLC,MAAO,eACPC,KAAM,WAGVD,MAAO,SACPE,QAAS,CACP,CACEC,KAAM,qBACNF,KAAM,MACNG,IAAK,aACLC,KAAM,iBAER,CACEF,KAAM,4BACNE,KAAM,QACNJ,KAAM,WACNK,SAAWC,IACTlB,KAAKmB,MAAMD,OAMnBpB,EAAMU,KAAKY,UAAUZ,IACnBR,KAAKQ,KAAOA,EAAKa,OACjBrB,KAAKI,QAAQI,KAAOR,KAAKQ,OAG3BV,EAAMwB,YAAYF,UAAUjB,IAC1BH,KAAKC,QAASE,aAAM,EAANA,EAAQF,UAAW,IAI9B,MAAMiB,GACXlB,KAAKD,OAAOwB,SAAS,CAAC,SAAUL,EAAEM,GAAI,WAAY,CAAEC,MAAO,CAAEC,SAAUR,EAAGC,OAAO,KAG5E,SAELnB,KAAKD,OAAOwB,SAAS,CAAC,KAAM,CAAEI,WAAY3B,KAAKF,MAAOwB,YAAa,CAAErB,OAAQD,KAAKC,W,6CArEzEJ,GAAc,sB,uBAAdA,EAAc,kD,MAAA,K,0UCX3B,6BACE,mBAAgE,uDAAoB,4BAAW,EAAA+B,YAC7F,mBAAmB,cAAG,OACtB,mBAAkB,kBAAO,OACzB,mBAAkB,mBAAQ,OAC1B,mBAAkB,oBAAQ,OAC1B,oBAAkB,sBAAU,OAC5B,oBAAkB,oBAAQ,OAC1B,oBAAkB,oBAAQ,OAC5B,OACF,Q,MAVgB,0BACkD,mC,sDDU3D,G,4BERA,MAAM,UAAc,IACvB,YACWJ,EACAvB,EACA4B,EACAC,GACPC,MAAMP,GAJC,KAAAA,KACA,KAAAvB,SACA,KAAA4B,SACA,KAAAC,YAMR,MAAME,EACT,YACWC,EACAC,EACAC,EACAC,GAHA,KAAAH,UACA,KAAAC,QACA,KAAAC,WACA,KAAAC,S,oDCPR,Y,MAAMC,EAwBT,YAAoBC,EAA0BC,GAA1B,KAAAD,OAA0B,KAAAC,SAvBvC,kBAAkBC,GACrB,IAAKA,EAED,OAAO,KAEX,MACMV,IADMU,aAAO,EAAPA,EAASC,kBAAkBD,aAAO,EAAPA,EAASV,WAC3BY,IAAKC,GAAW,IAAIX,EACrC,IAAI,IACAW,EAAEV,QAAQT,GACVmB,EAAEV,QAAQjB,KACV2B,EAAEV,QAAQW,YACVD,EAAEV,QAAQY,SAAU,KACpBF,EAAEV,QAAQa,SAAU,KACpBH,EAAEV,QAAQc,YAAa,KACvBJ,EAAEV,QAAQe,WAAYL,EAAEV,QAAQgB,WAAY,MAChD,IAAI,EAAMT,aAAO,EAAPA,EAAShB,GAAIgB,aAAO,EAAPA,EAASvC,OAAQ,KAAM,MAC9C0C,EAAER,SACF,IAAI,IAAMQ,EAAEP,MAAMZ,GAAImB,EAAEP,MAAMc,MAAOP,EAAEP,MAAMa,cAGjD,OAAO,IAAI,EAAMT,aAAO,EAAPA,EAAShB,GAAIgB,aAAO,EAAPA,EAASvC,OAAQuC,aAAO,EAAPA,EAASX,OAAQC,GAMpE,QAAQhC,EAA+B2B,GAGnC,OAAOzB,KAAKsC,KAAKa,IAAW,GAAIC,EAAA,EAAYC,UAAYD,EAAA,EAAYE,yBAFhDxD,EAAMwB,YAAYrB,SAAW,KAG5CsD,KAAK,OAAAb,EAAA,GAAIlC,GACCA,EAAKkC,IAAIC,GAAKN,EAAemB,WAAWb,O,6CAhClDN,GAAc,sB,yBAAdA,EAAc,QAAdA,EAAc,Y,GAApB,G,kDCLD,eAAgD,kBAAO,Q,uCAQrD,eACE,eAA2C,wEAASjC,QAAA,WAAkB,OACtE,eAA8C,wEAASA,QAAA,aAAoB,OAC7E,Q,yBARF,aACE,aAAI,QAAqB,OACzB,aAAI,QAAiB,OACrB,aAAI,QAAoB,OACxB,aAAI,QAAkC,OACtC,qBAIF,Q,kCARM,6BACA,yBACA,4BACA,uCAC2B,yCCJhC,Y,MAAMqD,EACX,UACiBC,GACf1D,KAAKI,QAAQsD,MAAQA,EAGvB,YACE,OAAO1D,KAAKI,QAAQsD,MAStB,YAGO,SAASA,GACd1D,KAAKI,QAAQsD,MAAQA,EAGvB,YACE,OAAK1D,KAAKI,QAAQsD,OAAuC,IAA9B1D,KAAKI,QAAQsD,MAAMC,OAKvC3D,KAAKI,QAAQsD,MAAME,OAAe5D,KAAK6D,WAAY,GAHjD,EAMH,WAAWC,EAAaC,GAC9B,OAAOD,EAAMC,EAAK5B,SAAW4B,EAAK3B,MAAMc,O,6CAjC/BO,I,uBAAAA,EAA6B,qgBDX1C,gBACE,kBACE,kBACE,aAAI,kBAAO,OACX,aAAI,mBAAQ,OACZ,aAAI,gBAAK,OACT,aAAI,iBAAK,OACT,sBACF,OACA,iBACE,uBAUF,OACA,iBACE,cACE,gBAAgB,gBAAM,OACtB,gBAAwB,SAAW,OACnC,cAAI,gBAAM,OACZ,OACF,OACF,OACF,Q,MAtB6B,yCAGnB,wCAcsB,wB,sCCbzB,G,yBCHG,oBACE,QACF,Q,yBAFQ,mBACN,8BCYL,Y,MAAMO,EASX,YAAoB1B,GAAA,KAAAA,OAkBpB,KAAA2B,SAAgB,OAIhB,KAAAC,QAAe,OArBblE,KAAKQ,KAAO,GACZR,KAAKsC,KAAKa,IAAeC,EAAA,EAAYe,WAAW,qBAAqB/C,UAAUZ,GAAQR,KAAK8B,SAAWtB,GAEvGR,KAAKoE,SAAW,IAAI,IAAU,CAC5BC,WAAY,IAAI,IAAY,KAAM,IAAWC,UAC7CnC,SAAU,IAAI,IAAY,EAAG,CAAC,IAAWmC,SAAU,IAAWC,IAAI,OAGpEvE,KAAKI,QAAU,CACboE,UAAU,EACVC,KAAOV,IAAW/D,KAAK0E,SAASX,IAChCY,OAASZ,IAAW/D,KAAK4E,WAAWb,IAEpCL,MAAO1D,KAAKQ,MAYhB,UAAUkD,GACR1D,KAAKQ,KAAOkD,EACZ1D,KAAKiE,SAASP,GACd1D,KAAKkE,QAAQR,GACb1D,KAAKI,QAAQsD,MAAQA,EAGvB,WAAWR,GACJA,IAEHA,EAAQ,IAEVlD,KAAKkD,MAAQA,EAGf,iBAAiB2B,GACf7E,KAAKiE,SAAWY,EAGlB,kBAAkBA,GAChB7E,KAAKkE,QAAUW,EAGjB,YAIA,mBACE,OAAK7E,KAAK8B,SAIAgD,MAAMC,QAAQ/E,KAAKQ,OAA8B,IAArBR,KAAKQ,KAAKmD,OAMvC3D,KAAK8B,SAASF,OAAOoD,IAAMhF,KAAKQ,KAAKyE,KAAKtC,GAAKA,EAAEV,QAAQT,GAAG0D,aAAeF,EAAExD,GAAG0D,aAJhFlF,KAAK8B,SAJL,GAaX,UACE,MAAMG,EAAmBjC,KAAK8B,SAASqD,KAAKH,GAAKA,EAAExD,GAAG0D,aAAelF,KAAKoE,SAASlB,MAAMmB,WAAWa,YAC9FnB,EAAI,eACR9B,UACAG,MAAOH,EAAQG,OACZpC,KAAKoE,SAASlB,OAGnBlD,KAAKQ,KAAK4E,KAAKrB,GACf/D,KAAKoE,SAASiB,QACdrF,KAAKsF,WAAWtF,KAAKQ,MAGvB,WAAWuD,GACT/D,KAAKQ,KAAK+E,OAAOvF,KAAKQ,KAAKgF,QAAQzB,GAAO,GAC1C/D,KAAKsF,WAAWtF,KAAKQ,MAGvB,SAASuD,GACP/D,KAAK4E,WAAWb,GAChB/D,KAAKoE,SAASiB,MAAM,CAClBhB,WAAYN,EAAK9B,QAAQT,GACzBW,SAAU4B,EAAK5B,Y,6CApGR6B,GAA0B,Y,uBAA1BA,EAA0B,4EAR1B,CACT,CACEyB,QAAS,IACTC,YAAa,YAAW,IAAM1B,GAC9B2B,OAAO,MAEV,2aDnBH,uCAEA,iBACE,gBACE,gBACE,gBACE,gBAAO,kBAAO,OACd,mBACE,yBAGF,OACF,OACF,OACA,gBACE,iBACE,iBAAO,oBAAQ,OACf,mBACF,OACF,OACA,iBACE,oBAAoE,gCAAS,EAAAC,aAC3E,gBACF,OACF,OACF,OACF,Q,MA1B4B,0BAET,qCAMc,uCAaY,6C,wECAtC,G,yBCiCG,oBAA+C,QAE7C,Q,yBAFM,mBAAuC,2BCnClD,Y,MAAMC,EAMX,YAAoBvD,GAAA,KAAAA,OAIpB,KAAA2B,SAAgB,OAIhB,KAAAC,QAAe,OAPblE,KAAKsC,KAAKa,IAAYC,EAAA,EAAYe,WAAW,kBAAkB/C,UAAUZ,GAAQR,KAAK8F,MAAQtF,GAWhG,UAAUuF,GACR/F,KAAKQ,KAAOuF,EACZ/F,KAAKiE,SAAS8B,GACd/F,KAAKkE,QAAQ6B,GAGf,WAAW7C,GACTlD,KAAKkD,MAAQA,EAGf,iBAAiB2B,GACf7E,KAAKiE,SAAWY,EAGlB,kBAAkBA,GAChB7E,KAAKkE,QAAUW,EAGjB,WACE7E,KAAKgG,KAAKC,aAAa7E,UAAUuB,IAC/B3C,KAAKsF,WAAWtF,KAAKgG,KAAK9C,U,6CAtCnB2C,GAAwB,Y,uBAAxBA,EAAwB,0EARxB,CACT,CACEJ,QAAS,IACTC,YAAa,YAAW,IAAMG,GAC9BF,OAAO,MAEV,y2BDjBH,iBACE,gBACE,gBACE,gBACE,gBAAO,eAAI,OACX,kBACF,OACF,OACF,OACA,gBACE,gBACE,gBACE,iBAAO,yBAAa,OACpB,mBACF,OACF,OACF,OACA,iBACE,iBACE,iBACE,iBAAO,iBAAK,OACZ,mBACF,OACF,OACF,OACA,iBACE,iBACE,iBACE,iBAAO,oBAAQ,OACf,mBACF,OACF,OACF,OACA,iBACE,iBACE,iBACE,iBAAO,mBAAO,OACd,mBACF,OACF,OACF,OACA,iBACE,iBACE,iBACE,iBAAO,iBAAK,OACZ,oBACF,OACF,OACF,OACA,iBACE,iBACE,iBACE,iBAAO,2BAAe,OACtB,qBACE,2BAGF,OACF,OACF,OACF,OACF,Q,MA7DM,yBAsD2B,mC,sECnC1B,G,2DChBL,gBACE,eAAkC,QAAW,OAC7C,mBAAyE,uDACvE,iBAAyB,eAAO,OAClC,OACF,OACA,gBACE,iBACE,gBACE,gBACE,kBACE,iBAAO,oBAAQ,OACf,kBACE,sCACF,OACF,OACF,OACF,OAEA,iBACE,iBACE,kBACE,iBAAO,sBAAU,OACjB,oBACF,OACF,OACF,OAEA,iBACE,iBACE,oCACF,OACF,OAEA,iBACE,kBACE,qBAAwH,2DACtH,oBACF,OACF,OACF,OACF,OACF,O,uBAzCoC,sBAM5B,sCAuBuB,kDAMiC,8ECzB3D,Y,MAAMO,UAA2B,IAStC,YAAY5D,EAAkBxC,EAAuBC,EAAgBoG,GACnEpE,MAAMO,EAAMxC,EAAOC,EAAQoG,GAE3BnG,KAAKoG,UAAY,IAAI,IAAU,CAC7BC,WAAY,IAAI,IAAY,KAAM,CAAC,IAAWC,UAAU,GAAI,IAAWC,UAAU,KACjFzE,SAAU,IAAI,IAAY,KAAM,IAAWwC,UAC3CzC,OAAQ,IAAI,IAAU,CACpBb,KAAM,IAAI,IAAY,KAAM,CAAC,IAAWsD,SAAU,IAAWgC,UAAU,KACvEE,MAAO,IAAI,IAAY,KAAM,CAAC,IAAWlC,SAAU,IAAWkC,QAC9DC,MAAO,IAAI,IAAY,KAAM,CAAC,IAAWnC,WACzCoC,SAAU,IAAI,IAAY,KAAM,CAAC,IAAWpC,WAC5CqC,QAAS,IAAI,IAAY,KAAM,CAAC,IAAWrC,WAC3CsC,MAAO,IAAI,IAAY,KAAM,CAAC,IAAWN,UAAU,MACnDO,QAAS,IAAI,IAAY,UAK/B,Y,QAOE,OANA7G,KAAK8B,SAA8D,QAAtD,EAAG,EAAe0B,WAAyB,QAAf,EAAQ,OAAPsD,cAAO,IAAPA,aAAO,EAAPA,QAASrF,aAAK,eAAEC,iBAAS,eAAEI,SAM9D9B,KAAKmG,QAAQY,KAAK/G,KAAKgH,QAJG,CAC/BC,SAAU,WAMd,cACE,MAAO,kBAGT,aACE,MAAO,kBAGT,gBACE,MAAO,W,6CA9CEf,GAAkB,0C,uBAAlBA,EAAkB,uD,MAAA,K,+pBDd/B,sBAAuB,gCAAS,EAAAgB,QAAM,QAAa,OAEnD,0C,MAFsC,0B,8DCc/B,G,gBCHA,Y,MAAMC,EAIX,WACE,MAAMjF,EAAe,EAAesB,WAAWsD,QAAQrF,MAAMC,UAE7D1B,KAAKoH,gBAAkB,CACrB5C,UAAU,EACVd,MAAOxB,aAAK,EAALA,EAAOJ,UAGhB9B,KAAKI,QAAU,CACbC,KAAM,CACJgH,SAAU,WAEZ7G,KAAM0B,EACNzB,WAAY,CACV,CACEC,IAAK,KACLC,MAAO,KACPC,KAAM,UAER,CACEF,IAAK,eACLC,MAAO,SACPC,KAAM,UAER,CACEF,IAAK,cACLC,MAAO,cACPC,KAAM,UAER,CACEF,IAAK,eACLC,MAAO,eACPC,KAAM,UAER,CACEF,IAAK,iBACLC,MAAO,iBACPC,KAAM,UAER,CACEF,IAAK,WACLC,MAAO,WACPC,KAAM,YAEN0G,UAAW,+BAGf3G,MAAO,qBAAqBuB,aAAK,EAALA,EAAOV,IACnC+F,WAAW,I,6CApDJJ,I,uBAAAA,EAAqB,qGCXlC,iCACE,uCACF,Q,MAFsB,0BACQ,4C,oCDUvB,G,gBEFA,Y,MAAMK,EAGX,eAEA,WACExH,KAAKI,QAAU,CACbqH,UAAW,kBACXjH,KAAMsG,QAAQrF,MAAMC,SACpBf,MAAO,yBACPiC,YAAa,uC,6CAVN4E,I,uBAAAA,EAAoB,mGCTjC,gC,KAAqB,2B,kCDSd,G,6DEEG,oBACI,aAAI,QAAa,OACrB,Q,yBAFQ,sBACA,uB,uCAThB,gBACE,eAAkC,QAAW,OAC7C,YAAG,QAAiB,OAEpB,gBACE,gBACE,kBAAgC,iBAAM,OACtC,mBAA6B,4EAC3B,0BAGF,OACF,OACF,OACF,OACA,iBACE,qBAA+E,2DAC7E,oBACF,OACA,qBAAqD,uDACnD,oBACF,OACF,O,uBArBoC,sBAC/B,4BAK8B,yCACD,mCAQkB,4CCRtD,MAAME,EAAiB,CACrB,CACEC,KAAM,GACNL,UAAW,EACXM,sBAAuB,SACvBC,QAAS,CACPxG,OAAQ,GAEVyG,SAAU,CACR,CACEH,KAAM,SACNL,UAAW,GAEb,CACEK,KAAM,WACNL,UAAW,GAEb,CACEK,KAAM,cACNI,UAAW,OACXT,UAAW,GAEb,CACEK,KAAM,aACNI,UAAW,OACXT,UAAW,GAEb,CACEK,KAAM,aACNI,UAAW,OACXT,UC7BD,M,MAAMU,EAkBX,YACU1F,EACA2F,EACAC,GAFA,KAAA5F,OACA,KAAA2F,eACA,KAAAC,WAfV,KAAAC,SAAW,CACT,CAAExH,MAAO,UAAWuC,MAAO,GAC3B,CAAEvC,MAAO,WAAYuC,MAAO,GAC5B,CAAEvC,MAAO,WAAYuC,MAAO,GAC5B,CAAEvC,MAAO,aAAcuC,MAAO,GAC9B,CAAEvC,MAAO,WAAYuC,MAAO,GAC5B,CAAEvC,MAAO,WAAYuC,MAAO,IAY9B,kBAUE,GATAlD,KAAKQ,KAAOsG,QAAQrF,MAAMC,SAO1B1B,KAAKoI,MAAQpI,KAAKiI,aAAalB,KAAK/G,KAAKgH,QALR,CAC/BC,SAAU,SACVoB,KAAM,OAKHrI,KAAKoI,OAAUpI,KAAKQ,KAUzB,OALAR,KAAKW,MAAQ,gBAAiBX,KAAKQ,KAAKgB,YACxCxB,KAAK4C,YAAc,mGAGnB0F,QAAQC,IAAIvI,KAAKQ,KAAKP,OAAOU,OACrB6H,OAAOC,SAASzI,KAAKQ,KAAKP,OAAOU,MAAMuE,WAAY,KAEzD,KAAK,EACHlF,KAAKmI,SAAW,CACd,CAAExH,MAAO,WAAYuC,MAAO,GAC5B,CAAEvC,MAAO,WAAYuC,MAAO,GAC5B,CAAEvC,MAAO,WAAYuC,MAAO,IAE9B,MACF,KAAK,EACHlD,KAAKmI,SAAW,CACd,CAAExH,MAAO,WAAYuC,MAAO,GAC5B,CAAEvC,MAAO,aAAcuC,MAAO,IAEhC,MACF,KAAK,EACHlD,KAAKmI,SAAW,CACd,CAAExH,MAAO,aAAcuC,MAAO,IAEhC,MACF,KAAK,EACL,KAAK,EACL,KAAK,EACHlD,KAAKmI,SAAW,QA/BlBnI,KAAKkH,KAqCF,SACL,MAAMwB,EAAS,CACbzI,OAAQD,KAAK2I,gBAGf3I,KAAKsC,KACFsG,IAAaxF,EAAA,EAAYe,WAAW,kBAAmB,CAAC3C,GAAIxB,KAAKQ,KAAKgB,KAAMkH,GAC5EtH,UAAU8F,IACT,GAAIA,EAIF,OAFAlH,KAAKkI,SAASW,QAAQ,0CACtB7I,KAAKkH,KAGPlH,KAAKkI,SAASY,MAAM,wDAInB,KACD9I,KAAKoI,MAEPpI,KAAKoI,MAAMW,UAGX/I,KAAKiI,aAAae,aAEpBlC,QAAQmC,Q,6CAnGCjB,GAAwB,gC,uBAAxBA,EAAwB,8D,MAAA,K,meFZrC,sBAAuB,gCAAS,EAAAd,QAAM,8BAAmB,OAEzD,2C,0DEUO,ODuCA,Y,MAAMgC,G,8BAAAA,I,oDAAAA,IAAmB,SAHrB,CAAC,IAAaC,SAASzB,IACtB,O,GAEL,G,4BERA,Y,MAAM0B,G,8BAAAA,I,oDAAAA,IAAY,UALZ,CACT,EACA,CAAE3D,QAAS,IAAmB4D,SAAU,IAAiB1D,OAAO,IACjE,SAbQ,CACP,IACA,EACA,IACA,IACA,IACA,IACA,IACA,Q,GAOG","file":"12.2a977e4aaef020a458e4.js","sourcesContent":["import { Component, ViewChild } from '@angular/core';\nimport { Order } from 'src/app/models/order.model';\nimport { TableViewComponent } from 'src/app/shared/dashboard-resource/table-view/table-view.component';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ITableContext } from 'src/app/shared/dashboard-resource/table-view/table.context';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.scss']\n})\nexport class IndexComponent {\n  @ViewChild('table')\n  public table: TableViewComponent<Order>;\n\n  public data: Order[];\n  public status: number;\n\n  public context: ITableContext<Order>;\n\n  constructor(private route: ActivatedRoute, private router: Router) {\n    this.status = route.snapshot.params.status;\n    this.context = {\n      urls: {\n        createUrl: '/orders/create',\n        detailsUrl: '/:id'\n      },\n      data: this.data,\n      properties: [\n        {\n          key: 'status.title',\n          title: 'Status',\n          type: 'string'\n        },\n        {\n          key: 'client.name',\n          title: 'Client Name',\n          type: 'string'\n        },\n        {\n          key: 'client.email',\n          title: 'Client Email',\n          type: 'string'\n        }\n      ],\n      title: 'Orders',\n      actions: [\n        {\n          icon: 'nc-icon nc-bell-55',\n          type: 'url',\n          url: ':id/status',\n          name: 'change status',\n        },\n        {\n          icon: 'nc-icon nc-single-copy-04',\n          name: 'print',\n          type: 'callback',\n          callback: (o: Order) => {\n            this.print(o);\n          }\n        }\n      ]\n    };\n\n    route.data.subscribe(data => {\n      this.data = data.orders;\n      this.context.data = this.data;\n    });\n\n    route.queryParams.subscribe(params => {\n      this.status = params?.status || -1;\n    });\n  }\n\n  public print(o: Order): void {\n    this.router.navigate(['orders', o.id, 'details'], { state: { resource: o, print: true } });\n  }\n\n  public filter(): void {\n    // this.route.snapshot.queryParams.status = this.status;\n    this.router.navigate(['.'], { relativeTo: this.route, queryParams: { status: this.status } });\n  }\n}\n","<app-table-view [context]=\"context\" #table>\r\n  <select class=\"option btn btn-secondary btn-rounded pull-right\" [(ngModel)]=\"status\" (change)=\"filter()\">\r\n    <option value=\"-1\">All</option>\r\n    <option value=\"0\">Pending</option>\r\n    <option value=\"1\">Accepted</option>\r\n    <option value=\"2\">Shipping</option>\r\n    <option value=\"3\">Deliveried</option>\r\n    <option value=\"4\">Rejected</option>\r\n    <option value=\"5\">Canceled</option>\r\n  </select>\r\n</app-table-view>","import { Resource } from '../shared/dashboard-resource/resource.model';\r\nimport { Product, Price } from './product.model';\r\n\r\nexport class Order extends Resource {\r\n    constructor(\r\n        public id: string,\r\n        public status: Status,\r\n        public client: OrderClientInformation,\r\n        public products: OrderProductItem[]) {\r\n        super(id);\r\n    }\r\n}\r\n\r\n\r\nexport class OrderProductItem {\r\n    constructor(\r\n        public product: Product,\r\n        public order: Order,\r\n        public quantity: number,\r\n        public price: Price) {\r\n\r\n    }\r\n}\r\n\r\nexport class OrderClientInformation {\r\n    constructor(\r\n        public name: string,\r\n        public email: string,\r\n        public phone: string,\r\n        public province: string,\r\n        public address: string,\r\n        public notes: string,\r\n        public user_id: number) {\r\n\r\n    }\r\n}\r\n\r\nexport class Status {\r\n    public static Pending = 0;\r\n    public static Accepted = 1;\r\n    public static Shipping = 2;\r\n    public static Deliveried = 3;\r\n    public static Rejected = 4;\r\n    public static Canceled = 5;\r\n\r\n    constructor(\r\n        public title: number) {\r\n\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\n\r\nimport { environment } from '../../../environments/environment';\r\nimport { Order, OrderProductItem } from '../../models/order.model';\r\nimport { Observable } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { LoaderService } from 'src/app/services/loader.service';\r\nimport { Product, Price } from 'src/app/models/product.model';\r\n\r\n@Injectable()\r\nexport class OrdersResolver implements Resolve<Order[]> {\r\n    public static Json2Order(element: any): Order {\r\n        if (!element)\r\n        {\r\n            return null;\r\n        }\r\n        const src = element?.order_products || element?.products;\r\n        const products = src.map((e: any) => new OrderProductItem(\r\n            new Product(\r\n                e.product.id,\r\n                e.product.name,\r\n                e.product.description,\r\n                e.product.price_id, null,\r\n                e.product.brand_id, null,\r\n                e.product.category_id, null,\r\n                e.product.created_at, e.product.updated_at, null),\r\n            new Order(element?.id, element?.status, null, null),\r\n            e.quantity,\r\n            new Price(e.price.id, e.price.value, e.price.updated_at),\r\n        ));\r\n\r\n        return new Order(element?.id, element?.status, element?.client, products);\r\n    }\r\n\r\n    constructor(private http: HttpClient, private loader: LoaderService) {\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Order[]> {\r\n        const orderStatus = route.queryParams.status || -1;\r\n\r\n        return this.http.get<any[]>(`${ environment.apiUrl }/${ environment.ordersFetchUrl }?status=${ orderStatus }`)\r\n            .pipe(map(data => {\r\n                return data.map(e => OrdersResolver.Json2Order(e));\r\n            }));\r\n    }\r\n}\r\n","<div class=\"table-responsive overflow-hidden\">\n  <table class=\"table\">\n    <thead class=\"text-primary\">\n      <th>Product</th>\n      <th>Quantity</th>\n      <th>Price</th>\n      <th>Total</th>\n      <th class=\"text-right\" *ngIf=\"context.editable\">Actions</th>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let op of context.items\">\n        <td>{{ op.product.name }}</td>\n        <td>{{ op.quantity }}</td>\n        <td>{{ op.price.value }}</td>\n        <td>{{ op.quantity * op.price.value }}</td>\n        <td class=\"text-right actions\" *ngIf=\"context.editable\">\n          <i class=\"fa fa-edit m-1 p-1\" title=\"Edit\" (click)=\"context.edit(op)\"></i>\n          <i class=\"fa fa-times m-1 p-1\" title=\"Cancel\" (click)=\"context.remove(op)\"></i>\n        </td>\n      </tr>\n    </tbody>\n    <tfoot>\n      <tr>\n        <th colspan=\"3\">&nbsp;</th>\n        <th class=\"text-danger\">{{ total }}</th>\n        <th>&nbsp;</th>\n      </tr>\n    </tfoot>\n  </table>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Property } from 'src/app/shared/dashboard-resource/property.model';\nimport { OrderProductItem } from '../../../models/order.model';\nimport { OrderProductDetailsContext } from './order-products-details.context';\n\n\n@Component({\n  selector: 'app-order-products-details',\n  templateUrl: './order-products-details.component.html',\n  styleUrls: ['./order-products-details.component.scss']\n})\nexport class OrderProductsDetailsComponent implements OnInit {\n  @Input()\n  public set value(items: OrderProductItem[]) {\n    this.context.items = items;\n  }\n\n  public get value(): OrderProductItem[] {\n    return this.context.items;\n  }\n\n  @Input()\n  public property: Property;\n\n  @Input()\n  public context: OrderProductDetailsContext;\n\n  ngOnInit(): void {\n  }\n\n  public setItems(items: OrderProductItem[]): void {\n    this.context.items = items;\n  }\n\n  public get total(): number {\n    if (!this.context.items || this.context.items.length === 0)\n    {\n      return 0;\n    }\n\n    return this.context.items.reduce<number>(this.reduceItem, 0);\n  }\n\n  private reduceItem(sum: number, item: OrderProductItem): number {\n    return sum + item.quantity * item.price.value;\n  }\n}\n","<app-order-products-details [context]=\"context\"></app-order-products-details>\n\n<form class=\"form\" [formGroup]=\"itemForm\">\n  <div class=\"row\">\n    <div class=\"col md-5\">\n      <div class=\"form-group\">\n        <label>Product</label>\n        <select class=\"form-control form-control-sm\" formControlName=\"product_id\">\n          <option [value]=\"p.id\" *ngFor=\"let p of freeProducts\">\n            {{ p.name }}\n          </option>\n        </select>\n      </div>\n    </div>\n    <div class=\"col md-5\">\n      <div class=\"form-group\">\n        <label>Quantity</label>\n        <input type=\"text\" class=\"form-control form-control-sm\" formControlName=\"quantity\" />\n      </div>\n    </div>\n    <div class=\"col md-2 d-flex align-items-end\">\n      <button class=\"btn btn-md btn-success\" [disabled]=\"!itemForm.valid\" (click)=\"addItem()\">\n        OK\n      </button>\n    </div>\n  </div>\n</form>","import { Component, OnInit, forwardRef, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Product, Price } from 'src/app/models/product.model';\nimport { environment } from 'src/environments/environment';\nimport { OrderProductItem } from 'src/app/models/order.model';\nimport { OrderProductDetailsContext } from '../order-products-details/order-products-details.context';\n\n\n@Component({\n  selector: 'app-order-products-form',\n  templateUrl: './order-products-form.component.html',\n  styleUrls: ['./order-products-form.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => OrderProductsFormComponent),\n      multi: true\n    }\n  ]\n})\nexport class OrderProductsFormComponent implements OnInit, ControlValueAccessor {\n  public products: Product[];\n\n  @Input()\n  public data: OrderProductItem[];\n\n  public itemForm: FormGroup;\n  public context: OrderProductDetailsContext;\n\n  constructor(private http: HttpClient) {\n    this.data = [];\n    this.http.get<Product[]>(environment.prepareUrl('productsFetchUrl')).subscribe(data => this.products = data);\n\n    this.itemForm = new FormGroup({\n      product_id: new FormControl(null, Validators.required),\n      quantity: new FormControl(1, [Validators.required, Validators.min(1)]),\n    });\n\n    this.context = {\n      editable: true,\n      edit: (item) => { this.editItem(item); },\n      remove: (item) => { this.removeItem(item); },\n\n      items: this.data,\n    };\n  }\n\n  onChange: any = () => {\n\n  }\n\n  onTouch: any = () => {\n\n  }\n\n  set value(items: OrderProductItem[]) {\n    this.data = items;\n    this.onChange(items);\n    this.onTouch(items);\n    this.context.items = items;\n  }\n\n  writeValue(value: OrderProductItem[]): void {\n    if (!value)\n    {\n      value = [];\n    }\n    this.value = value;\n  }\n\n  registerOnChange(cb: any): void {\n    this.onChange = cb;\n  }\n\n  registerOnTouched(cb: any): void {\n    this.onTouch = cb;\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  public get freeProducts(): Product[] {\n    if (!this.products)\n    {\n      return [];\n    }\n    else if (!Array.isArray(this.data) || this.data.length === 0)\n    {\n      return this.products;\n    }\n    else\n    {\n      return this.products.filter(p => !this.data.some(e => e.product.id.toString() === p.id.toString()));\n    }\n  }\n\n\n  addItem(): void {\n    const product: Product = this.products.find(p => p.id.toString() === this.itemForm.value.product_id.toString());\n    const item: OrderProductItem = {\n      product,\n      price: product.price,\n      ...this.itemForm.value,\n    };\n\n    this.data.push(item);\n    this.itemForm.reset();\n    this.writeValue(this.data);\n  }\n\n  removeItem(item: OrderProductItem): void {\n    this.data.splice(this.data.indexOf(item), 1);\n    this.writeValue(this.data);\n  }\n\n  editItem(item: OrderProductItem): void {\n    this.removeItem(item);\n    this.itemForm.reset({\n      product_id: item.product.id,\n      quantity: item.quantity,\n    });\n  }\n}\n","<form [formGroup]=\"form\" autocomplete=\"off\">\n  <div class=\"row\">\n    <div class=\"col-12 px-3\">\n      <div class=\"form-group\">\n        <label>Name</label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Name\" formControlName=\"name\" autocomplete=\"off\" />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-12 px-3\">\n      <div class=\"form-group\">\n        <label>Email address</label>\n        <input type=\"email\" class=\"form-control\" placeholder=\"Email\" formControlName=\"email\" autocomplete=\"off\" />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-12 px-3\">\n      <div class=\"form-group\">\n        <label>Phone</label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Phone\" formControlName=\"phone\" autocomplete=\"off\" />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-12 px-3\">\n      <div class=\"form-group\">\n        <label>Province</label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Province\" formControlName=\"province\" autocomplete=\"off\" />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-md-12 px-3\">\n      <div class=\"form-group\">\n        <label>Address</label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Address\" formControlName=\"address\" autocomplete=\"off\" />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-md-12 px-3\">\n      <div class=\"form-group\">\n        <label>Notes</label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Notes\" formControlName=\"notes\" autocomplete=\"off\" />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-md-12 px-3\">\n      <div class=\"form-group\">\n        <label>User (Optional)</label>\n        <select class=\"form-control\" formControlName=\"user_id\">\n          <option [value]=\"u.id\" *ngFor=\"let u of users\">{{\n            u.user_name\n          }}</option>\n        </select>\n      </div>\n    </div>\n  </div>\n</form>","import { Component, OnInit, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, FormGroup, FormControl, Validators, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { OrderClientInformation } from 'src/app/models/order.model';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from 'src/app/models/user.model';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-order-client-form',\n  templateUrl: './order-client-form.component.html',\n  styleUrls: ['./order-client-form.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => OrderClientFormComponent),\n      multi: true\n    }\n  ]\n})\nexport class OrderClientFormComponent implements OnInit, ControlValueAccessor {\n  @Input()\n  form: FormGroup;\n  public data: OrderClientInformation;\n  public users: User[];\n\n  constructor(private http: HttpClient) {\n    this.http.get<User[]>(environment.prepareUrl('usersFetchUrl')).subscribe(data => this.users = data);\n  }\n\n  onChange: any = () => {\n\n  }\n\n  onTouch: any = () => {\n\n  }\n\n  set value(information: OrderClientInformation) {\n    this.data = information;\n    this.onChange(information);\n    this.onTouch(information);\n  }\n\n  writeValue(value: OrderClientInformation): void {\n    this.value = value;\n  }\n\n  registerOnChange(cb: any): void {\n    this.onChange = cb;\n  }\n\n  registerOnTouched(cb: any): void {\n    this.onTouch = cb;\n  }\n\n  ngOnInit(): void {\n    this.form.valueChanges.subscribe(e => {\n      this.writeValue(this.form.value);\n    });\n  }\n\n}\n","<ngb-alert type=\"info\" (close)=\"ok()\">{{ message }}</ngb-alert>\n\n<ng-template #content>\n  <div class=\"modal-header\">\n    <h6 class=\"modal-title pt-1 mt-1\">{{ title }}</h6>\n    <button type=\"button\" class=\"close\" style=\"border: none; outline: none;\" (click)=\"ok()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <form [formGroup]=\"formGroup\">\n      <div class=\"row\">\n        <div class=\"col-12 px-3\">\n          <div class=\"form-group\">\n            <label>Products</label>\n            <div class=\"form-control\">\n              <app-order-products-form formControlName=\"products\"></app-order-products-form>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-12 px-3\">\n          <div class=\"form-group\">\n            <label>Promo Code</label>\n            <input type=\"text\" class=\"form-control\" placeholder=\"Ex. BX6GHIK8\" formControlName=\"promo_code\" autocomplete=\"off\" />\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-12 px-3\">\n          <app-order-client-form [form]=\"formGroup.controls.client\"></app-order-client-form>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"update ml-auto mr-auto\">\n          <button type=\"submit\" class=\"btn btn-primary btn-round\" [disabled]=\"uploading ||  !formGroup.dirty || !formGroup.valid\" (click)=\"submit()\">\n            Submit\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</ng-template>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ResourceFormContent } from 'src/app/shared/dashboard-resource/resource-form/resource-form.component';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgbModal, NgbModalRef, NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\nimport { OrderProductItem } from 'src/app/models/order.model';\nimport { OrdersResolver } from '../orders.resolver';\n\n@Component({\n  selector: 'app-order-form',\n  templateUrl: './order-form.component.html',\n  styleUrls: ['./order-form.component.scss']\n})\nexport class OrderFormComponent extends ResourceFormContent {\n  title: string;\n  message: string;\n  formGroup: FormGroup;\n\n  @ViewChild('content') content: ElementRef<HTMLElement>;\n\n  products: OrderProductItem[];\n\n  constructor(http: HttpClient, route: ActivatedRoute, router: Router, service: NgbModal) {\n    super(http, route, router, service);\n\n    this.formGroup = new FormGroup({\n      promo_code: new FormControl(null, [Validators.minLength(8), Validators.maxLength(8)]),\n      products: new FormControl(null, Validators.required),\n      client: new FormGroup({\n        name: new FormControl(null, [Validators.required, Validators.minLength(3)]),\n        email: new FormControl(null, [Validators.required, Validators.email]),\n        phone: new FormControl(null, [Validators.required]),\n        province: new FormControl(null, [Validators.required]),\n        address: new FormControl(null, [Validators.required]),\n        notes: new FormControl(null, [Validators.minLength(10)]),\n        user_id: new FormControl(null)\n      }),\n    });\n  }\n\n  openModal(): NgbModalRef {\n    this.products = OrdersResolver.Json2Order(history?.state?.resource)?.products;\n\n    const options: NgbModalOptions = {\n      backdrop: 'static'\n    };\n\n    return this.service.open(this.content, options);\n  }\n\n  get postUrl(): string {\n    return 'ordersCreateUrl';\n  }\n\n  get putUrl(): string {\n    return 'ordersUpdateUrl';\n  }\n\n  get parentUrl(): string {\n    return '/orders';\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Order } from 'src/app/models/order.model';\nimport { IResourceDetailsContext } from 'src/app/shared/dashboard-resource/resource-details/resource-details.context';\nimport { OrdersResolver } from '../orders.resolver';\nimport { OrderProductDetailsContext } from '../order-products-details/order-products-details.context';\n\n@Component({\n  selector: 'app-order-details',\n  templateUrl: './order-details.component.html',\n  styleUrls: ['./order-details.component.scss']\n})\nexport class OrderDetailsComponent implements OnInit {\n  public context: IResourceDetailsContext<Order>;\n  public productsContext: OrderProductDetailsContext;\n\n  ngOnInit(): void {\n    const order: Order = OrdersResolver.Json2Order(history.state.resource);\n\n    this.productsContext = {\n      editable: false,\n      items: order?.products,\n    };\n\n    this.context = {\n      urls: {\n        tableUrl: '/orders',\n      },\n      data: order,\n      properties: [\n        {\n          key: 'id',\n          title: 'Id',\n          type: 'string'\n        },\n        {\n          key: 'status.title',\n          title: 'Status',\n          type: 'string'\n        },\n        {\n          key: 'client.name',\n          title: 'Client Name',\n          type: 'string'\n        },\n        {\n          key: 'client.email',\n          title: 'Client Email',\n          type: 'string'\n        },\n        {\n          key: 'client.address',\n          title: 'Client Address',\n          type: 'string'\n        },\n        {\n          key: 'products',\n          title: 'Products',\n          type: 'component',\n          // component: OrderProductsDetailsComponent,\n          component: 'app-order-products-details',\n        },\n      ],\n      title: `Details of order ${ order?.id }`,\n      printable: true,\n    };\n  }\n}\n","<app-resource-details [context]=\"context\">\r\n  <app-order-products-details [context]=\"productsContext\"></app-order-products-details>\r\n</app-resource-details>","import { Component, OnInit } from '@angular/core';\nimport { Order } from 'src/app/models/order.model';\nimport { ResourceDeleteContext } from 'src/app/shared/dashboard-resource/resource-delete/resource-delete.component';\n\n@Component({\n  selector: 'app-order-delete',\n  templateUrl: './order-delete.component.html',\n  styleUrls: ['./order-delete.component.scss']\n})\nexport class OrderDeleteComponent implements OnInit {\n  context: ResourceDeleteContext<Order>;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.context = {\n      deleteUrl: 'ordersDeleteUrl',\n      data: history.state.resource,\n      title: 'Delete Order Resource!',\n      description: 'Are you sure to delete this order?'\n    };\n  }\n}\n","<app-resource-delete [context]=\"context\"></app-resource-delete>","<ngb-alert type=\"info\" (close)=\"ok()\">Change Order Status</ngb-alert>\n\n<ng-template #content>\n  <div class=\"modal-body\">\n    <h6 class=\"modal-title mt-1 pt-2\">{{ title }}</h6>\n    <p>{{ description }}</p>\n\n    <div class=\"form\">\n      <div class=\"form-group\">\n        <label class=\"form-group-label\">Status</label>\n        <select class=\"form-control\" [(ngModel)]=\"selectedStatus\">\n          <option [value]=\"s.value\" *ngFor=\"let s of statuses\">\n              <h3>{{ s.title }}</h3>\n          </option>\n        </select>\n      </div>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button class=\"btn btn-sm btn-rounded btn-danger\" [disabled]=\"!selectedStatus\" (click)=\"change()\">\n      Change\n    </button>\n    <button class=\"btn btn-sm btn-rounded btn-secondary\" (click)=\"ok()\">\n      Cancel\n    </button>\n  </div>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nimport { IndexComponent } from './index/index.component';\nimport { OrdersResolver } from './orders.resolver';\nimport { OrderFormComponent } from './order-form/order-form.component';\nimport { OrderDetailsComponent } from './order-details/order-details.component';\nimport { OrderDeleteComponent } from './order-delete/order-delete.component';\nimport { OrderStatusFormComponent } from './order-status-form/order-status-form.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: IndexComponent,\n    runGuardsAndResolvers: 'always',\n    resolve: {\n      orders: OrdersResolver\n    },\n    children: [\n      {\n        path: 'create',\n        component: OrderFormComponent,\n      },\n      {\n        path: ':id/edit',\n        component: OrderFormComponent,\n      },\n      {\n        path: ':id/details',\n        pathMatch: 'full',\n        component: OrderDetailsComponent,\n      },\n      {\n        path: ':id/delete',\n        pathMatch: 'full',\n        component: OrderDeleteComponent,\n      },\n      {\n        path: ':id/status',\n        pathMatch: 'full',\n        component: OrderStatusFormComponent,\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OrdersRoutingModule { }\n","import { Component, OnInit, AfterViewInit, ElementRef, ViewChild } from '@angular/core';\nimport { Order } from 'src/app/models/order.model';\nimport { NgbModalRef, NgbModalOptions, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { NotificationService } from 'src/app/services/notification.service';\n\n@Component({\n  selector: 'app-order-status-form',\n  templateUrl: './order-status-form.component.html',\n  styleUrls: ['./order-status-form.component.scss']\n})\nexport class OrderStatusFormComponent implements AfterViewInit {\n  data: Order;\n  title: string;\n  description: string;\n\n  selectedStatus: number;\n  statuses = [\n    { title: 'pending', value: 0, },\n    { title: 'accepted', value: 1, },\n    { title: 'shipping', value: 2, },\n    { title: 'deliveried', value: 3, },\n    { title: 'rejected', value: 4, },\n    { title: 'canceled', value: 5, },\n  ];\n\n  private modal: NgbModalRef;\n  @ViewChild('content') content: ElementRef;\n\n  constructor(\n    private http: HttpClient,\n    private modalService: NgbModal,\n    private notifier: NotificationService) {\n  }\n\n  ngAfterViewInit(): void {\n    this.data = history.state.resource;\n\n    const options: NgbModalOptions = {\n      backdrop: 'static',\n      size: 'md'\n    };\n\n    this.modal = this.modalService.open(this.content, options);\n    // console.log(this.modal);\n    if (!this.modal || !this.data)\n    {\n      this.ok();\n      return;\n    }\n    this.title = `Change order ${ this.data.id } status`;\n    this.description = 'Please be aware that this very important action to take sometimes it is not able to take it back';\n\n    // this.statuses = this.statuses.filter(e => e.value > this.data.status.title);\n    console.log(this.data.status.title);\n    switch (Number.parseInt(this.data.status.title.toString(), 10))\n    {\n      case 0:\n        this.statuses = [\n          { title: 'accepted', value: 1, },\n          { title: 'rejected', value: 4, },\n          { title: 'canceled', value: 5, },\n        ];\n        break;\n      case 1:\n        this.statuses = [\n          { title: 'shipping', value: 2, },\n          { title: 'deliveried', value: 3, },\n        ];\n        break;\n      case 2:\n        this.statuses = [\n          { title: 'deliveried', value: 3, },\n        ];\n        break;\n      case 3:\n      case 4:\n      case 5:\n        this.statuses = [];\n        break;\n    }\n\n  }\n\n  public change(): void {\n    const toSend = {\n      status: this.selectedStatus,\n    };\n\n    this.http\n      .put<boolean>(environment.prepareUrl('ordersStatusUrl', {id: this.data.id}), toSend)\n      .subscribe(ok => {\n        if (ok)\n        {\n          this.notifier.success('Order status updated successfully');\n          this.ok();\n          return;\n        }\n        this.notifier.error('Somthing went wrong, Failed to delete the resource');\n      });\n  }\n\n  public ok(): void {\n    if (this.modal)\n    {\n      this.modal.dismiss();\n    } else\n    {\n      this.modalService.dismissAll();\n    }\n    history.back();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxPrintModule } from 'ngx-print';\n\nimport { OrdersRoutingModule } from './orders-routing.module';\nimport { IndexComponent } from './index/index.component';\nimport { DashboardResourceModule } from 'src/app/shared/dashboard-resource/dashboard-resource.module';\nimport { HTTP_INTERCEPTORS, HttpClient, HttpClientModule } from '@angular/common/http';\nimport { AuthInterceptor } from 'src/app/interceptors/auth.interceptor';\n\nimport { OrdersResolver } from './orders.resolver';\nimport { OrderDeleteComponent } from './order-delete/order-delete.component';\nimport { OrderDetailsComponent } from './order-details/order-details.component';\nimport { OrderFormComponent } from './order-form/order-form.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { OrderProductsFormComponent } from './order-products-form/order-products-form.component';\nimport { OrderClientFormComponent } from './order-client-form/order-client-form.component';\nimport { OrderStatusFormComponent } from './order-status-form/order-status-form.component';\nimport { OrderProductsDetailsComponent } from './order-products-details/order-products-details.component';\n\n@NgModule({\n  declarations: [\n    IndexComponent,\n    OrderDeleteComponent,\n    OrderDetailsComponent,\n    OrderFormComponent, OrderProductsFormComponent, OrderClientFormComponent, OrderStatusFormComponent, OrderProductsDetailsComponent],\n  imports: [\n    CommonModule,\n    OrdersRoutingModule,\n    NgbModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DashboardResourceModule,\n    NgxPrintModule,\n  ],\n  providers: [\n    OrdersResolver,\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\n  ]\n})\nexport class OrdersModule { }\n"],"sourceRoot":"webpack:///"}