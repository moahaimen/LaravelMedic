{"version":3,"sources":["./node_modules/@angular/localize/fesm2015/init.js","./src/polyfills.ts","./node_modules/zone.js/dist/zone-evergreen.js"],"names":["__globalThis","globalThis","__window","window","__self","self","WorkerGlobalScope","__global","global","$localize","messageParts","expressions","translate","translation","message","stripBlock","raw","i","length","messagePart","rawMessagePart","charAt","substring","cooked","cookedIndex","rawIndex","Error","findEndOfBlock","performance","mark","name","performanceMeasure","label","symbolPrefix","__symbol__","checkDuplicate","Zone","parent","zoneSpec","this","_parent","_name","_properties","properties","_zoneDelegate","ZoneDelegate","patches","zone","current","_currentZoneFrame","_currentTask","fn","hasOwnProperty","perfName","_api","key","getZoneWith","fork","callback","source","_callback","intercept","runGuarded","arguments","applyThis","applyArgs","invoke","error","handleError","task","NO_ZONE","state","notScheduled","type","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","runCount","previousTask","data","isPeriodic","cancelFn","undefined","invokeTask","unknown","_updateTaskCount","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","scheduleTask","err","customSchedule","ZoneTask","microTask","customCancel","canceling","cancelTask","count","DELEGATE_ZS","onHasTask","delegate","_","target","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","targetZone","apply","returnTask","push","scheduleFn","scheduleMicroTask","value","isEmpty","counts","prev","next","change","options","_state","useG","call","args","_numberOfNestedTaskFrames","runTask","drainMicroTaskQueue","toState","fromState1","fromState2","handleId","toString","Object","prototype","symbolSetTimeout","symbolPromise","symbolThen","nativeMicroTaskQueuePromise","_microTaskQueue","_isDrainingMicrotaskQueue","resolve","nativeThen","queue","onUnhandledError","microtaskDrainDone","symbol","currentZoneFrame","noop","showUncaughtError","patchEventTarget","patchOnProperties","patchMethod","bindArguments","patchThen","patchMacroTask","setNativePromise","NativePromise","patchEventPrototype","isIEOrEdge","getGlobalObjects","ObjectDefineProperty","ObjectGetOwnPropertyDescriptor","ObjectCreate","ArraySlice","patchClass","wrapWithCurrentZone","filterProperties","attachOriginToPatched","_redefineProperty","patchCallbacks","__load_patch","api","getOwnPropertyDescriptor","defineProperty","_uncaughtPromiseErrors","isDisableWrappingUncaughtPromiseRejection","e","rejection","console","stack","uncaughtPromiseError","shift","handleUnhandledRejection","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handler","isThenable","then","forwardResolution","forwardRejection","ZoneAwarePromise","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","makeResolver","promise","v","resolvePromise","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","wasCalled","wrappedFunction","once","TypeError","clearRejectedNoCatch","trace","currentTask","configurable","enumerable","writable","scheduleResolveOrReject","obj","constructor","JSON","stringify","REJECTION_HANDLED_HANDLER","splice","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","run","values","res","rej","onResolve","onReject","allWithCallback","thenCallback","status","errorCallback","reason","unresolvedCount","valueIndex","resolvedValues","curValueIndex","thenErr","executor","get","Symbol","toStringTag","species","C","onFinally","race","all","ZONE_AWARE_PROMISE","desc","set","NewNativePromise","symbolThenPatched","Ctor","proto","prop","originalThen","fetch","resultPromise","ctor","Promise","ObjectGetPrototypeOf","getPrototypeOf","create","Array","slice","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","ZONE_SYMBOL_PREFIX","wrap","scheduleMacroTaskWithCurrentZone","scheduleMacroTask","zoneSymbol","isWindowExists","internalWindow","_global","NULL_ON_PROP_VALUE","isPropertyWritable","propertyDesc","isWebWorker","isNode","process","isBrowser","isMix","zoneSymbolEventNames","wrapFn","event","eventNameSymbol","listener","result","errorEvent","filename","lineno","colno","preventDefault","patchProperty","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","substr","newValue","removeEventListener","addEventListener","removeAttribute","onProperties","j","originalInstanceKey","className","OriginalClass","a","instance","patchFn","delegateName","patchDelegate","funcName","metaCreator","setNative","cbIdx","meta","patched","original","isDetectedIEOrEdge","ieOrEdge","isIE","ua","navigator","userAgent","indexOf","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","originalDelegate","nativePromise","nativeError","originalObjectToString","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames$1","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","prepareEventNames","eventNameToString","falseEventName","trueEventName","symbolCapture","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","globalZoneAwareCallback","tasks","copyTasks","globalZoneAwareCaptureCallback","patchEventTargetMethods","useGlobalCallback","validateHandler","vh","chkDup","returnTarget","rt","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","buildEventListenerOptions","passive","capture","assign","prepend","isExisting","symbolEventNames","symbolEventName","existingTasks","allRemoved","compare","diff","typeOfDelegate","blackListedEvents","passiveEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","constructorName","targetSource","scheduleEventTask","unshift","existingTask","findEventTasks","captureTasks","removeTasks","keys","match","exec","evtName","results","foundTasks","captureFalseTasks","captureTrueTasks","concat","Event","targetName","method","callbacks","nativeDelegate","opts","forEach","descriptor","windowEventNames","mediaElementEventNames","frameEventNames","frameSetEventNames","marqueeEventNames","XMLHttpRequestEventNames","IDBIndexEventNames","websocketEventNames","workerEventNames","eventNames","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","patchFilteredProperties","propertyDescriptorPatch","supportsWebSocket","WebSocket","ignoreErrorProperties","Document","Element","HTMLElement","HTMLMediaElement","HTMLFrameSetElement","HTMLBodyElement","HTMLFrameElement","HTMLIFrameElement","HTMLMarqueeElement","Worker","XMLHttpRequest","XMLHttpRequestEventTarget","IDBIndex","IDBRequest","IDBOpenDBRequest","IDBDatabase","IDBTransaction","IDBCursor","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","TRUE_STR","FALSE_STR","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","taskSymbol","patchTimer","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","clearTask","delay","handle","ref","unref","bind","id","eventTargetPatch","EVENT_TARGET","legacyPatch","blockingMethods","s","patchEvent","customElements","patchCustomElements","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","XHR_SCHEDULED","XHR_ERROR_BEFORE_SCHEDULED","XHR_LISTENER","newListener","readyState","DONE","aborted","loadTasks","oriInvoke","XHR_TASK","sendNative","placeholderCallback","abortNative","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","url","patchXHR","geolocation","fnNames","patchPrototype","findPromiseRejectionHandler","PromiseRejectionEvent","evt"],"mappings":"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CA,oBACA,QACA,UACA,UACA,WACA,QACA,OACA,YACA,aACA,iBACA,qBACA,YACA,aACA,aACA,YACA,WACA,YACA,UACA,aACA,oBACA,QACA,OACA,UACA,gBACA,cACA,eACA,eACA,oBACA,uBACA,4BACA,mBACA,sBACA,yBACA,cACA,WACA,cACA,YACA,WACA,aACA,QACA,SACA,SACA,SACA,UACA,SACA,kBACA,cACA,OACA,OACA,UACA,SACA,UACA,aACA,eACA,cACA,YACA,aACA,WACA,mBACA,gBACA,UACA,SAoH6ClB,OAbzB,CAAC,uBAAwB,mBAAoB,6BAC9C,CAAC,eAAgB,qBACf,CAAC,UAvGC,CACvB,qBAAsB,sBAAuB,mBAAoB,SAAU,mBAC3E,sBAAuB,yBAA0B,qBAAsB,kBACvE,qBAAsB,wBAAyB,oBAAqB,mBACpE,mBAAoB,UA8GuGS,EA5EjG,CAC1B,aAAc,YAAa,cAAe,OAAQ,MAAO,QAAS,YAAa,UAC/E,iBAAkB,SAAU,gBAAiB,kBAAmB,qBAChE,2BAA4B,uBAAwB,uBAG5B,CACxB,WACA,cACA,cACA,iBACA,mBACA,kBACA,eACA,aACA,gBACA,gBACA,iBACA,kBACA,cACA,eACA,iBACA,cACA,OACA,UACA,YACA,iBACA,YACA,cACA,WACA,UACA,aACA,eACA,UACA,0BACA,aACA,OACA,gBACA,6BACA,kBACA,qBACA,eACA,gBACA,iBACA,eACA,sBACA,iBACA,uBACA,kBACA,gBACA,iBACA,iBACA,iBACA,gBACA,eACA,gBACA,cACA,aACA,gCACA,mBACA,OACA,kBAgBJ,SAASzQ,GAAiBlG,EAAQ+O,EAAcsI,GAC5C,IAAKA,GAAgD,IAA5BA,EAAiB9c,OACtC,OAAOwU,EAEX,MAAMuI,EAAMD,EAAiBE,OAAOC,GAAMA,EAAGxX,SAAWA,GACxD,IAAKsX,GAAsB,IAAfA,EAAI/c,OACZ,OAAOwU,EAEX,MAAM0I,EAAyBH,EAAI,GAAGD,iBACtC,OAAOtI,EAAawI,OAAOG,IAA8C,IAAxCD,EAAuBnH,QAAQoH,IAEpE,SAASC,GAAwB3X,EAAQ+O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","file":"polyfills.d30e9bd397dabb8cd269.js","sourcesContent":["/**\n * @license Angular v10.0.2\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst __globalThis = typeof globalThis !== 'undefined' && globalThis;\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\n// Always use __globalThis if available; this is the spec-defined global variable across all\n// environments.\n// Then fallback to __global first; in Node tests both __global and __window may be defined.\nconst _global = __globalThis || __global || __window || __self;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Tag a template literal string for localization.\n *\n * For example:\n *\n * ```ts\n * $localize `some string to localize`\n * ```\n *\n * **Providing meaning, description and id**\n *\n * You can optionally specify one or more of `meaning`, `description` and `id` for a localized\n * string by pre-pending it with a colon delimited block of the form:\n *\n * ```ts\n * $localize`:meaning|description@@id:source message text`;\n *\n * $localize`:meaning|:source message text`;\n * $localize`:description:source message text`;\n * $localize`:@@id:source message text`;\n * ```\n *\n * This format is the same as that used for `i18n` markers in Angular templates. See the\n * [Angular 18n guide](guide/i18n#template-translations).\n *\n * **Naming placeholders**\n *\n * If the template literal string contains expressions, then the expressions will be automatically\n * associated with placeholder names for you.\n *\n * For example:\n *\n * ```ts\n * $localize `Hi ${name}! There are ${items.length} items.`;\n * ```\n *\n * will generate a message-source of `Hi {$PH}! There are {$PH_1} items`.\n *\n * The recommended practice is to name the placeholder associated with each expression though.\n *\n * Do this by providing the placeholder name wrapped in `:` characters directly after the\n * expression. These placeholder names are stripped out of the rendered localized string.\n *\n * For example, to name the `items.length` expression placeholder `itemCount` you write:\n *\n * ```ts\n * $localize `There are ${items.length}:itemCount: items`;\n * ```\n *\n * **Escaping colon markers**\n *\n * If you need to use a `:` character directly at the start of a tagged string that has no\n * metadata block, or directly after a substitution expression that has no name you must escape\n * the `:` by preceding it with a backslash:\n *\n * For example:\n *\n * ```ts\n * // message has a metadata block so no need to escape colon\n * $localize `:some description::this message starts with a colon (:)`;\n * // no metadata block so the colon must be escaped\n * $localize `\\:this message starts with a colon (:)`;\n * ```\n *\n * ```ts\n * // named substitution so no need to escape colon\n * $localize `${label}:label:: ${}`\n * // anonymous substitution so colon must be escaped\n * $localize `${label}\\: ${}`\n * ```\n *\n * **Processing localized strings:**\n *\n * There are three scenarios:\n *\n * * **compile-time inlining**: the `$localize` tag is transformed at compile time by a\n * transpiler, removing the tag and replacing the template literal string with a translated\n * literal string from a collection of translations provided to the transpilation tool.\n *\n * * **run-time evaluation**: the `$localize` tag is a run-time function that replaces and\n * reorders the parts (static strings and expressions) of the template literal string with strings\n * from a collection of translations loaded at run-time.\n *\n * * **pass-through evaluation**: the `$localize` tag is a run-time function that simply evaluates\n * the original template literal string without applying any translations to the parts. This\n * version is used during development or where there is no need to translate the localized\n * template literals.\n * @param messageParts a collection of the static parts of the template string.\n * @param expressions a collection of the values of each placeholder in the template string.\n * @returns the translated string, with the `messageParts` and `expressions` interleaved together.\n */\nconst $localize = function (messageParts, ...expressions) {\n    if ($localize.translate) {\n        // Don't use array expansion here to avoid the compiler adding `__read()` helper unnecessarily.\n        const translation = $localize.translate(messageParts, expressions);\n        messageParts = translation[0];\n        expressions = translation[1];\n    }\n    let message = stripBlock(messageParts[0], messageParts.raw[0]);\n    for (let i = 1; i < messageParts.length; i++) {\n        message += expressions[i - 1] + stripBlock(messageParts[i], messageParts.raw[i]);\n    }\n    return message;\n};\nconst BLOCK_MARKER = ':';\n/**\n * Strip a delimited \"block\" from the start of the `messagePart`, if it is found.\n *\n * If a marker character (:) actually appears in the content at the start of a tagged string or\n * after a substitution expression, where a block has not been provided the character must be\n * escaped with a backslash, `\\:`. This function checks for this by looking at the `raw`\n * messagePart, which should still contain the backslash.\n *\n * @param messagePart The cooked message part to process.\n * @param rawMessagePart The raw message part to check.\n * @returns the message part with the placeholder name stripped, if found.\n * @throws an error if the block is unterminated\n */\nfunction stripBlock(messagePart, rawMessagePart) {\n    return rawMessagePart.charAt(0) === BLOCK_MARKER ?\n        messagePart.substring(findEndOfBlock(messagePart, rawMessagePart) + 1) :\n        messagePart;\n}\n/**\n * Find the end of a \"marked block\" indicated by the first non-escaped colon.\n *\n * @param cooked The cooked string (where escaped chars have been processed)\n * @param raw The raw string (where escape sequences are still in place)\n *\n * @returns the index of the end of block marker\n * @throws an error if the block is unterminated\n */\nfunction findEndOfBlock(cooked, raw) {\n    /***********************************************************************************************\n     * This function is repeated in `src/utils/messages.ts` and the two should be kept in sync.\n     * The reason is that this file is marked as having side-effects, and if we import `messages.ts`\n     * into it, the whole of `src/utils` will be included in this bundle and none of the functions\n     * will be tree shaken.\n     ***********************************************************************************************/\n    for (let cookedIndex = 1, rawIndex = 1; cookedIndex < cooked.length; cookedIndex++, rawIndex++) {\n        if (raw[rawIndex] === '\\\\') {\n            rawIndex++;\n        }\n        else if (cooked[cookedIndex] === BLOCK_MARKER) {\n            return cookedIndex;\n        }\n    }\n    throw new Error(`Unterminated $localize metadata block in \"${raw}\".`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Attach $localize to the global context, as a side-effect of this module.\n_global.$localize = $localize;\n//# sourceMappingURL=init.js.map\n","/***************************************************************************************************\n * Load `$localize` onto the global scope - used if i18n tags appear in Angular templates.\n */\nimport '@angular/localize/init';\n/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n","/**\n* @license Angular v9.1.0-next.4+61.sha-e552591.with-local-changes\n* (c) 2010-2020 Google LLC. https://angular.io/\n* License: MIT\n*/\n(function (factory) {\n    typeof define === 'function' && define.amd ? define(factory) :\n    factory();\n}((function () { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const Zone$1 = (function (global) {\n        const performance = global['performance'];\n        function mark(name) { performance && performance['mark'] && performance['mark'](name); }\n        function performanceMeasure(name, label) {\n            performance && performance['measure'] && performance['measure'](name, label);\n        }\n        mark('Zone');\n        // Initialize before it's accessed below.\n        // __Zone_symbol_prefix global can be used to override the default zone\n        // symbol prefix with a custom one if needed.\n        const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n        function __symbol__(name) { return symbolPrefix + name; }\n        const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n        if (global['Zone']) {\n            // if global['Zone'] already exists (maybe zone.js was already loaded or\n            // some other lib also registered a global object named Zone), we may need\n            // to throw an error, but sometimes user may not want this error.\n            // For example,\n            // we have two web pages, page1 includes zone.js, page2 doesn't.\n            // and the 1st time user load page1 and page2, everything work fine,\n            // but when user load page2 again, error occurs because global['Zone'] already exists.\n            // so we add a flag to let user choose whether to throw this error or not.\n            // By default, if existing Zone is from zone.js, we will not throw the error.\n            if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n                throw new Error('Zone already loaded.');\n            }\n            else {\n                return global['Zone'];\n            }\n        }\n        class Zone {\n            constructor(parent, zoneSpec) {\n                this._parent = parent;\n                this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n                this._properties = zoneSpec && zoneSpec.properties || {};\n                this._zoneDelegate =\n                    new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n            }\n            static assertZonePatched() {\n                if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                    throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                        'has been overwritten.\\n' +\n                        'Most likely cause is that a Promise polyfill has been loaded ' +\n                        'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                        'If you must load one, do so before loading zone.js.)');\n                }\n            }\n            static get root() {\n                let zone = Zone.current;\n                while (zone.parent) {\n                    zone = zone.parent;\n                }\n                return zone;\n            }\n            static get current() { return _currentZoneFrame.zone; }\n            static get currentTask() { return _currentTask; }\n            // tslint:disable-next-line:require-internal-with-underscore\n            static __load_patch(name, fn) {\n                if (patches.hasOwnProperty(name)) {\n                    if (checkDuplicate) {\n                        throw Error('Already loaded patch: ' + name);\n                    }\n                }\n                else if (!global['__Zone_disable_' + name]) {\n                    const perfName = 'Zone:' + name;\n                    mark(perfName);\n                    patches[name] = fn(global, Zone, _api);\n                    performanceMeasure(perfName, perfName);\n                }\n            }\n            get parent() { return this._parent; }\n            get name() { return this._name; }\n            get(key) {\n                const zone = this.getZoneWith(key);\n                if (zone)\n                    return zone._properties[key];\n            }\n            getZoneWith(key) {\n                let current = this;\n                while (current) {\n                    if (current._properties.hasOwnProperty(key)) {\n                        return current;\n                    }\n                    current = current._parent;\n                }\n                return null;\n            }\n            fork(zoneSpec) {\n                if (!zoneSpec)\n                    throw new Error('ZoneSpec required!');\n                return this._zoneDelegate.fork(this, zoneSpec);\n            }\n            wrap(callback, source) {\n                if (typeof callback !== 'function') {\n                    throw new Error('Expecting function got: ' + callback);\n                }\n                const _callback = this._zoneDelegate.intercept(this, callback, source);\n                const zone = this;\n                return function () {\n                    return zone.runGuarded(_callback, this, arguments, source);\n                };\n            }\n            run(callback, applyThis, applyArgs, source) {\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                }\n            }\n            runGuarded(callback, applyThis = null, applyArgs, source) {\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    try {\n                        return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                    }\n                    catch (error) {\n                        if (this._zoneDelegate.handleError(this, error)) {\n                            throw error;\n                        }\n                    }\n                }\n                finally {\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                }\n            }\n            runTask(task, applyThis, applyArgs) {\n                if (task.zone != this) {\n                    throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                        (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n                }\n                // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n                // will run in notScheduled(canceled) state, we should not try to\n                // run such kind of task but just return\n                if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                    return;\n                }\n                const reEntryGuard = task.state != running;\n                reEntryGuard && task._transitionTo(running, scheduled);\n                task.runCount++;\n                const previousTask = _currentTask;\n                _currentTask = task;\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                        task.cancelFn = undefined;\n                    }\n                    try {\n                        return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                    }\n                    catch (error) {\n                        if (this._zoneDelegate.handleError(this, error)) {\n                            throw error;\n                        }\n                    }\n                }\n                finally {\n                    // if the task's state is notScheduled or unknown, then it has already been cancelled\n                    // we should not reset the state to scheduled\n                    if (task.state !== notScheduled && task.state !== unknown) {\n                        if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                            reEntryGuard && task._transitionTo(scheduled, running);\n                        }\n                        else {\n                            task.runCount = 0;\n                            this._updateTaskCount(task, -1);\n                            reEntryGuard &&\n                                task._transitionTo(notScheduled, running, notScheduled);\n                        }\n                    }\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                    _currentTask = previousTask;\n                }\n            }\n            scheduleTask(task) {\n                if (task.zone && task.zone !== this) {\n                    // check if the task was rescheduled, the newZone\n                    // should not be the children of the original zone\n                    let newZone = this;\n                    while (newZone) {\n                        if (newZone === task.zone) {\n                            throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                        }\n                        newZone = newZone.parent;\n                    }\n                }\n                task._transitionTo(scheduling, notScheduled);\n                const zoneDelegates = [];\n                task._zoneDelegates = zoneDelegates;\n                task._zone = this;\n                try {\n                    task = this._zoneDelegate.scheduleTask(this, task);\n                }\n                catch (err) {\n                    // should set task's state to unknown when scheduleTask throw error\n                    // because the err may from reschedule, so the fromState maybe notScheduled\n                    task._transitionTo(unknown, scheduling, notScheduled);\n                    // TODO: @JiaLiPassion, should we check the result from handleError?\n                    this._zoneDelegate.handleError(this, err);\n                    throw err;\n                }\n                if (task._zoneDelegates === zoneDelegates) {\n                    // we have to check because internally the delegate can reschedule the task.\n                    this._updateTaskCount(task, 1);\n                }\n                if (task.state == scheduling) {\n                    task._transitionTo(scheduled, scheduling);\n                }\n                return task;\n            }\n            scheduleMicroTask(source, callback, data, customSchedule) {\n                return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n            }\n            scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n                return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n            }\n            scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n                return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n            }\n            cancelTask(task) {\n                if (task.zone != this)\n                    throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                        (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n                task._transitionTo(canceling, scheduled, running);\n                try {\n                    this._zoneDelegate.cancelTask(this, task);\n                }\n                catch (err) {\n                    // if error occurs when cancelTask, transit the state to unknown\n                    task._transitionTo(unknown, canceling);\n                    this._zoneDelegate.handleError(this, err);\n                    throw err;\n                }\n                this._updateTaskCount(task, -1);\n                task._transitionTo(notScheduled, canceling);\n                task.runCount = 0;\n                return task;\n            }\n            _updateTaskCount(task, count) {\n                const zoneDelegates = task._zoneDelegates;\n                if (count == -1) {\n                    task._zoneDelegates = null;\n                }\n                for (let i = 0; i < zoneDelegates.length; i++) {\n                    zoneDelegates[i]._updateTaskCount(task.type, count);\n                }\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        Zone.__symbol__ = __symbol__;\n        const DELEGATE_ZS = {\n            name: '',\n            onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n            onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n            onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n            onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n        };\n        class ZoneDelegate {\n            constructor(zone, parentDelegate, zoneSpec) {\n                this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n                this.zone = zone;\n                this._parentDelegate = parentDelegate;\n                this._forkZS =\n                    zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n                this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n                this._forkCurrZone =\n                    zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n                this._interceptZS =\n                    zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n                this._interceptDlgt =\n                    zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n                this._interceptCurrZone =\n                    zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n                this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n                this._invokeDlgt =\n                    zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n                this._invokeCurrZone =\n                    zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n                this._handleErrorZS =\n                    zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n                this._handleErrorDlgt = zoneSpec &&\n                    (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n                this._handleErrorCurrZone =\n                    zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n                this._scheduleTaskZS =\n                    zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n                this._scheduleTaskDlgt = zoneSpec &&\n                    (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n                this._scheduleTaskCurrZone = zoneSpec &&\n                    (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n                this._invokeTaskZS =\n                    zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n                this._invokeTaskDlgt =\n                    zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n                this._invokeTaskCurrZone =\n                    zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n                this._cancelTaskZS =\n                    zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n                this._cancelTaskDlgt =\n                    zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n                this._cancelTaskCurrZone =\n                    zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n                this._hasTaskZS = null;\n                this._hasTaskDlgt = null;\n                this._hasTaskDlgtOwner = null;\n                this._hasTaskCurrZone = null;\n                const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n                const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n                if (zoneSpecHasTask || parentHasTask) {\n                    // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                    // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                    this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                    this._hasTaskDlgt = parentDelegate;\n                    this._hasTaskDlgtOwner = this;\n                    this._hasTaskCurrZone = zone;\n                    if (!zoneSpec.onScheduleTask) {\n                        this._scheduleTaskZS = DELEGATE_ZS;\n                        this._scheduleTaskDlgt = parentDelegate;\n                        this._scheduleTaskCurrZone = this.zone;\n                    }\n                    if (!zoneSpec.onInvokeTask) {\n                        this._invokeTaskZS = DELEGATE_ZS;\n                        this._invokeTaskDlgt = parentDelegate;\n                        this._invokeTaskCurrZone = this.zone;\n                    }\n                    if (!zoneSpec.onCancelTask) {\n                        this._cancelTaskZS = DELEGATE_ZS;\n                        this._cancelTaskDlgt = parentDelegate;\n                        this._cancelTaskCurrZone = this.zone;\n                    }\n                }\n            }\n            fork(targetZone, zoneSpec) {\n                return this._forkZS ?\n                    this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                    new Zone(targetZone, zoneSpec);\n            }\n            intercept(targetZone, callback, source) {\n                return this._interceptZS ?\n                    this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                    callback;\n            }\n            invoke(targetZone, callback, applyThis, applyArgs, source) {\n                return this._invokeZS ?\n                    this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                    callback.apply(applyThis, applyArgs);\n            }\n            handleError(targetZone, error) {\n                return this._handleErrorZS ?\n                    this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                    true;\n            }\n            scheduleTask(targetZone, task) {\n                let returnTask = task;\n                if (this._scheduleTaskZS) {\n                    if (this._hasTaskZS) {\n                        returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                    }\n                    // clang-format off\n                    returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                    // clang-format on\n                    if (!returnTask)\n                        returnTask = task;\n                }\n                else {\n                    if (task.scheduleFn) {\n                        task.scheduleFn(task);\n                    }\n                    else if (task.type == microTask) {\n                        scheduleMicroTask(task);\n                    }\n                    else {\n                        throw new Error('Task is missing scheduleFn.');\n                    }\n                }\n                return returnTask;\n            }\n            invokeTask(targetZone, task, applyThis, applyArgs) {\n                return this._invokeTaskZS ?\n                    this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                    task.callback.apply(applyThis, applyArgs);\n            }\n            cancelTask(targetZone, task) {\n                let value;\n                if (this._cancelTaskZS) {\n                    value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n                }\n                else {\n                    if (!task.cancelFn) {\n                        throw Error('Task is not cancelable');\n                    }\n                    value = task.cancelFn(task);\n                }\n                return value;\n            }\n            hasTask(targetZone, isEmpty) {\n                // hasTask should not throw error so other ZoneDelegate\n                // can still trigger hasTask callback\n                try {\n                    this._hasTaskZS &&\n                        this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n                }\n                catch (err) {\n                    this.handleError(targetZone, err);\n                }\n            }\n            // tslint:disable-next-line:require-internal-with-underscore\n            _updateTaskCount(type, count) {\n                const counts = this._taskCounts;\n                const prev = counts[type];\n                const next = counts[type] = prev + count;\n                if (next < 0) {\n                    throw new Error('More tasks executed then were scheduled.');\n                }\n                if (prev == 0 || next == 0) {\n                    const isEmpty = {\n                        microTask: counts['microTask'] > 0,\n                        macroTask: counts['macroTask'] > 0,\n                        eventTask: counts['eventTask'] > 0,\n                        change: type\n                    };\n                    this.hasTask(this.zone, isEmpty);\n                }\n            }\n        }\n        class ZoneTask {\n            constructor(type, source, callback, options, scheduleFn, cancelFn) {\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._zone = null;\n                this.runCount = 0;\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._zoneDelegates = null;\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._state = 'notScheduled';\n                this.type = type;\n                this.source = source;\n                this.data = options;\n                this.scheduleFn = scheduleFn;\n                this.cancelFn = cancelFn;\n                if (!callback) {\n                    throw new Error('callback is not defined');\n                }\n                this.callback = callback;\n                const self = this;\n                // TODO: @JiaLiPassion options should have interface\n                if (type === eventTask && options && options.useG) {\n                    this.invoke = ZoneTask.invokeTask;\n                }\n                else {\n                    this.invoke = function () {\n                        return ZoneTask.invokeTask.call(global, self, this, arguments);\n                    };\n                }\n            }\n            static invokeTask(task, target, args) {\n                if (!task) {\n                    task = this;\n                }\n                _numberOfNestedTaskFrames++;\n                try {\n                    task.runCount++;\n                    return task.zone.runTask(task, target, args);\n                }\n                finally {\n                    if (_numberOfNestedTaskFrames == 1) {\n                        drainMicroTaskQueue();\n                    }\n                    _numberOfNestedTaskFrames--;\n                }\n            }\n            get zone() { return this._zone; }\n            get state() { return this._state; }\n            cancelScheduleRequest() { this._transitionTo(notScheduled, scheduling); }\n            // tslint:disable-next-line:require-internal-with-underscore\n            _transitionTo(toState, fromState1, fromState2) {\n                if (this._state === fromState1 || this._state === fromState2) {\n                    this._state = toState;\n                    if (toState == notScheduled) {\n                        this._zoneDelegates = null;\n                    }\n                }\n                else {\n                    throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n                }\n            }\n            toString() {\n                if (this.data && typeof this.data.handleId !== 'undefined') {\n                    return this.data.handleId.toString();\n                }\n                else {\n                    return Object.prototype.toString.call(this);\n                }\n            }\n            // add toJSON method to prevent cyclic error when\n            // call JSON.stringify(zoneTask)\n            toJSON() {\n                return {\n                    type: this.type,\n                    state: this.state,\n                    source: this.source,\n                    zone: this.zone.name,\n                    runCount: this.runCount\n                };\n            }\n        }\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        ///  MICROTASK QUEUE\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        const symbolSetTimeout = __symbol__('setTimeout');\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        let _microTaskQueue = [];\n        let _isDrainingMicrotaskQueue = false;\n        let nativeMicroTaskQueuePromise;\n        function scheduleMicroTask(task) {\n            // if we are not running in any task, and there has not been anything scheduled\n            // we must bootstrap the initial task creation by manually scheduling the drain\n            if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n                // We are not running in Task, so we need to kickstart the microtask queue.\n                if (!nativeMicroTaskQueuePromise) {\n                    if (global[symbolPromise]) {\n                        nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n                    }\n                }\n                if (nativeMicroTaskQueuePromise) {\n                    let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n                    if (!nativeThen) {\n                        // native Promise is not patchable, we need to use `then` directly\n                        // issue 1078\n                        nativeThen = nativeMicroTaskQueuePromise['then'];\n                    }\n                    nativeThen.call(nativeMicroTaskQueuePromise, drainMicroTaskQueue);\n                }\n                else {\n                    global[symbolSetTimeout](drainMicroTaskQueue, 0);\n                }\n            }\n            task && _microTaskQueue.push(task);\n        }\n        function drainMicroTaskQueue() {\n            if (!_isDrainingMicrotaskQueue) {\n                _isDrainingMicrotaskQueue = true;\n                while (_microTaskQueue.length) {\n                    const queue = _microTaskQueue;\n                    _microTaskQueue = [];\n                    for (let i = 0; i < queue.length; i++) {\n                        const task = queue[i];\n                        try {\n                            task.zone.runTask(task, null, null);\n                        }\n                        catch (error) {\n                            _api.onUnhandledError(error);\n                        }\n                    }\n                }\n                _api.microtaskDrainDone();\n                _isDrainingMicrotaskQueue = false;\n            }\n        }\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        ///  BOOTSTRAP\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        const NO_ZONE = { name: 'NO ZONE' };\n        const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n        const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n        const patches = {};\n        const _api = {\n            symbol: __symbol__,\n            currentZoneFrame: () => _currentZoneFrame,\n            onUnhandledError: noop,\n            microtaskDrainDone: noop,\n            scheduleMicroTask: scheduleMicroTask,\n            showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n            patchEventTarget: () => [],\n            patchOnProperties: noop,\n            patchMethod: () => noop,\n            bindArguments: () => [],\n            patchThen: () => noop,\n            patchMacroTask: () => noop,\n            setNativePromise: (NativePromise) => {\n                // sometimes NativePromise.resolve static function\n                // is not ready yet, (such as core-js/es6.promise)\n                // so we need to check here.\n                if (NativePromise && typeof NativePromise.resolve === 'function') {\n                    nativeMicroTaskQueuePromise = NativePromise.resolve(0);\n                }\n            },\n            patchEventPrototype: () => noop,\n            isIEOrEdge: () => false,\n            getGlobalObjects: () => undefined,\n            ObjectDefineProperty: () => noop,\n            ObjectGetOwnPropertyDescriptor: () => undefined,\n            ObjectCreate: () => undefined,\n            ArraySlice: () => [],\n            patchClass: () => noop,\n            wrapWithCurrentZone: () => noop,\n            filterProperties: () => [],\n            attachOriginToPatched: () => noop,\n            _redefineProperty: () => noop,\n            patchCallbacks: () => noop\n        };\n        let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n        let _currentTask = null;\n        let _numberOfNestedTaskFrames = 0;\n        function noop() { }\n        performanceMeasure('Zone', 'Zone');\n        return global['Zone'] = Zone;\n    })(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n        const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n        const ObjectDefineProperty = Object.defineProperty;\n        function readableObjectToString(obj) {\n            if (obj && obj.toString === Object.prototype.toString) {\n                const className = obj.constructor && obj.constructor.name;\n                return (className ? className : '') + ': ' + JSON.stringify(obj);\n            }\n            return obj ? obj.toString() : Object.prototype.toString.call(obj);\n        }\n        const __symbol__ = api.symbol;\n        const _uncaughtPromiseErrors = [];\n        const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] === true;\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        const creationTrace = '__creationTrace__';\n        api.onUnhandledError = (e) => {\n            if (api.showUncaughtError()) {\n                const rejection = e && e.rejection;\n                if (rejection) {\n                    console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n                }\n                else {\n                    console.error(e);\n                }\n            }\n        };\n        api.microtaskDrainDone = () => {\n            while (_uncaughtPromiseErrors.length) {\n                const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                try {\n                    uncaughtPromiseError.zone.runGuarded(() => { throw uncaughtPromiseError; });\n                }\n                catch (error) {\n                    handleUnhandledRejection(error);\n                }\n            }\n        };\n        const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n        function handleUnhandledRejection(e) {\n            api.onUnhandledError(e);\n            try {\n                const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n                if (typeof handler === 'function') {\n                    handler.call(this, e);\n                }\n            }\n            catch (err) {\n            }\n        }\n        function isThenable(value) { return value && value.then; }\n        function forwardResolution(value) { return value; }\n        function forwardRejection(rejection) { return ZoneAwarePromise.reject(rejection); }\n        const symbolState = __symbol__('state');\n        const symbolValue = __symbol__('value');\n        const symbolFinally = __symbol__('finally');\n        const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n        const symbolParentPromiseState = __symbol__('parentPromiseState');\n        const source = 'Promise.then';\n        const UNRESOLVED = null;\n        const RESOLVED = true;\n        const REJECTED = false;\n        const REJECTED_NO_CATCH = 0;\n        function makeResolver(promise, state) {\n            return (v) => {\n                try {\n                    resolvePromise(promise, state, v);\n                }\n                catch (err) {\n                    resolvePromise(promise, false, err);\n                }\n                // Do not return value or you will break the Promise spec.\n            };\n        }\n        const once = function () {\n            let wasCalled = false;\n            return function wrapper(wrappedFunction) {\n                return function () {\n                    if (wasCalled) {\n                        return;\n                    }\n                    wasCalled = true;\n                    wrappedFunction.apply(null, arguments);\n                };\n            };\n        };\n        const TYPE_ERROR = 'Promise resolved with itself';\n        const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n        // Promise Resolution\n        function resolvePromise(promise, state, value) {\n            const onceWrapper = once();\n            if (promise === value) {\n                throw new TypeError(TYPE_ERROR);\n            }\n            if (promise[symbolState] === UNRESOLVED) {\n                // should only get value.then once based on promise spec.\n                let then = null;\n                try {\n                    if (typeof value === 'object' || typeof value === 'function') {\n                        then = value && value.then;\n                    }\n                }\n                catch (err) {\n                    onceWrapper(() => { resolvePromise(promise, false, err); })();\n                    return promise;\n                }\n                // if (value instanceof ZoneAwarePromise) {\n                if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                    value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                    value[symbolState] !== UNRESOLVED) {\n                    clearRejectedNoCatch(value);\n                    resolvePromise(promise, value[symbolState], value[symbolValue]);\n                }\n                else if (state !== REJECTED && typeof then === 'function') {\n                    try {\n                        then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                    }\n                    catch (err) {\n                        onceWrapper(() => { resolvePromise(promise, false, err); })();\n                    }\n                }\n                else {\n                    promise[symbolState] = state;\n                    const queue = promise[symbolValue];\n                    promise[symbolValue] = value;\n                    if (promise[symbolFinally] === symbolFinally) {\n                        // the promise is generated by Promise.prototype.finally\n                        if (state === RESOLVED) {\n                            // the state is resolved, should ignore the value\n                            // and use parent promise value\n                            promise[symbolState] = promise[symbolParentPromiseState];\n                            promise[symbolValue] = promise[symbolParentPromiseValue];\n                        }\n                    }\n                    // record task information in value when error occurs, so we can\n                    // do some additional work such as render longStackTrace\n                    if (state === REJECTED && value instanceof Error) {\n                        // check if longStackTraceZone is here\n                        const trace = Zone.currentTask && Zone.currentTask.data &&\n                            Zone.currentTask.data[creationTrace];\n                        if (trace) {\n                            // only keep the long stack trace into error when in longStackTraceZone\n                            ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                        }\n                    }\n                    for (let i = 0; i < queue.length;) {\n                        scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                    }\n                    if (queue.length == 0 && state == REJECTED) {\n                        promise[symbolState] = REJECTED_NO_CATCH;\n                        let uncaughtPromiseError = value;\n                        if (!isDisableWrappingUncaughtPromiseRejection) {\n                            // If disable wrapping uncaught promise reject\n                            // and the rejected value is an Error object,\n                            // use the value instead of wrapping it.\n                            try {\n                                // Here we throws a new Error to print more readable error log\n                                // and if the value is not an error, zone.js builds an `Error`\n                                // Object here to attach the stack information.\n                                throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                                    (value && value.stack ? '\\n' + value.stack : ''));\n                            }\n                            catch (err) {\n                                uncaughtPromiseError = err;\n                            }\n                        }\n                        uncaughtPromiseError.rejection = value;\n                        uncaughtPromiseError.promise = promise;\n                        uncaughtPromiseError.zone = Zone.current;\n                        uncaughtPromiseError.task = Zone.currentTask;\n                        _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                        api.scheduleMicroTask(); // to make sure that it is running\n                    }\n                }\n            }\n            // Resolving an already resolved promise is a noop.\n            return promise;\n        }\n        const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n        function clearRejectedNoCatch(promise) {\n            if (promise[symbolState] === REJECTED_NO_CATCH) {\n                // if the promise is rejected no catch status\n                // and queue.length > 0, means there is a error handler\n                // here to handle the rejected promise, we should trigger\n                // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n                // eventHandler\n                try {\n                    const handler = Zone[REJECTION_HANDLED_HANDLER];\n                    if (handler && typeof handler === 'function') {\n                        handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                    }\n                }\n                catch (err) {\n                }\n                promise[symbolState] = REJECTED;\n                for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                    if (promise === _uncaughtPromiseErrors[i].promise) {\n                        _uncaughtPromiseErrors.splice(i, 1);\n                    }\n                }\n            }\n        }\n        function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n            clearRejectedNoCatch(promise);\n            const promiseState = promise[symbolState];\n            const delegate = promiseState ?\n                (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n                (typeof onRejected === 'function') ? onRejected : forwardRejection;\n            zone.scheduleMicroTask(source, () => {\n                try {\n                    const parentPromiseValue = promise[symbolValue];\n                    const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                    if (isFinallyPromise) {\n                        // if the promise is generated from finally call, keep parent promise's state and value\n                        chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                        chainPromise[symbolParentPromiseState] = promiseState;\n                    }\n                    // should not pass value to finally callback\n                    const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                        [] :\n                        [parentPromiseValue]);\n                    resolvePromise(chainPromise, true, value);\n                }\n                catch (error) {\n                    // if error occurs, should always return this error\n                    resolvePromise(chainPromise, false, error);\n                }\n            }, chainPromise);\n        }\n        const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n        const noop = function () { };\n        class ZoneAwarePromise {\n            static toString() { return ZONE_AWARE_PROMISE_TO_STRING; }\n            static resolve(value) {\n                return resolvePromise(new this(null), RESOLVED, value);\n            }\n            static reject(error) {\n                return resolvePromise(new this(null), REJECTED, error);\n            }\n            static race(values) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                function onResolve(value) { resolve(value); }\n                function onReject(error) { reject(error); }\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    value.then(onResolve, onReject);\n                }\n                return promise;\n            }\n            static all(values) { return ZoneAwarePromise.allWithCallback(values); }\n            static allSettled(values) {\n                const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n                return P.allWithCallback(values, {\n                    thenCallback: (value) => ({ status: 'fulfilled', value }),\n                    errorCallback: (err) => ({ status: 'rejected', reason: err })\n                });\n            }\n            static allWithCallback(values, callback) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                // Start at 2 to prevent prematurely resolving if .then is called immediately.\n                let unresolvedCount = 2;\n                let valueIndex = 0;\n                const resolvedValues = [];\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    const curValueIndex = valueIndex;\n                    try {\n                        value.then((value) => {\n                            resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }, (err) => {\n                            if (!callback) {\n                                reject(err);\n                            }\n                            else {\n                                resolvedValues[curValueIndex] = callback.errorCallback(err);\n                                unresolvedCount--;\n                                if (unresolvedCount === 0) {\n                                    resolve(resolvedValues);\n                                }\n                            }\n                        });\n                    }\n                    catch (thenErr) {\n                        reject(thenErr);\n                    }\n                    unresolvedCount++;\n                    valueIndex++;\n                }\n                // Make the unresolvedCount zero-based again.\n                unresolvedCount -= 2;\n                if (unresolvedCount === 0) {\n                    resolve(resolvedValues);\n                }\n                return promise;\n            }\n            constructor(executor) {\n                const promise = this;\n                if (!(promise instanceof ZoneAwarePromise)) {\n                    throw new Error('Must be an instanceof Promise.');\n                }\n                promise[symbolState] = UNRESOLVED;\n                promise[symbolValue] = []; // queue;\n                try {\n                    executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n                }\n                catch (error) {\n                    resolvePromise(promise, false, error);\n                }\n            }\n            get [Symbol.toStringTag]() { return 'Promise'; }\n            get [Symbol.species]() { return ZoneAwarePromise; }\n            then(onFulfilled, onRejected) {\n                let C = this.constructor[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = this.constructor || ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n                }\n                return chainPromise;\n            }\n            catch(onRejected) {\n                return this.then(null, onRejected);\n            }\n            finally(onFinally) {\n                let C = this.constructor[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                chainPromise[symbolFinally] = symbolFinally;\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n                }\n                return chainPromise;\n            }\n        }\n        // Protect against aggressive optimizers dropping seemingly unused properties.\n        // E.g. Closure Compiler in advanced mode.\n        ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n        ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n        ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n        ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n        const NativePromise = global[symbolPromise] = global['Promise'];\n        const ZONE_AWARE_PROMISE = Zone.__symbol__('ZoneAwarePromise');\n        let desc = ObjectGetOwnPropertyDescriptor(global, 'Promise');\n        if (!desc || desc.configurable) {\n            desc && delete desc.writable;\n            desc && delete desc.value;\n            if (!desc) {\n                desc = { configurable: true, enumerable: true };\n            }\n            desc.get = function () {\n                // if we already set ZoneAwarePromise, use patched one\n                // otherwise return native one.\n                return global[ZONE_AWARE_PROMISE] ? global[ZONE_AWARE_PROMISE] : global[symbolPromise];\n            };\n            desc.set = function (NewNativePromise) {\n                if (NewNativePromise === ZoneAwarePromise) {\n                    // if the NewNativePromise is ZoneAwarePromise\n                    // save to global\n                    global[ZONE_AWARE_PROMISE] = NewNativePromise;\n                }\n                else {\n                    // if the NewNativePromise is not ZoneAwarePromise\n                    // for example: after load zone.js, some library just\n                    // set es6-promise to global, if we set it to global\n                    // directly, assertZonePatched will fail and angular\n                    // will not loaded, so we just set the NewNativePromise\n                    // to global[symbolPromise], so the result is just like\n                    // we load ES6 Promise before zone.js\n                    global[symbolPromise] = NewNativePromise;\n                    if (!NewNativePromise.prototype[symbolThen]) {\n                        patchThen(NewNativePromise);\n                    }\n                    api.setNativePromise(NewNativePromise);\n                }\n            };\n            ObjectDefineProperty(global, 'Promise', desc);\n        }\n        global['Promise'] = ZoneAwarePromise;\n        const symbolThenPatched = __symbol__('thenPatched');\n        function patchThen(Ctor) {\n            const proto = Ctor.prototype;\n            const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n            if (prop && (prop.writable === false || !prop.configurable)) {\n                // check Ctor.prototype.then propertyDescriptor is writable or not\n                // in meteor env, writable is false, we should ignore such case\n                return;\n            }\n            const originalThen = proto.then;\n            // Keep a reference to the original method.\n            proto[symbolThen] = originalThen;\n            Ctor.prototype.then = function (onResolve, onReject) {\n                const wrapped = new ZoneAwarePromise((resolve, reject) => { originalThen.call(this, resolve, reject); });\n                return wrapped.then(onResolve, onReject);\n            };\n            Ctor[symbolThenPatched] = true;\n        }\n        api.patchThen = patchThen;\n        function zoneify(fn) {\n            return function () {\n                let resultPromise = fn.apply(this, arguments);\n                if (resultPromise instanceof ZoneAwarePromise) {\n                    return resultPromise;\n                }\n                let ctor = resultPromise.constructor;\n                if (!ctor[symbolThenPatched]) {\n                    patchThen(ctor);\n                }\n                return resultPromise;\n            };\n        }\n        if (NativePromise) {\n            patchThen(NativePromise);\n            const fetch = global['fetch'];\n            if (typeof fetch == 'function') {\n                global[api.symbol('fetch')] = fetch;\n                global['fetch'] = zoneify(fetch);\n            }\n        }\n        // This is not part of public API, but it is useful for tests, so we expose it.\n        Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n        return ZoneAwarePromise;\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Suppress closure compiler errors about unknown 'Zone' variable\n     * @fileoverview\n     * @suppress {undefinedVars,globalThis,missingRequire}\n     */\n    /// <reference types=\"node\"/>\n    // issue #989, to reduce bundle size, use short name\n    /** Object.getOwnPropertyDescriptor */\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    /** Object.defineProperty */\n    const ObjectDefineProperty = Object.defineProperty;\n    /** Object.getPrototypeOf */\n    const ObjectGetPrototypeOf = Object.getPrototypeOf;\n    /** Object.create */\n    const ObjectCreate = Object.create;\n    /** Array.prototype.slice */\n    const ArraySlice = Array.prototype.slice;\n    /** addEventListener string const */\n    const ADD_EVENT_LISTENER_STR = 'addEventListener';\n    /** removeEventListener string const */\n    const REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n    /** zoneSymbol addEventListener */\n    const ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n    /** zoneSymbol removeEventListener */\n    const ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n    /** true string const */\n    const TRUE_STR = 'true';\n    /** false string const */\n    const FALSE_STR = 'false';\n    /** Zone symbol prefix string const. */\n    const ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\n    function wrapWithCurrentZone(callback, source) {\n        return Zone.current.wrap(callback, source);\n    }\n    function scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n        return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n    }\n    const zoneSymbol = Zone.__symbol__;\n    const isWindowExists = typeof window !== 'undefined';\n    const internalWindow = isWindowExists ? window : undefined;\n    const _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\n    const REMOVE_ATTRIBUTE = 'removeAttribute';\n    const NULL_ON_PROP_VALUE = [null];\n    function bindArguments(args, source) {\n        for (let i = args.length - 1; i >= 0; i--) {\n            if (typeof args[i] === 'function') {\n                args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n            }\n        }\n        return args;\n    }\n    function patchPrototype(prototype, fnNames) {\n        const source = prototype.constructor['name'];\n        for (let i = 0; i < fnNames.length; i++) {\n            const name = fnNames[i];\n            const delegate = prototype[name];\n            if (delegate) {\n                const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n                if (!isPropertyWritable(prototypeDesc)) {\n                    continue;\n                }\n                prototype[name] = ((delegate) => {\n                    const patched = function () {\n                        return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                    };\n                    attachOriginToPatched(patched, delegate);\n                    return patched;\n                })(delegate);\n            }\n        }\n    }\n    function isPropertyWritable(propertyDesc) {\n        if (!propertyDesc) {\n            return true;\n        }\n        if (propertyDesc.writable === false) {\n            return false;\n        }\n        return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n    }\n    const isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n    // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n    // this code.\n    const isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n        {}.toString.call(_global.process) === '[object process]');\n    const isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n    // we are in electron of nw, so we are both browser and nodejs\n    // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n    // this code.\n    const isMix = typeof _global.process !== 'undefined' &&\n        {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n        !!(isWindowExists && internalWindow['HTMLElement']);\n    const zoneSymbolEventNames = {};\n    const wrapFn = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        let eventNameSymbol = zoneSymbolEventNames[event.type];\n        if (!eventNameSymbol) {\n            eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n        }\n        const target = this || event.target || _global;\n        const listener = target[eventNameSymbol];\n        let result;\n        if (isBrowser && target === internalWindow && event.type === 'error') {\n            // window.onerror have different signiture\n            // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n            // and onerror callback will prevent default when callback return true\n            const errorEvent = event;\n            result = listener &&\n                listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n            if (result === true) {\n                event.preventDefault();\n            }\n        }\n        else {\n            result = listener && listener.apply(this, arguments);\n            if (result != undefined && !result) {\n                event.preventDefault();\n            }\n        }\n        return result;\n    };\n    function patchProperty(obj, prop, prototype) {\n        let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n        if (!desc && prototype) {\n            // when patch window object, use prototype to check prop exist or not\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n            if (prototypeDesc) {\n                desc = { enumerable: true, configurable: true };\n            }\n        }\n        // if the descriptor not exists or is not configurable\n        // just return\n        if (!desc || !desc.configurable) {\n            return;\n        }\n        const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n        if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n            return;\n        }\n        // A property descriptor cannot have getter/setter and be writable\n        // deleting the writable and value properties avoids this error:\n        //\n        // TypeError: property descriptors must not specify a value or be writable when a\n        // getter or setter has been specified\n        delete desc.writable;\n        delete desc.value;\n        const originalDescGet = desc.get;\n        const originalDescSet = desc.set;\n        // substr(2) cuz 'onclick' -> 'click', etc\n        const eventName = prop.substr(2);\n        let eventNameSymbol = zoneSymbolEventNames[eventName];\n        if (!eventNameSymbol) {\n            eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n        }\n        desc.set = function (newValue) {\n            // in some of windows's onproperty callback, this is undefined\n            // so we need to check it\n            let target = this;\n            if (!target && obj === _global) {\n                target = _global;\n            }\n            if (!target) {\n                return;\n            }\n            let previousValue = target[eventNameSymbol];\n            if (previousValue) {\n                target.removeEventListener(eventName, wrapFn);\n            }\n            // issue #978, when onload handler was added before loading zone.js\n            // we should remove it with originalDescSet\n            if (originalDescSet) {\n                originalDescSet.apply(target, NULL_ON_PROP_VALUE);\n            }\n            if (typeof newValue === 'function') {\n                target[eventNameSymbol] = newValue;\n                target.addEventListener(eventName, wrapFn, false);\n            }\n            else {\n                target[eventNameSymbol] = null;\n            }\n        };\n        // The getter would return undefined for unassigned properties but the default value of an\n        // unassigned property is null\n        desc.get = function () {\n            // in some of windows's onproperty callback, this is undefined\n            // so we need to check it\n            let target = this;\n            if (!target && obj === _global) {\n                target = _global;\n            }\n            if (!target) {\n                return null;\n            }\n            const listener = target[eventNameSymbol];\n            if (listener) {\n                return listener;\n            }\n            else if (originalDescGet) {\n                // result will be null when use inline event attribute,\n                // such as <button onclick=\"func();\">OK</button>\n                // because the onclick function is internal raw uncompiled handler\n                // the onclick will be evaluated when first time event was triggered or\n                // the property is accessed, https://github.com/angular/zone.js/issues/525\n                // so we should use original native get to retrieve the handler\n                let value = originalDescGet && originalDescGet.call(this);\n                if (value) {\n                    desc.set.call(this, value);\n                    if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                        target.removeAttribute(prop);\n                    }\n                    return value;\n                }\n            }\n            return null;\n        };\n        ObjectDefineProperty(obj, prop, desc);\n        obj[onPropPatchedSymbol] = true;\n    }\n    function patchOnProperties(obj, properties, prototype) {\n        if (properties) {\n            for (let i = 0; i < properties.length; i++) {\n                patchProperty(obj, 'on' + properties[i], prototype);\n            }\n        }\n        else {\n            const onProperties = [];\n            for (const prop in obj) {\n                if (prop.substr(0, 2) == 'on') {\n                    onProperties.push(prop);\n                }\n            }\n            for (let j = 0; j < onProperties.length; j++) {\n                patchProperty(obj, onProperties[j], prototype);\n            }\n        }\n    }\n    const originalInstanceKey = zoneSymbol('originalInstance');\n    // wrap some native API on `window`\n    function patchClass(className) {\n        const OriginalClass = _global[className];\n        if (!OriginalClass)\n            return;\n        // keep original class in global\n        _global[zoneSymbol(className)] = OriginalClass;\n        _global[className] = function () {\n            const a = bindArguments(arguments, className);\n            switch (a.length) {\n                case 0:\n                    this[originalInstanceKey] = new OriginalClass();\n                    break;\n                case 1:\n                    this[originalInstanceKey] = new OriginalClass(a[0]);\n                    break;\n                case 2:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                    break;\n                case 3:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                    break;\n                case 4:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                    break;\n                default:\n                    throw new Error('Arg list too long.');\n            }\n        };\n        // attach original delegate to patched function\n        attachOriginToPatched(_global[className], OriginalClass);\n        const instance = new OriginalClass(function () { });\n        let prop;\n        for (prop in instance) {\n            // https://bugs.webkit.org/show_bug.cgi?id=44721\n            if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n                continue;\n            (function (prop) {\n                if (typeof instance[prop] === 'function') {\n                    _global[className].prototype[prop] = function () {\n                        return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                    };\n                }\n                else {\n                    ObjectDefineProperty(_global[className].prototype, prop, {\n                        set: function (fn) {\n                            if (typeof fn === 'function') {\n                                this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                                // keep callback in wrapped function so we can\n                                // use it in Function.prototype.toString to return\n                                // the native one.\n                                attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                            }\n                            else {\n                                this[originalInstanceKey][prop] = fn;\n                            }\n                        },\n                        get: function () { return this[originalInstanceKey][prop]; }\n                    });\n                }\n            }(prop));\n        }\n        for (prop in OriginalClass) {\n            if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n                _global[className][prop] = OriginalClass[prop];\n            }\n        }\n    }\n    function copySymbolProperties(src, dest) {\n        if (typeof Object.getOwnPropertySymbols !== 'function') {\n            return;\n        }\n        const symbols = Object.getOwnPropertySymbols(src);\n        symbols.forEach((symbol) => {\n            const desc = Object.getOwnPropertyDescriptor(src, symbol);\n            Object.defineProperty(dest, symbol, {\n                get: function () { return src[symbol]; },\n                set: function (value) {\n                    if (desc && (!desc.writable || typeof desc.set !== 'function')) {\n                        // if src[symbol] is not writable or not have a setter, just return\n                        return;\n                    }\n                    src[symbol] = value;\n                },\n                enumerable: desc ? desc.enumerable : true,\n                configurable: desc ? desc.configurable : true\n            });\n        });\n    }\n    let shouldCopySymbolProperties = false;\n    function patchMethod(target, name, patchFn) {\n        let proto = target;\n        while (proto && !proto.hasOwnProperty(name)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && target[name]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = target;\n        }\n        const delegateName = zoneSymbol(name);\n        let delegate = null;\n        if (proto && !(delegate = proto[delegateName])) {\n            delegate = proto[delegateName] = proto[name];\n            // check whether proto[name] is writable\n            // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n            const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n            if (isPropertyWritable(desc)) {\n                const patchDelegate = patchFn(delegate, delegateName, name);\n                proto[name] = function () { return patchDelegate(this, arguments); };\n                attachOriginToPatched(proto[name], delegate);\n                if (shouldCopySymbolProperties) {\n                    copySymbolProperties(delegate, proto[name]);\n                }\n            }\n        }\n        return delegate;\n    }\n    // TODO: @JiaLiPassion, support cancel task later if necessary\n    function patchMacroTask(obj, funcName, metaCreator) {\n        let setNative = null;\n        function scheduleTask(task) {\n            const data = task.data;\n            data.args[data.cbIdx] = function () { task.invoke.apply(this, arguments); };\n            setNative.apply(data.target, data.args);\n            return task;\n        }\n        setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n            const meta = metaCreator(self, args);\n            if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n                return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(self, args);\n            }\n        });\n    }\n    function attachOriginToPatched(patched, original) {\n        patched[zoneSymbol('OriginalDelegate')] = original;\n    }\n    let isDetectedIEOrEdge = false;\n    let ieOrEdge = false;\n    function isIE() {\n        try {\n            const ua = internalWindow.navigator.userAgent;\n            if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n                return true;\n            }\n        }\n        catch (error) {\n        }\n        return false;\n    }\n    function isIEOrEdge() {\n        if (isDetectedIEOrEdge) {\n            return ieOrEdge;\n        }\n        isDetectedIEOrEdge = true;\n        try {\n            const ua = internalWindow.navigator.userAgent;\n            if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n                ieOrEdge = true;\n            }\n        }\n        catch (error) {\n        }\n        return ieOrEdge;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // override Function.prototype.toString to make zone.js patched function\n    // look like native function\n    Zone.__load_patch('toString', (global) => {\n        // patch Func.prototype.toString to let them look like native\n        const originalFunctionToString = Function.prototype.toString;\n        const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n        const PROMISE_SYMBOL = zoneSymbol('Promise');\n        const ERROR_SYMBOL = zoneSymbol('Error');\n        const newFunctionToString = function toString() {\n            if (typeof this === 'function') {\n                const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n                if (originalDelegate) {\n                    if (typeof originalDelegate === 'function') {\n                        return originalFunctionToString.call(originalDelegate);\n                    }\n                    else {\n                        return Object.prototype.toString.call(originalDelegate);\n                    }\n                }\n                if (this === Promise) {\n                    const nativePromise = global[PROMISE_SYMBOL];\n                    if (nativePromise) {\n                        return originalFunctionToString.call(nativePromise);\n                    }\n                }\n                if (this === Error) {\n                    const nativeError = global[ERROR_SYMBOL];\n                    if (nativeError) {\n                        return originalFunctionToString.call(nativeError);\n                    }\n                }\n            }\n            return originalFunctionToString.call(this);\n        };\n        newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n        Function.prototype.toString = newFunctionToString;\n        // patch Object.prototype.toString to let them look like native\n        const originalObjectToString = Object.prototype.toString;\n        const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n        Object.prototype.toString = function () {\n            if (this instanceof Promise) {\n                return PROMISE_OBJECT_TO_STRING;\n            }\n            return originalObjectToString.call(this);\n        };\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    let passiveSupported = false;\n    if (typeof window !== 'undefined') {\n        try {\n            const options = Object.defineProperty({}, 'passive', { get: function () { passiveSupported = true; } });\n            window.addEventListener('test', options, options);\n            window.removeEventListener('test', options, options);\n        }\n        catch (err) {\n            passiveSupported = false;\n        }\n    }\n    // an identifier to tell ZoneTask do not create a new invoke closure\n    const OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n        useG: true\n    };\n    const zoneSymbolEventNames$1 = {};\n    const globalSources = {};\n    const EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\n    const IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\n    function prepareEventNames(eventName, eventNameToString) {\n        const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n        const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames$1[eventName] = {};\n        zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n    }\n    function patchEventTarget(_global, apis, patchOptions) {\n        const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n        const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n        const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n        const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n        const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n        const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n        const PREPEND_EVENT_LISTENER = 'prependListener';\n        const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n        const invokeTask = function (task, target, event) {\n            // for better performance, check isRemoved which is set\n            // by removeEventListener\n            if (task.isRemoved) {\n                return;\n            }\n            const delegate = task.callback;\n            if (typeof delegate === 'object' && delegate.handleEvent) {\n                // create the bind version of handleEvent when invoke\n                task.callback = (event) => delegate.handleEvent(event);\n                task.originalDelegate = delegate;\n            }\n            // invoke static task.invoke\n            task.invoke(task, target, [event]);\n            const options = task.options;\n            if (options && typeof options === 'object' && options.once) {\n                // if options.once is true, after invoke once remove listener here\n                // only browser need to do this, nodejs eventEmitter will cal removeListener\n                // inside EventEmitter.once\n                const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n            }\n        };\n        // global shared zoneAwareCallback to handle all event callback with capture = false\n        const globalZoneAwareCallback = function (event) {\n            // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n            // event will be undefined, so we need to use window.event\n            event = event || _global.event;\n            if (!event) {\n                return;\n            }\n            // event.target is needed for Samsung TV and SourceBuffer\n            // || global is needed https://github.com/angular/zone.js/issues/190\n            const target = this || event.target || _global;\n            const tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];\n            if (tasks) {\n                // invoke all tasks which attached to current target with given event.type and capture = false\n                // for performance concern, if task.length === 1, just invoke\n                if (tasks.length === 1) {\n                    invokeTask(tasks[0], target, event);\n                }\n                else {\n                    // https://github.com/angular/zone.js/issues/836\n                    // copy the tasks array before invoke, to avoid\n                    // the callback will remove itself or other listener\n                    const copyTasks = tasks.slice();\n                    for (let i = 0; i < copyTasks.length; i++) {\n                        if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                            break;\n                        }\n                        invokeTask(copyTasks[i], target, event);\n                    }\n                }\n            }\n        };\n        // global shared zoneAwareCallback to handle all event callback with capture = true\n        const globalZoneAwareCaptureCallback = function (event) {\n            // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n            // event will be undefined, so we need to use window.event\n            event = event || _global.event;\n            if (!event) {\n                return;\n            }\n            // event.target is needed for Samsung TV and SourceBuffer\n            // || global is needed https://github.com/angular/zone.js/issues/190\n            const target = this || event.target || _global;\n            const tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];\n            if (tasks) {\n                // invoke all tasks which attached to current target with given event.type and capture = false\n                // for performance concern, if task.length === 1, just invoke\n                if (tasks.length === 1) {\n                    invokeTask(tasks[0], target, event);\n                }\n                else {\n                    // https://github.com/angular/zone.js/issues/836\n                    // copy the tasks array before invoke, to avoid\n                    // the callback will remove itself or other listener\n                    const copyTasks = tasks.slice();\n                    for (let i = 0; i < copyTasks.length; i++) {\n                        if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                            break;\n                        }\n                        invokeTask(copyTasks[i], target, event);\n                    }\n                }\n            }\n        };\n        function patchEventTargetMethods(obj, patchOptions) {\n            if (!obj) {\n                return false;\n            }\n            let useGlobalCallback = true;\n            if (patchOptions && patchOptions.useG !== undefined) {\n                useGlobalCallback = patchOptions.useG;\n            }\n            const validateHandler = patchOptions && patchOptions.vh;\n            let checkDuplicate = true;\n            if (patchOptions && patchOptions.chkDup !== undefined) {\n                checkDuplicate = patchOptions.chkDup;\n            }\n            let returnTarget = false;\n            if (patchOptions && patchOptions.rt !== undefined) {\n                returnTarget = patchOptions.rt;\n            }\n            let proto = obj;\n            while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n                proto = ObjectGetPrototypeOf(proto);\n            }\n            if (!proto && obj[ADD_EVENT_LISTENER]) {\n                // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n                proto = obj;\n            }\n            if (!proto) {\n                return false;\n            }\n            if (proto[zoneSymbolAddEventListener]) {\n                return false;\n            }\n            const eventNameToString = patchOptions && patchOptions.eventNameToString;\n            // a shared global taskData to pass data for scheduleEventTask\n            // so we do not need to create a new object just for pass some data\n            const taskData = {};\n            const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n            const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n                proto[REMOVE_EVENT_LISTENER];\n            const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n                proto[LISTENERS_EVENT_LISTENER];\n            const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n                proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n            let nativePrependEventListener;\n            if (patchOptions && patchOptions.prepend) {\n                nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                    proto[patchOptions.prepend];\n            }\n            /**\n             * This util function will build an option object with passive option\n             * to handle all possible input from the user.\n             */\n            function buildEventListenerOptions(options, passive) {\n                if (!passiveSupported && typeof options === 'object' && options) {\n                    // doesn't support passive but user want to pass an object as options.\n                    // this will not work on some old browser, so we just pass a boolean\n                    // as useCapture parameter\n                    return !!options.capture;\n                }\n                if (!passiveSupported || !passive) {\n                    return options;\n                }\n                if (typeof options === 'boolean') {\n                    return { capture: options, passive: true };\n                }\n                if (!options) {\n                    return { passive: true };\n                }\n                if (typeof options === 'object' && options.passive !== false) {\n                    return Object.assign(Object.assign({}, options), { passive: true });\n                }\n                return options;\n            }\n            const customScheduleGlobal = function (task) {\n                // if there is already a task for the eventName + capture,\n                // just return, because we use the shared globalZoneAwareCallback here.\n                if (taskData.isExisting) {\n                    return;\n                }\n                return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n            };\n            const customCancelGlobal = function (task) {\n                // if task is not marked as isRemoved, this call is directly\n                // from Zone.prototype.cancelTask, we should remove the task\n                // from tasksList of target first\n                if (!task.isRemoved) {\n                    const symbolEventNames = zoneSymbolEventNames$1[task.eventName];\n                    let symbolEventName;\n                    if (symbolEventNames) {\n                        symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                    }\n                    const existingTasks = symbolEventName && task.target[symbolEventName];\n                    if (existingTasks) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            const existingTask = existingTasks[i];\n                            if (existingTask === task) {\n                                existingTasks.splice(i, 1);\n                                // set isRemoved to data for faster invokeTask check\n                                task.isRemoved = true;\n                                if (existingTasks.length === 0) {\n                                    // all tasks for the eventName + capture have gone,\n                                    // remove globalZoneAwareCallback and remove the task cache from target\n                                    task.allRemoved = true;\n                                    task.target[symbolEventName] = null;\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n                // if all tasks for the eventName + capture have gone,\n                // we will really remove the global event callback,\n                // if not, return\n                if (!task.allRemoved) {\n                    return;\n                }\n                return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n            };\n            const customScheduleNonGlobal = function (task) {\n                return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n            };\n            const customSchedulePrepend = function (task) {\n                return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n            };\n            const customCancelNonGlobal = function (task) {\n                return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n            };\n            const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n            const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n            const compareTaskCallbackVsDelegate = function (task, delegate) {\n                const typeOfDelegate = typeof delegate;\n                return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                    (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n            };\n            const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n            const blackListedEvents = Zone[zoneSymbol('BLACK_LISTED_EVENTS')];\n            const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n            const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n                return function () {\n                    const target = this || _global;\n                    let eventName = arguments[0];\n                    if (patchOptions && patchOptions.transferEventName) {\n                        eventName = patchOptions.transferEventName(eventName);\n                    }\n                    let delegate = arguments[1];\n                    if (!delegate) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    if (isNode && eventName === 'uncaughtException') {\n                        // don't patch uncaughtException of nodejs to prevent endless loop\n                        return nativeListener.apply(this, arguments);\n                    }\n                    // don't create the bind delegate function for handleEvent\n                    // case here to improve addEventListener performance\n                    // we will create the bind delegate when invoke\n                    let isHandleEvent = false;\n                    if (typeof delegate !== 'function') {\n                        if (!delegate.handleEvent) {\n                            return nativeListener.apply(this, arguments);\n                        }\n                        isHandleEvent = true;\n                    }\n                    if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                        return;\n                    }\n                    const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                    const options = buildEventListenerOptions(arguments[2], passive);\n                    if (blackListedEvents) {\n                        // check black list\n                        for (let i = 0; i < blackListedEvents.length; i++) {\n                            if (eventName === blackListedEvents[i]) {\n                                if (passive) {\n                                    return nativeListener.call(target, eventName, delegate, options);\n                                }\n                                else {\n                                    return nativeListener.apply(this, arguments);\n                                }\n                            }\n                        }\n                    }\n                    const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                    const once = options && typeof options === 'object' ? options.once : false;\n                    const zone = Zone.current;\n                    let symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    if (!symbolEventNames) {\n                        prepareEventNames(eventName, eventNameToString);\n                        symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    }\n                    const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                    let existingTasks = target[symbolEventName];\n                    let isExisting = false;\n                    if (existingTasks) {\n                        // already have task registered\n                        isExisting = true;\n                        if (checkDuplicate) {\n                            for (let i = 0; i < existingTasks.length; i++) {\n                                if (compare(existingTasks[i], delegate)) {\n                                    // same callback, same capture, same event name, just return\n                                    return;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        existingTasks = target[symbolEventName] = [];\n                    }\n                    let source;\n                    const constructorName = target.constructor['name'];\n                    const targetSource = globalSources[constructorName];\n                    if (targetSource) {\n                        source = targetSource[eventName];\n                    }\n                    if (!source) {\n                        source = constructorName + addSource +\n                            (eventNameToString ? eventNameToString(eventName) : eventName);\n                    }\n                    // do not create a new object as task.data to pass those things\n                    // just use the global shared one\n                    taskData.options = options;\n                    if (once) {\n                        // if addEventListener with once options, we don't pass it to\n                        // native addEventListener, instead we keep the once setting\n                        // and handle ourselves.\n                        taskData.options.once = false;\n                    }\n                    taskData.target = target;\n                    taskData.capture = capture;\n                    taskData.eventName = eventName;\n                    taskData.isExisting = isExisting;\n                    const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                    // keep taskData into data to allow onScheduleEventTask to access the task information\n                    if (data) {\n                        data.taskData = taskData;\n                    }\n                    const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                    // should clear taskData.target to avoid memory leak\n                    // issue, https://github.com/angular/angular/issues/20442\n                    taskData.target = null;\n                    // need to clear up taskData because it is a global object\n                    if (data) {\n                        data.taskData = null;\n                    }\n                    // have to save those information to task in case\n                    // application may call task.zone.cancelTask() directly\n                    if (once) {\n                        options.once = true;\n                    }\n                    if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                        // if not support passive, and we pass an option object\n                        // to addEventListener, we should save the options to task\n                        task.options = options;\n                    }\n                    task.target = target;\n                    task.capture = capture;\n                    task.eventName = eventName;\n                    if (isHandleEvent) {\n                        // save original delegate for compare to check duplicate\n                        task.originalDelegate = delegate;\n                    }\n                    if (!prepend) {\n                        existingTasks.push(task);\n                    }\n                    else {\n                        existingTasks.unshift(task);\n                    }\n                    if (returnTarget) {\n                        return target;\n                    }\n                };\n            };\n            proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n            if (nativePrependEventListener) {\n                proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n            }\n            proto[REMOVE_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const options = arguments[2];\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const delegate = arguments[1];\n                if (!delegate) {\n                    return nativeRemoveEventListener.apply(this, arguments);\n                }\n                if (validateHandler &&\n                    !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                    return;\n                }\n                const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (compare(existingTask, delegate)) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            existingTask.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                existingTask.allRemoved = true;\n                                target[symbolEventName] = null;\n                                // in the target, we have an event listener which is added by on_property\n                                // such as target.onclick = function() {}, so we need to clear this internal\n                                // property too if all delegates all removed\n                                if (typeof eventName === 'string') {\n                                    const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                    target[onPropertySymbol] = null;\n                                }\n                            }\n                            existingTask.zone.cancelTask(existingTask);\n                            if (returnTarget) {\n                                return target;\n                            }\n                            return;\n                        }\n                    }\n                }\n                // issue 930, didn't find the event name or callback\n                // from zone kept existingTasks, the callback maybe\n                // added outside of zone, we need to call native removeEventListener\n                // to try to remove it.\n                return nativeRemoveEventListener.apply(this, arguments);\n            };\n            proto[LISTENERS_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const listeners = [];\n                const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n                for (let i = 0; i < tasks.length; i++) {\n                    const task = tasks[i];\n                    let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                    listeners.push(delegate);\n                }\n                return listeners;\n            };\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (!eventName) {\n                    const keys = Object.keys(target);\n                    for (let i = 0; i < keys.length; i++) {\n                        const prop = keys[i];\n                        const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                        let evtName = match && match[1];\n                        // in nodejs EventEmitter, removeListener event is\n                        // used for monitoring the removeListener call,\n                        // so just keep removeListener eventListener until\n                        // all other eventListeners are removed\n                        if (evtName && evtName !== 'removeListener') {\n                            this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                        }\n                    }\n                    // remove removeListener listener finally\n                    this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n                }\n                else {\n                    if (patchOptions && patchOptions.transferEventName) {\n                        eventName = patchOptions.transferEventName(eventName);\n                    }\n                    const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    if (symbolEventNames) {\n                        const symbolEventName = symbolEventNames[FALSE_STR];\n                        const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                        const tasks = target[symbolEventName];\n                        const captureTasks = target[symbolCaptureEventName];\n                        if (tasks) {\n                            const removeTasks = tasks.slice();\n                            for (let i = 0; i < removeTasks.length; i++) {\n                                const task = removeTasks[i];\n                                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                                this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                            }\n                        }\n                        if (captureTasks) {\n                            const removeTasks = captureTasks.slice();\n                            for (let i = 0; i < removeTasks.length; i++) {\n                                const task = removeTasks[i];\n                                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                                this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                            }\n                        }\n                    }\n                }\n                if (returnTarget) {\n                    return this;\n                }\n            };\n            // for native toString patch\n            attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n            attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n            if (nativeRemoveAllListeners) {\n                attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n            }\n            if (nativeListeners) {\n                attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n            }\n            return true;\n        }\n        let results = [];\n        for (let i = 0; i < apis.length; i++) {\n            results[i] = patchEventTargetMethods(apis[i], patchOptions);\n        }\n        return results;\n    }\n    function findEventTasks(target, eventName) {\n        if (!eventName) {\n            const foundTasks = [];\n            for (let prop in target) {\n                const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                let evtName = match && match[1];\n                if (evtName && (!eventName || evtName === eventName)) {\n                    const tasks = target[prop];\n                    if (tasks) {\n                        for (let i = 0; i < tasks.length; i++) {\n                            foundTasks.push(tasks[i]);\n                        }\n                    }\n                }\n            }\n            return foundTasks;\n        }\n        let symbolEventName = zoneSymbolEventNames$1[eventName];\n        if (!symbolEventName) {\n            prepareEventNames(eventName);\n            symbolEventName = zoneSymbolEventNames$1[eventName];\n        }\n        const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n        const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n        if (!captureFalseTasks) {\n            return captureTrueTasks ? captureTrueTasks.slice() : [];\n        }\n        else {\n            return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\n                captureFalseTasks.slice();\n        }\n    }\n    function patchEventPrototype(global, api) {\n        const Event = global['Event'];\n        if (Event && Event.prototype) {\n            api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n                self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n                // we need to call the native stopImmediatePropagation\n                // in case in some hybrid application, some part of\n                // application will be controlled by zone, some are not\n                delegate && delegate.apply(self, args);\n            });\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function patchCallbacks(api, target, targetName, method, callbacks) {\n        const symbol = Zone.__symbol__(method);\n        if (target[symbol]) {\n            return;\n        }\n        const nativeDelegate = target[symbol] = target[method];\n        target[method] = function (name, opts, options) {\n            if (opts && opts.prototype) {\n                callbacks.forEach(function (callback) {\n                    const source = `${targetName}.${method}::` + callback;\n                    const prototype = opts.prototype;\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                });\n            }\n            return nativeDelegate.call(target, name, opts, options);\n        };\n        api.attachOriginToPatched(target[method], nativeDelegate);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const globalEventHandlersEventNames = [\n        'abort',\n        'animationcancel',\n        'animationend',\n        'animationiteration',\n        'auxclick',\n        'beforeinput',\n        'blur',\n        'cancel',\n        'canplay',\n        'canplaythrough',\n        'change',\n        'compositionstart',\n        'compositionupdate',\n        'compositionend',\n        'cuechange',\n        'click',\n        'close',\n        'contextmenu',\n        'curechange',\n        'dblclick',\n        'drag',\n        'dragend',\n        'dragenter',\n        'dragexit',\n        'dragleave',\n        'dragover',\n        'drop',\n        'durationchange',\n        'emptied',\n        'ended',\n        'error',\n        'focus',\n        'focusin',\n        'focusout',\n        'gotpointercapture',\n        'input',\n        'invalid',\n        'keydown',\n        'keypress',\n        'keyup',\n        'load',\n        'loadstart',\n        'loadeddata',\n        'loadedmetadata',\n        'lostpointercapture',\n        'mousedown',\n        'mouseenter',\n        'mouseleave',\n        'mousemove',\n        'mouseout',\n        'mouseover',\n        'mouseup',\n        'mousewheel',\n        'orientationchange',\n        'pause',\n        'play',\n        'playing',\n        'pointercancel',\n        'pointerdown',\n        'pointerenter',\n        'pointerleave',\n        'pointerlockchange',\n        'mozpointerlockchange',\n        'webkitpointerlockerchange',\n        'pointerlockerror',\n        'mozpointerlockerror',\n        'webkitpointerlockerror',\n        'pointermove',\n        'pointout',\n        'pointerover',\n        'pointerup',\n        'progress',\n        'ratechange',\n        'reset',\n        'resize',\n        'scroll',\n        'seeked',\n        'seeking',\n        'select',\n        'selectionchange',\n        'selectstart',\n        'show',\n        'sort',\n        'stalled',\n        'submit',\n        'suspend',\n        'timeupdate',\n        'volumechange',\n        'touchcancel',\n        'touchmove',\n        'touchstart',\n        'touchend',\n        'transitioncancel',\n        'transitionend',\n        'waiting',\n        'wheel'\n    ];\n    const documentEventNames = [\n        'afterscriptexecute', 'beforescriptexecute', 'DOMContentLoaded', 'freeze', 'fullscreenchange',\n        'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange', 'fullscreenerror',\n        'mozfullscreenerror', 'webkitfullscreenerror', 'msfullscreenerror', 'readystatechange',\n        'visibilitychange', 'resume'\n    ];\n    const windowEventNames = [\n        'absolutedeviceorientation',\n        'afterinput',\n        'afterprint',\n        'appinstalled',\n        'beforeinstallprompt',\n        'beforeprint',\n        'beforeunload',\n        'devicelight',\n        'devicemotion',\n        'deviceorientation',\n        'deviceorientationabsolute',\n        'deviceproximity',\n        'hashchange',\n        'languagechange',\n        'message',\n        'mozbeforepaint',\n        'offline',\n        'online',\n        'paint',\n        'pageshow',\n        'pagehide',\n        'popstate',\n        'rejectionhandled',\n        'storage',\n        'unhandledrejection',\n        'unload',\n        'userproximity',\n        'vrdisplayconnected',\n        'vrdisplaydisconnected',\n        'vrdisplaypresentchange'\n    ];\n    const htmlElementEventNames = [\n        'beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'dragstart', 'loadend',\n        'animationstart', 'search', 'transitionrun', 'transitionstart', 'webkitanimationend',\n        'webkitanimationiteration', 'webkitanimationstart', 'webkittransitionend'\n    ];\n    const mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];\n    const ieElementEventNames = [\n        'activate',\n        'afterupdate',\n        'ariarequest',\n        'beforeactivate',\n        'beforedeactivate',\n        'beforeeditfocus',\n        'beforeupdate',\n        'cellchange',\n        'controlselect',\n        'dataavailable',\n        'datasetchanged',\n        'datasetcomplete',\n        'errorupdate',\n        'filterchange',\n        'layoutcomplete',\n        'losecapture',\n        'move',\n        'moveend',\n        'movestart',\n        'propertychange',\n        'resizeend',\n        'resizestart',\n        'rowenter',\n        'rowexit',\n        'rowsdelete',\n        'rowsinserted',\n        'command',\n        'compassneedscalibration',\n        'deactivate',\n        'help',\n        'mscontentzoom',\n        'msmanipulationstatechanged',\n        'msgesturechange',\n        'msgesturedoubletap',\n        'msgestureend',\n        'msgesturehold',\n        'msgesturestart',\n        'msgesturetap',\n        'msgotpointercapture',\n        'msinertiastart',\n        'mslostpointercapture',\n        'mspointercancel',\n        'mspointerdown',\n        'mspointerenter',\n        'mspointerhover',\n        'mspointerleave',\n        'mspointermove',\n        'mspointerout',\n        'mspointerover',\n        'mspointerup',\n        'pointerout',\n        'mssitemodejumplistitemremoved',\n        'msthumbnailclick',\n        'stop',\n        'storagecommit'\n    ];\n    const webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];\n    const formEventNames = ['autocomplete', 'autocompleteerror'];\n    const detailEventNames = ['toggle'];\n    const frameEventNames = ['load'];\n    const frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];\n    const marqueeEventNames = ['bounce', 'finish', 'start'];\n    const XMLHttpRequestEventNames = [\n        'loadstart', 'progress', 'abort', 'error', 'load', 'progress', 'timeout', 'loadend',\n        'readystatechange'\n    ];\n    const IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];\n    const websocketEventNames = ['close', 'error', 'open', 'message'];\n    const workerEventNames = ['error', 'message'];\n    const eventNames = globalEventHandlersEventNames.concat(webglEventNames, formEventNames, detailEventNames, documentEventNames, windowEventNames, htmlElementEventNames, ieElementEventNames);\n    function filterProperties(target, onProperties, ignoreProperties) {\n        if (!ignoreProperties || ignoreProperties.length === 0) {\n            return onProperties;\n        }\n        const tip = ignoreProperties.filter(ip => ip.target === target);\n        if (!tip || tip.length === 0) {\n            return onProperties;\n        }\n        const targetIgnoreProperties = tip[0].ignoreProperties;\n        return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n    }\n    function patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n        // check whether target is available, sometimes target will be undefined\n        // because different browser or some 3rd party plugin.\n        if (!target) {\n            return;\n        }\n        const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n        patchOnProperties(target, filteredProperties, prototype);\n    }\n    function propertyDescriptorPatch(api, _global) {\n        if (isNode && !isMix) {\n            return;\n        }\n        if (Zone[api.symbol('patchEvents')]) {\n            // events are already been patched by legacy patch.\n            return;\n        }\n        const supportsWebSocket = typeof WebSocket !== 'undefined';\n        const ignoreProperties = _global['__Zone_ignore_on_properties'];\n        // for browsers that we can patch the descriptor:  Chrome & Firefox\n        if (isBrowser) {\n            const internalWindow = window;\n            const ignoreErrorProperties = isIE ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n            // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n            // so we need to pass WindowPrototype to check onProp exist or not\n            patchFilteredProperties(internalWindow, eventNames.concat(['messageerror']), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n            patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);\n            if (typeof internalWindow['SVGElement'] !== 'undefined') {\n                patchFilteredProperties(internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);\n            }\n            patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);\n            const HTMLMarqueeElement = internalWindow['HTMLMarqueeElement'];\n            if (HTMLMarqueeElement) {\n                patchFilteredProperties(HTMLMarqueeElement.prototype, marqueeEventNames, ignoreProperties);\n            }\n            const Worker = internalWindow['Worker'];\n            if (Worker) {\n                patchFilteredProperties(Worker.prototype, workerEventNames, ignoreProperties);\n            }\n        }\n        const XMLHttpRequest = _global['XMLHttpRequest'];\n        if (XMLHttpRequest) {\n            // XMLHttpRequest is not available in ServiceWorker, so we need to check here\n            patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        }\n        const XMLHttpRequestEventTarget = _global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget) {\n            patchFilteredProperties(XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        }\n        if (typeof IDBIndex !== 'undefined') {\n            patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);\n        }\n        if (supportsWebSocket) {\n            patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('util', (global, Zone, api) => {\n        api.patchOnProperties = patchOnProperties;\n        api.patchMethod = patchMethod;\n        api.bindArguments = bindArguments;\n        api.patchMacroTask = patchMacroTask;\n        // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n        // define which events will not be patched by `Zone.js`.\n        // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n        // the name consistent with angular repo.\n        // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n        // backwards compatibility.\n        const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n        const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n        if (global[SYMBOL_UNPATCHED_EVENTS]) {\n            global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n        }\n        if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n            Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n                global[SYMBOL_BLACK_LISTED_EVENTS];\n        }\n        api.patchEventPrototype = patchEventPrototype;\n        api.patchEventTarget = patchEventTarget;\n        api.isIEOrEdge = isIEOrEdge;\n        api.ObjectDefineProperty = ObjectDefineProperty;\n        api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n        api.ObjectCreate = ObjectCreate;\n        api.ArraySlice = ArraySlice;\n        api.patchClass = patchClass;\n        api.wrapWithCurrentZone = wrapWithCurrentZone;\n        api.filterProperties = filterProperties;\n        api.attachOriginToPatched = attachOriginToPatched;\n        api._redefineProperty = Object.defineProperty;\n        api.patchCallbacks = patchCallbacks;\n        api.getGlobalObjects = () => ({ globalSources, zoneSymbolEventNames: zoneSymbolEventNames$1, eventNames, isBrowser, isMix, isNode, TRUE_STR,\n            FALSE_STR, ZONE_SYMBOL_PREFIX, ADD_EVENT_LISTENER_STR, REMOVE_EVENT_LISTENER_STR });\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const taskSymbol = zoneSymbol('zoneTask');\n    function patchTimer(window, setName, cancelName, nameSuffix) {\n        let setNative = null;\n        let clearNative = null;\n        setName += nameSuffix;\n        cancelName += nameSuffix;\n        const tasksByHandleId = {};\n        function scheduleTask(task) {\n            const data = task.data;\n            function timer() {\n                try {\n                    task.invoke.apply(this, arguments);\n                }\n                finally {\n                    // issue-934, task will be cancelled\n                    // even it is a periodic task such as\n                    // setInterval\n                    if (!(task.data && task.data.isPeriodic)) {\n                        if (typeof data.handleId === 'number') {\n                            // in non-nodejs env, we remove timerId\n                            // from local cache\n                            delete tasksByHandleId[data.handleId];\n                        }\n                        else if (data.handleId) {\n                            // Node returns complex objects as handleIds\n                            // we remove task reference from timer object\n                            data.handleId[taskSymbol] = null;\n                        }\n                    }\n                }\n            }\n            data.args[0] = timer;\n            data.handleId = setNative.apply(window, data.args);\n            return task;\n        }\n        function clearTask(task) { return clearNative(task.data.handleId); }\n        setNative =\n            patchMethod(window, setName, (delegate) => function (self, args) {\n                if (typeof args[0] === 'function') {\n                    const options = {\n                        isPeriodic: nameSuffix === 'Interval',\n                        delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                            undefined,\n                        args: args\n                    };\n                    const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                    if (!task) {\n                        return task;\n                    }\n                    // Node.js must additionally support the ref and unref functions.\n                    const handle = task.data.handleId;\n                    if (typeof handle === 'number') {\n                        // for non nodejs env, we save handleId: task\n                        // mapping in local cache for clearTimeout\n                        tasksByHandleId[handle] = task;\n                    }\n                    else if (handle) {\n                        // for nodejs env, we save task\n                        // reference in timerId Object for clearTimeout\n                        handle[taskSymbol] = task;\n                    }\n                    // check whether handle is null, because some polyfill or browser\n                    // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                    if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                        typeof handle.unref === 'function') {\n                        task.ref = handle.ref.bind(handle);\n                        task.unref = handle.unref.bind(handle);\n                    }\n                    if (typeof handle === 'number' || handle) {\n                        return handle;\n                    }\n                    return task;\n                }\n                else {\n                    // cause an error by calling it directly.\n                    return delegate.apply(window, args);\n                }\n            });\n        clearNative =\n            patchMethod(window, cancelName, (delegate) => function (self, args) {\n                const id = args[0];\n                let task;\n                if (typeof id === 'number') {\n                    // non nodejs env.\n                    task = tasksByHandleId[id];\n                }\n                else {\n                    // nodejs env.\n                    task = id && id[taskSymbol];\n                    // other environments.\n                    if (!task) {\n                        task = id;\n                    }\n                }\n                if (task && typeof task.type === 'string') {\n                    if (task.state !== 'notScheduled' &&\n                        (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                        if (typeof id === 'number') {\n                            delete tasksByHandleId[id];\n                        }\n                        else if (id) {\n                            id[taskSymbol] = null;\n                        }\n                        // Do not cancel already canceled functions\n                        task.zone.cancelTask(task);\n                    }\n                }\n                else {\n                    // cause an error by calling it directly.\n                    delegate.apply(window, args);\n                }\n            });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function patchCustomElements(_global, api) {\n        const { isBrowser, isMix } = api.getGlobalObjects();\n        if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n            return;\n        }\n        const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n        api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function eventTargetPatch(_global, api) {\n        if (Zone[api.symbol('patchEventTarget')]) {\n            // EventTarget is already patched.\n            return;\n        }\n        const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n        //  predefine all __zone_symbol__ + eventName + true/false string\n        for (let i = 0; i < eventNames.length; i++) {\n            const eventName = eventNames[i];\n            const falseEventName = eventName + FALSE_STR;\n            const trueEventName = eventName + TRUE_STR;\n            const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n            const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n            zoneSymbolEventNames[eventName] = {};\n            zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n            zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n        }\n        const EVENT_TARGET = _global['EventTarget'];\n        if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n            return;\n        }\n        api.patchEventTarget(_global, [EVENT_TARGET && EVENT_TARGET.prototype]);\n        return true;\n    }\n    function patchEvent(global, api) {\n        api.patchEventPrototype(global, api);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('legacy', (global) => {\n        const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n        if (legacyPatch) {\n            legacyPatch();\n        }\n    });\n    Zone.__load_patch('timers', (global) => {\n        const set = 'set';\n        const clear = 'clear';\n        patchTimer(global, set, clear, 'Timeout');\n        patchTimer(global, set, clear, 'Interval');\n        patchTimer(global, set, clear, 'Immediate');\n    });\n    Zone.__load_patch('requestAnimationFrame', (global) => {\n        patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n        patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n        patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n    });\n    Zone.__load_patch('blocking', (global, Zone) => {\n        const blockingMethods = ['alert', 'prompt', 'confirm'];\n        for (let i = 0; i < blockingMethods.length; i++) {\n            const name = blockingMethods[i];\n            patchMethod(global, name, (delegate, symbol, name) => {\n                return function (s, args) {\n                    return Zone.current.run(delegate, global, args, name);\n                };\n            });\n        }\n    });\n    Zone.__load_patch('EventTarget', (global, Zone, api) => {\n        patchEvent(global, api);\n        eventTargetPatch(global, api);\n        // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n        const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n            api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);\n        }\n        patchClass('MutationObserver');\n        patchClass('WebKitMutationObserver');\n        patchClass('IntersectionObserver');\n        patchClass('FileReader');\n    });\n    Zone.__load_patch('on_property', (global, Zone, api) => {\n        propertyDescriptorPatch(api, global);\n    });\n    Zone.__load_patch('customElements', (global, Zone, api) => {\n        patchCustomElements(global, api);\n    });\n    Zone.__load_patch('XHR', (global, Zone) => {\n        // Treat XMLHttpRequest as a macrotask.\n        patchXHR(global);\n        const XHR_TASK = zoneSymbol('xhrTask');\n        const XHR_SYNC = zoneSymbol('xhrSync');\n        const XHR_LISTENER = zoneSymbol('xhrListener');\n        const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n        const XHR_URL = zoneSymbol('xhrURL');\n        const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n        function patchXHR(window) {\n            const XMLHttpRequest = window['XMLHttpRequest'];\n            if (!XMLHttpRequest) {\n                // XMLHttpRequest is not available in service worker\n                return;\n            }\n            const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n            function findPendingTask(target) { return target[XHR_TASK]; }\n            let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n            let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            if (!oriAddListener) {\n                const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n                if (XMLHttpRequestEventTarget) {\n                    const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                    oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n            }\n            const READY_STATE_CHANGE = 'readystatechange';\n            const SCHEDULED = 'scheduled';\n            function scheduleTask(task) {\n                const data = task.data;\n                const target = data.target;\n                target[XHR_SCHEDULED] = false;\n                target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n                // remove existing event listener\n                const listener = target[XHR_LISTENER];\n                if (!oriAddListener) {\n                    oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n                if (listener) {\n                    oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n                }\n                const newListener = target[XHR_LISTENER] = () => {\n                    if (target.readyState === target.DONE) {\n                        // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                        // readyState=4 multiple times, so we need to check task state here\n                        if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                            // check whether the xhr has registered onload listener\n                            // if that is the case, the task should invoke after all\n                            // onload listeners finish.\n                            const loadTasks = target[Zone.__symbol__('loadfalse')];\n                            if (loadTasks && loadTasks.length > 0) {\n                                const oriInvoke = task.invoke;\n                                task.invoke = function () {\n                                    // need to load the tasks again, because in other\n                                    // load listener, they may remove themselves\n                                    const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                    for (let i = 0; i < loadTasks.length; i++) {\n                                        if (loadTasks[i] === task) {\n                                            loadTasks.splice(i, 1);\n                                        }\n                                    }\n                                    if (!data.aborted && task.state === SCHEDULED) {\n                                        oriInvoke.call(task);\n                                    }\n                                };\n                                loadTasks.push(task);\n                            }\n                            else {\n                                task.invoke();\n                            }\n                        }\n                        else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                            // error occurs when xhr.send()\n                            target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                        }\n                    }\n                };\n                oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n                const storedTask = target[XHR_TASK];\n                if (!storedTask) {\n                    target[XHR_TASK] = task;\n                }\n                sendNative.apply(target, data.args);\n                target[XHR_SCHEDULED] = true;\n                return task;\n            }\n            function placeholderCallback() { }\n            function clearTask(task) {\n                const data = task.data;\n                // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n                // to prevent it from firing. So instead, we store info for the event listener.\n                data.aborted = true;\n                return abortNative.apply(data.target, data.args);\n            }\n            const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n                self[XHR_SYNC] = args[2] == false;\n                self[XHR_URL] = args[1];\n                return openNative.apply(self, args);\n            });\n            const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n            const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n            const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n            const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n                if (Zone.current[fetchTaskScheduling] === true) {\n                    // a fetch is scheduling, so we are using xhr to polyfill fetch\n                    // and because we already schedule macroTask for fetch, we should\n                    // not schedule a macroTask for xhr again\n                    return sendNative.apply(self, args);\n                }\n                if (self[XHR_SYNC]) {\n                    // if the XHR is sync there is no task to schedule, just execute the code.\n                    return sendNative.apply(self, args);\n                }\n                else {\n                    const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                    const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                    if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                        task.state === SCHEDULED) {\n                        // xhr request throw error when send\n                        // we should invoke task instead of leaving a scheduled\n                        // pending macroTask\n                        task.invoke();\n                    }\n                }\n            });\n            const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n                const task = findPendingTask(self);\n                if (task && typeof task.type == 'string') {\n                    // If the XHR has already completed, do nothing.\n                    // If the XHR has already been aborted, do nothing.\n                    // Fix #569, call abort multiple times before done will cause\n                    // macroTask task count be negative number\n                    if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                        return;\n                    }\n                    task.zone.cancelTask(task);\n                }\n                else if (Zone.current[fetchTaskAborting] === true) {\n                    // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                    return abortNative.apply(self, args);\n                }\n                // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n                // task\n                // to cancel. Do nothing.\n            });\n        }\n    });\n    Zone.__load_patch('geolocation', (global) => {\n        /// GEO_LOCATION\n        if (global['navigator'] && global['navigator'].geolocation) {\n            patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n        }\n    });\n    Zone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n        // handle unhandled promise rejection\n        function findPromiseRejectionHandler(evtName) {\n            return function (e) {\n                const eventTasks = findEventTasks(global, evtName);\n                eventTasks.forEach(eventTask => {\n                    // windows has added unhandledrejection event listener\n                    // trigger the event listener\n                    const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                    if (PromiseRejectionEvent) {\n                        const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                        eventTask.invoke(evt);\n                    }\n                });\n            };\n        }\n        if (global['PromiseRejectionEvent']) {\n            Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n                findPromiseRejectionHandler('unhandledrejection');\n            Zone[zoneSymbol('rejectionHandledHandler')] =\n                findPromiseRejectionHandler('rejectionhandled');\n        }\n    });\n\n})));\n"],"sourceRoot":"webpack:///"}