{"version":3,"sources":["./src/app/guards/guest.guard.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts"],"names":["GuestGuard","auth","notifier","router","next","state","authenticated","this","error","navigateByUrl","LoginComponent","http","userData","email","password","minLength","post","environment","apiUrl","loginUrl","value","subscribe","data","onLoginCompleted","user","id","user_name","first_name","last_name","role_id","status_id","created_at","updated_at","token","setUser","then","ok","success","login","routes","path","component","canActivate","redirectTo","AuthRoutingModule","forChild","AuthModule","provide","useClass","multi"],"mappings":"6MASO,Y,MAAMA,EACX,YAAoBC,EAA2BC,EAAuCC,GAAlE,KAAAF,OAA2B,KAAAC,WAAuC,KAAAC,SAGtF,YACEC,EACAC,GAEA,MAAMC,EAAgBC,KAAKN,KAAKK,cAMhC,OALIA,IAEFC,KAAKL,SAASM,MAAM,qBACpBD,KAAKJ,OAAOM,cAAc,aAEpBH,G,6CAdCN,GAAU,gC,yBAAVA,EAAU,QAAVA,EAAU,qBAFT,S,GAEP,G,gECKA,Y,MAAMU,EAGX,YACUC,EACAV,EACAC,EACAC,GAHA,KAAAQ,OACA,KAAAV,OACA,KAAAC,WACA,KAAAC,SAEV,WACEI,KAAKK,SAAW,IAAI,IAAU,CAC5BC,MAAO,IAAI,IAAY,GAAI,IAAWA,OACtCC,SAAU,IAAI,IAAY,GAAI,IAAWC,UAAU,MAIvD,QACER,KAAKI,KAAKK,KAAU,GAAIC,EAAA,EAAYC,UAAYD,EAAA,EAAYE,WAAaZ,KAAKK,SAASQ,OACpFC,UAAUC,GAAQf,KAAKgB,iBAAiBD,IAGvC,iBAAiBA,G,mDACrB,MAAME,EAAO,IAAI,IACfF,EAAKE,KAAKC,GACVH,EAAKE,KAAKE,UACVJ,EAAKE,KAAKX,MACVS,EAAKE,KAAKG,WACVL,EAAKE,KAAKI,UACVN,EAAKE,KAAKK,QACVP,EAAKE,KAAKM,UACVR,EAAKE,KAAKO,WACVT,EAAKE,KAAKQ,WACVV,EAAKW,OACP1B,KAAKN,KAAKiC,QAAQV,GAClBjB,KAAKJ,OAAOM,cAAc,KAAK0B,KAAKC,GAAM7B,KAAKL,SAASmC,QAAQ,UAAYb,EAAKE,gB,6CAlCxEhB,GAAc,0C,uBAAdA,EAAc,41BCd3B,gBACE,gBACE,gBAGE,gBACE,gBACE,cACE,gBAKA,YACE,iBAAS,2BAAe,OAC1B,OACF,OACF,OACF,OACF,OAEA,iBACE,iBACE,iBACE,iBACE,kBACE,kBACE,iBAAuB,iBAAK,OAC9B,OACA,kBACE,mBACE,kBACE,iBAAO,iBAAK,OACZ,oBAOF,OACA,kBACE,iBAAO,oBAAQ,OACf,oBAOF,OACA,iBACE,kBACE,qBAGE,gCAAS,EAAA4B,WAET,mBACF,OACF,OACF,OAMF,OACF,OACF,OACF,OACF,OACF,OACF,OACF,OACF,Q,MA7CsB,wC,sDDhBf,G,gBEHP,MAAMC,EAAiB,CACrB,CACEC,KAAM,SACNC,U,UAAW,EACXC,YAAa,CAAC,MAOhB,CACEF,KAAM,QACNC,UAAW,EACXC,YAAa,CAAC,IAOhB,CACEF,KAAM,KACNG,WAAY,UAQT,Y,MAAMC,G,8BAAAA,I,oDAAAA,IAAiB,SAHnB,CAAC,IAAaC,SAASN,IACtB,O,GAEL,G,gBCdA,Y,MAAMO,G,8BAAAA,I,oDAAAA,IAAU,UAJV,CACT,CAAEC,QAAS,IAAmBC,SAAU,IAAkBC,OAAO,IAClE,SAXQ,CACP,IACA,EACA,Q,GAUG","file":"9.a7bc80f49cb41967fc39.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\nimport { NotificationService } from '../services/notification.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GuestGuard implements CanActivate {\n  constructor(private auth: AuthService, private notifier: NotificationService, private router: Router) {\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n\n    const authenticated = this.auth.authenticated;\n    if (authenticated)\n    {\n      this.notifier.error('You are logged-in');\n      this.router.navigateByUrl('/users/');\n    }\n    return !authenticated;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { AppUser } from 'src/app/models/user.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\nimport { NotificationService } from 'src/app/services/notification.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  userData: FormGroup;\n\n  constructor(\n    private http: HttpClient,\n    private auth: AuthService,\n    private notifier: NotificationService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.userData = new FormGroup({\n      email: new FormControl('', Validators.email),\n      password: new FormControl('', Validators.minLength(8)),\n    });\n  }\n\n  login(): void {\n    this.http.post<any>(`${ environment.apiUrl }/${ environment.loginUrl }`, this.userData.value)\n      .subscribe(data => this.onLoginCompleted(data));\n  }\n\n  async onLoginCompleted(data: any): Promise<void> {\n    const user = new AppUser(\n      data.user.id,\n      data.user.user_name,\n      data.user.email,\n      data.user.first_name,\n      data.user.last_name,\n      data.user.role_id,\n      data.user.status_id,\n      data.user.created_at,\n      data.user.updated_at,\n      data.token);\n    this.auth.setUser(user);\n    this.router.navigateByUrl('/').then(ok => this.notifier.success('Hello, ' + user.user_name));\n  }\n}\n","<div class=\"wrapper\">\n  <div class=\"main-panel w-100\">\n    <nav\n      class=\"navbar navbar-expand-lg navbar-transparent navbar-absolute fixed-top\"\n    >\n      <div class=\"container-fluid\">\n        <div class=\"navbar-wrapper mx-auto\">\n          <a class=\"text-info\" href=\"/\">\n            <img\n              src=\"/assets/img/logo.png\"\n              class=\"mx-auto mb-0 d-block\"\n              height=\"25\"\n            />\n            <p>\n              <strong> Store Dashboard</strong>\n            </p>\n          </a>\n        </div>\n      </div>\n    </nav>\n\n    <div class=\"content\" style=\"margin-top: 150px;\">\n      <div class=\"container-fluid\">\n        <div class=\"row\">\n          <div class=\"col-md-4 mx-auto\">\n            <div class=\"card card-user\">\n              <div class=\"card-header\">\n                <h5 class=\"card-title\">Login</h5>\n              </div>\n              <div class=\"card-body\">\n                <form [formGroup]=\"userData\">\n                  <div class=\"form-group\">\n                    <label>Email</label>\n                    <input\n                      type=\"email\"\n                      class=\"form-control\"\n                      placeholder=\"Email\"\n                      formControlName=\"email\"\n                      autocomplete=\"email\"\n                    />\n                  </div>\n                  <div class=\"form-group\">\n                    <label>Password</label>\n                    <input\n                      type=\"password\"\n                      class=\"form-control\"\n                      placeholder=\"Password\"\n                      formControlName=\"password\"\n                      autocomplete=\"current-password\"\n                    />\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"update ml-auto mr-auto\">\n                      <button\n                        type=\"button\"\n                        class=\"btn btn-primary btn-round\"\n                        (click)=\"login()\"\n                      >\n                        Login\n                      </button>\n                    </div>\n                  </div>\n                  <!-- <div class=\"row\">\n                    <div class=\"col-12\">\n                      <a [routerLink]=\"['/auth/register']\">Register</a>\n                    </div>\n                  </div> -->\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { GuestGuard } from 'src/app/guards/guest.guard';\n\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { MeComponent } from './me/me.component';\nimport { AuthGuard } from '../guards/auth.guard';\nimport { LogoutComponent } from './logout/logout.component';\n\nconst routes: Routes = [\n  {\n    path: 'logout',\n    component: LogoutComponent,\n    canActivate: [AuthGuard]\n  },\n  // {\n  //   path: 'me',\n  //   component: MeComponent,\n  //   canActivate: [AuthGuard]\n  // },\n  {\n    path: 'login',\n    component: LoginComponent,\n    canActivate: [GuestGuard]\n  },\n  // {\n  //   path: 'register',\n  //   component: RegisterComponent,\n  //   canActivate: [GuestGuard]\n  // },\n  {\n    path: '**',\n    redirectTo: 'login'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { MeComponent } from './me/me.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { LogoutComponent } from './logout/logout.component';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ErrorInterceptor } from '../interceptors/error.interceptor';\n\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent, MeComponent, LogoutComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    ReactiveFormsModule,\n  ],\n  exports: [\n    MeComponent,\n    LogoutComponent\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\n  ]\n})\nexport class AuthModule { }\n"],"sourceRoot":"webpack:///"}