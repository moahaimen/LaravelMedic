{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/register/register.component.ts","./src/app/auth/register/register.component.html","./src/app/guards/guest.guard.ts"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { GuestGuard } from 'src/app/guards/guest.guard';\n\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { MeComponent } from './me/me.component';\nimport { AuthGuard } from '../guards/auth.guard';\n\nconst routes: Routes = [\n  // {\n  //   path: 'logout',\n  //   canActivate: [AuthGuard]\n  // },\n  // {\n  //   path: 'me',\n  //   component: MeComponent,\n  //   canActivate: [AuthGuard]\n  // },\n  {\n    path: 'login',\n    component: LoginComponent,\n    canActivate: [GuestGuard]\n  },\n  {\n    path: 'register',\n    component: RegisterComponent,\n    canActivate: [GuestGuard]\n  },\n  {\n    path: '**',\n    redirectTo: 'login'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { MeComponent } from './me/me.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { LogoutComponent } from './logout/logout.component';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ErrorInterceptor } from '../interceptors/error.interceptor';\n\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent, MeComponent, LogoutComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    ReactiveFormsModule,\n  ],\n  exports: [\n    MeComponent,\n    LogoutComponent\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\n  ]\n})\nexport class AuthModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { AppUser } from 'src/app/models/user.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\nimport { NotificationService } from 'src/app/services/notification.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  userData: FormGroup;\n\n  constructor(\n    private http: HttpClient,\n    private auth: AuthService,\n    private notifier: NotificationService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.userData = new FormGroup({\n      email: new FormControl('ragnar@mail.com', Validators.email),\n      password: new FormControl('Aa123456'),\n    });\n  }\n\n  login(): void {\n    this.http.post<any>(`${ environment.apiUrl }/${ environment.loginUrl }`, this.userData.value).subscribe(data => {\n      const user = new AppUser(\n        data.user.id,\n        data.user.user_name,\n        data.user.email,\n        data.user.first_name,\n        data.user.last_name,\n        data.user.role_id,\n        data.user.status_id,\n        data.user.created_at,\n        data.user.updated_at,\n        data.token);\n      console.log(user);\n      this.auth.setUser(user);\n      this.router.navigateByUrl('/users/').then(ok => this.notifier.success('Hello, ' + user.username));\n    });\n  }\n}\n","<div class=\"wrapper\">\n  <div class=\"main-panel w-100\">\n    <nav class=\"navbar navbar-expand-lg navbar-transparent navbar-absolute fixed-top\">\n      <div class=\"container-fluid\">\n        <div class=\"navbar-wrapper mx-auto\">\n          <a class=\"text-info\" href=\"/\">\n            <img src=\"/assets/img/logo.png\" class=\"mx-auto mb-0 d-block\" height=\"25\" />\n            <p>\n              <strong> Store Dashboard</strong>\n            </p>\n          </a>\n        </div>\n      </div>\n    </nav>\n\n    <div class=\"content\" style=\"margin-top: 150px;\">\n      <div class=\"container-fluid\">\n        <div class=\"row\">\n          <div class=\"col-md-4 mx-auto\">\n            <div class=\"card card-user\">\n              <div class=\"card-header\">\n                <h5 class=\"card-title\">Login</h5>\n              </div>\n              <div class=\"card-body\">\n                <form [formGroup]=\"userData\">\n                  <div class=\"form-group\">\n                    <label>Username</label>\n                    <input type=\"email\" class=\"form-control\" placeholder=\"Username\" formControlName=\"email\" />\n                  </div>\n                  <div class=\"form-group\">\n                    <label>Password</label>\n                    <input type=\"password\" class=\"form-control\" placeholder=\"Password\" formControlName=\"password\" />\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"update ml-auto mr-auto\">\n                      <button type=\"button\" class=\"btn btn-primary btn-round\" (click)=\"login()\">\n                        Login\n                      </button>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-12\">\n                      <a [routerLink]=\"['/auth/register']\">Register</a>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Role } from 'src/app/models/role.model';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent {\n  userData: FormGroup;\n\n  roles: Role[];\n\n  constructor(private http: HttpClient, private router: Router) {\n\n    http.get<any[]>(environment.prepareUrl('rolesFetchUrl')).toPromise().then(res => this.roles = res);\n\n    this.userData = new FormGroup({\n      user_name: new FormControl(null, Validators.required),\n      email: new FormControl(null, Validators.required),\n      first_name: new FormControl(null, Validators.required),\n      last_name: new FormControl(null, Validators.required),\n      password: new FormControl(null, Validators.minLength(8)),\n      password_confirmation: new FormControl(null, Validators.minLength(8)),\n      role_id: new FormControl(null, Validators.required)\n    });\n  }\n\n  async register(): Promise<void> {\n    const result = await this.http\n      .post(\n        environment.prepareUrl('registerUrl'),\n        this.userData.value)\n      .toPromise();\n\n    console.log(result);\n    if (result)\n    {\n      this.router.navigateByUrl('/auth/login');\n    }\n  }\n}\n","<div class=\"wrapper\">\n  <div class=\"main-panel w-100\">\n    <nav class=\"navbar navbar-expand-lg navbar-transparent navbar-absolute fixed-top border-bottom-0\">\n      <div class=\"container-fluid\">\n        <div class=\"navbar-wrapper mx-auto\">\n          <a class=\"text-warning\" href=\"/\">\n            <img src=\"/assets/img/logo.png\" class=\"mx-auto mb-0 d-block\" height=\"25\" />\n            <p>\n              <strong> Store Dashboard</strong>\n            </p>\n          </a>\n        </div>\n      </div>\n    </nav>\n\n    <div class=\"content\" style=\"margin-top: 100px;\">\n      <div class=\"container-fluid\">\n        <div class=\"row\">\n          <div class=\"col-md-4 mx-auto\">\n            <div class=\"card card-user\">\n              <div class=\"card-header\">\n                <h5 class=\"card-title\">Register</h5>\n              </div>\n              <div class=\"card-body\">\n                <form [formGroup]=\"userData\">\n                  <div class=\"row\">\n                    <div class=\"col-12 px-3\">\n                      <div class=\"form-group\">\n                        <label>Username</label>\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Username\" formControlName=\"user_name\" autocomplete=\"name\" />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-12 px-3\">\n                      <div class=\"form-group\">\n                        <label>Email address</label>\n                        <input type=\"email\" class=\"form-control\" placeholder=\"Email\" formControlName=\"email\" autocomplete=\"email\" />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-6 pr-1\">\n                      <div class=\"form-group\">\n                        <label>First Name</label>\n                        <input type=\"text\" class=\"form-control\" placeholder=\"First Name\" formControlName=\"first_name\" autocomplete=\"given-name\" />\n                      </div>\n                    </div>\n                    <div class=\"col-md-6 pl-1\">\n                      <div class=\"form-group\">\n                        <label>Last Name</label>\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Last Name\" formControlName=\"last_name\" autocomplete=\"family-name\" />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-12\">\n                      <div class=\"form-group\">\n                        <label>Password</label>\n                        <input type=\"password\" class=\"form-control\" placeholder=\"Password\" formControlName=\"password\" autocomplete=\"new-password\" />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-12\">\n                      <div class=\"form-group\">\n                        <label>Password Confirmation</label>\n                        <input type=\"password\" class=\"form-control\" placeholder=\"Re-type password\" formControlName=\"password_confirmation\" autocomplete=\"new-password\" />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-12 px-3\">\n                      <div class=\"form-group\">\n                        <label>Role</label>\n                        <select class=\"form-control\" placeholder=\"Role\" formControlName=\"role_id\">\n                          <option [value]=\"r.id\" *ngFor=\"let r of roles\">{{\n                            r.name\n                          }}</option>\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"update ml-auto mr-auto\">\n                      <button type=\"submit\" class=\"btn btn-warning btn-round\" [disabled]=\"!userData.valid\" (click)=\"register()\">\n                        Submit\n                      </button>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-12\">\n                      <a [routerLink]=\"['/auth/login']\">Login</a>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\nimport { NotificationService } from '../services/notification.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GuestGuard implements CanActivate {\n  constructor(private auth: AuthService, private notifier: NotificationService, private router: Router) {\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n\n    const authenticated = this.auth.authenticated;\n    if (authenticated)\n    {\n      this.notifier.error('You are logged-in');\n      this.router.navigateByUrl('/users/');\n    }\n    return !authenticated;\n  }\n}\n"],"sourceRoot":"webpack:///"}